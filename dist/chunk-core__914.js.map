{"version":3,"file":"chunk-core__914.js","sources":["webpack://@nextcloud/app-core/../node_modules/@nextcloud/browserslist-config/browserlist.config.js","webpack://@nextcloud/app-core/../node_modules/browserslist/browser.js","webpack://@nextcloud/app-core/../node_modules/browserslist/error.js","webpack://@nextcloud/app-core/../node_modules/browserslist/index.js","webpack://@nextcloud/app-core/../node_modules/browserslist/parse.js","webpack://@nextcloud/app-core/../node_modules/caniuse-lite/data/agents.js","webpack://@nextcloud/app-core/../node_modules/caniuse-lite/data/browserVersions.js","webpack://@nextcloud/app-core/../node_modules/caniuse-lite/data/browsers.js","webpack://@nextcloud/app-core/../node_modules/caniuse-lite/dist/unpacker/agents.js","webpack://@nextcloud/app-core/../node_modules/caniuse-lite/dist/unpacker/browserVersions.js","webpack://@nextcloud/app-core/../node_modules/caniuse-lite/dist/unpacker/browsers.js","webpack://@nextcloud/app-core/../node_modules/electron-to-chromium/versions.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/compat-transpiler/index.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/compat-transpiler/runtime/index.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/compat-transpiler/transforms/compat-dotall-s-transform.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/compat-transpiler/transforms/compat-named-capturing-groups-transform.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/compat-transpiler/transforms/compat-x-flag-transform.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/compat-transpiler/transforms/index.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/generator/index.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/interpreter/finite-automaton/dfa/dfa-minimizer.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/interpreter/finite-automaton/dfa/dfa.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/interpreter/finite-automaton/index.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/interpreter/finite-automaton/nfa/builders.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/interpreter/finite-automaton/nfa/nfa-from-regexp.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/interpreter/finite-automaton/nfa/nfa-state.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/interpreter/finite-automaton/nfa/nfa.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/interpreter/finite-automaton/special-symbols.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/interpreter/finite-automaton/state.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/optimizer/index.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/optimizer/transforms/char-case-insensitive-lowercase-transform.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/optimizer/transforms/char-class-classranges-merge-transform.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/optimizer/transforms/char-class-classranges-to-chars-transform.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/optimizer/transforms/char-class-remove-duplicates-transform.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/optimizer/transforms/char-class-to-meta-transform.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/optimizer/transforms/char-class-to-single-char-transform.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/optimizer/transforms/char-code-to-simple-char-transform.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/optimizer/transforms/char-escape-unescape-transform.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/optimizer/transforms/char-surrogate-pair-to-single-unicode-transform.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/optimizer/transforms/combine-repeating-patterns-transform.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/optimizer/transforms/disjunction-remove-duplicates-transform.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/optimizer/transforms/group-single-chars-to-char-class.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/optimizer/transforms/index.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/optimizer/transforms/quantifier-range-to-symbol-transform.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/optimizer/transforms/quantifiers-merge-transform.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/optimizer/transforms/remove-empty-group-transform.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/optimizer/transforms/ungroup-transform.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/parser/generated/regexp-tree.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/parser/index.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/parser/unicode/parser-unicode-properties.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/regexp-tree.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/transform/index.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/transform/utils.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/traverse/index.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/traverse/node-path.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/dist/utils/clone.js","webpack://@nextcloud/app-core/../node_modules/regexp-tree/index.js","webpack://@nextcloud/app-core/../node_modules/baseline-browser-mapping/dist/index.cjs","webpack://@nextcloud/app-core/./src/logger.js","webpack://@nextcloud/app-core/./src/services/BrowserStorageService.js","webpack://@nextcloud/app-core/./src/services/BrowsersListService.js","webpack://@nextcloud/app-core/./src/utils/RedirectUnsupportedBrowsers.js","webpack://@nextcloud/app-core/../node_modules/@nextcloud/router/dist/index.mjs","webpack://@nextcloud/app-core/../node_modules/browserslist-useragent-regexp/dist/index.js","webpack://@nextcloud/app-core/../node_modules/ua-regexes-lite/index.js"],"sourcesContent":["module.exports = [\n  '>0.25%',\n  'not ie 11',\n  'not op_mini all',\n  'not dead',\n  'Firefox ESR',\n];\n","var BrowserslistError = require('./error')\n\nfunction noop() {}\n\nmodule.exports = {\n  loadQueries: function loadQueries() {\n    throw new BrowserslistError(\n      'Sharable configs are not supported in client-side build of Browserslist'\n    )\n  },\n\n  getStat: function getStat(opts) {\n    return opts.stats\n  },\n\n  loadConfig: function loadConfig(opts) {\n    if (opts.config) {\n      throw new BrowserslistError(\n        'Browserslist config are not supported in client-side build'\n      )\n    }\n  },\n\n  loadCountry: function loadCountry() {\n    throw new BrowserslistError(\n      'Country statistics are not supported ' +\n        'in client-side build of Browserslist'\n    )\n  },\n\n  loadFeature: function loadFeature() {\n    throw new BrowserslistError(\n      'Supports queries are not available in client-side build of Browserslist'\n    )\n  },\n\n  currentNode: function currentNode(resolve, context) {\n    return resolve(['maintained node versions'], context)[0]\n  },\n\n  parseConfig: noop,\n\n  readConfig: noop,\n\n  findConfig: noop,\n\n  findConfigFile: noop,\n\n  clearCaches: noop,\n\n  oldDataWarning: noop,\n\n  env: {}\n}\n","function BrowserslistError(message) {\n  this.name = 'BrowserslistError'\n  this.message = message\n  this.browserslist = true\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, BrowserslistError)\n  }\n}\n\nBrowserslistError.prototype = Error.prototype\n\nmodule.exports = BrowserslistError\n","var bbm = require('baseline-browser-mapping')\nvar jsReleases = require('node-releases/data/processed/envs.json')\nvar agents = require('caniuse-lite/dist/unpacker/agents').agents\nvar e2c = require('electron-to-chromium/versions')\nvar jsEOL = require('node-releases/data/release-schedule/release-schedule.json')\nvar path = require('path')\n\nvar BrowserslistError = require('./error')\nvar env = require('./node')\nvar parseWithoutCache = require('./parse') // Will load browser.js in webpack\n\nvar YEAR = 365.259641 * 24 * 60 * 60 * 1000\nvar ANDROID_EVERGREEN_FIRST = '37'\nvar OP_MOB_BLINK_FIRST = 14\n\n// Helpers\n\nfunction isVersionsMatch(versionA, versionB) {\n  return (versionA + '.').indexOf(versionB + '.') === 0\n}\n\nfunction isEolReleased(name) {\n  var version = name.slice(1)\n  return browserslist.nodeVersions.some(function (i) {\n    return isVersionsMatch(i, version)\n  })\n}\n\nfunction normalize(versions) {\n  return versions.filter(function (version) {\n    return typeof version === 'string'\n  })\n}\n\nfunction normalizeElectron(version) {\n  var versionToUse = version\n  if (version.split('.').length === 3) {\n    versionToUse = version.split('.').slice(0, -1).join('.')\n  }\n  return versionToUse\n}\n\nfunction nameMapper(name) {\n  return function mapName(version) {\n    return name + ' ' + version\n  }\n}\n\nfunction getMajor(version) {\n  return parseInt(version.split('.')[0])\n}\n\nfunction getMajorVersions(released, number) {\n  if (released.length === 0) return []\n  var majorVersions = uniq(released.map(getMajor))\n  var minimum = majorVersions[majorVersions.length - number]\n  if (!minimum) {\n    return released\n  }\n  var selected = []\n  for (var i = released.length - 1; i >= 0; i--) {\n    if (minimum > getMajor(released[i])) break\n    selected.unshift(released[i])\n  }\n  return selected\n}\n\nfunction uniq(array) {\n  var filtered = []\n  for (var i = 0; i < array.length; i++) {\n    if (filtered.indexOf(array[i]) === -1) filtered.push(array[i])\n  }\n  return filtered\n}\n\nfunction fillUsage(result, name, data) {\n  for (var i in data) {\n    result[name + ' ' + i] = data[i]\n  }\n}\n\nfunction generateFilter(sign, version) {\n  version = parseFloat(version)\n  if (sign === '>') {\n    return function (v) {\n      return parseLatestFloat(v) > version\n    }\n  } else if (sign === '>=') {\n    return function (v) {\n      return parseLatestFloat(v) >= version\n    }\n  } else if (sign === '<') {\n    return function (v) {\n      return parseFloat(v) < version\n    }\n  } else {\n    return function (v) {\n      return parseFloat(v) <= version\n    }\n  }\n\n  function parseLatestFloat(v) {\n    return parseFloat(v.split('-')[1] || v)\n  }\n}\n\nfunction generateSemverFilter(sign, version) {\n  version = version.split('.').map(parseSimpleInt)\n  version[1] = version[1] || 0\n  version[2] = version[2] || 0\n  if (sign === '>') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(v, version) > 0\n    }\n  } else if (sign === '>=') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(v, version) >= 0\n    }\n  } else if (sign === '<') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(version, v) > 0\n    }\n  } else {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(version, v) >= 0\n    }\n  }\n}\n\nfunction parseSimpleInt(x) {\n  return parseInt(x)\n}\n\nfunction compare(a, b) {\n  if (a < b) return -1\n  if (a > b) return +1\n  return 0\n}\n\nfunction compareSemver(a, b) {\n  return (\n    compare(parseInt(a[0]), parseInt(b[0])) ||\n    compare(parseInt(a[1] || '0'), parseInt(b[1] || '0')) ||\n    compare(parseInt(a[2] || '0'), parseInt(b[2] || '0'))\n  )\n}\n\n// this follows the npm-like semver behavior\nfunction semverFilterLoose(operator, range) {\n  range = range.split('.').map(parseSimpleInt)\n  if (typeof range[1] === 'undefined') {\n    range[1] = 'x'\n  }\n  // ignore any patch version because we only return minor versions\n  // range[2] = 'x'\n  switch (operator) {\n    case '<=':\n      return function (version) {\n        version = version.split('.').map(parseSimpleInt)\n        return compareSemverLoose(version, range) <= 0\n      }\n    case '>=':\n    default:\n      return function (version) {\n        version = version.split('.').map(parseSimpleInt)\n        return compareSemverLoose(version, range) >= 0\n      }\n  }\n}\n\n// this follows the npm-like semver behavior\nfunction compareSemverLoose(version, range) {\n  if (version[0] !== range[0]) {\n    return version[0] < range[0] ? -1 : +1\n  }\n  if (range[1] === 'x') {\n    return 0\n  }\n  if (version[1] !== range[1]) {\n    return version[1] < range[1] ? -1 : +1\n  }\n  return 0\n}\n\nfunction resolveVersion(data, version) {\n  if (data.versions.indexOf(version) !== -1) {\n    return version\n  } else if (browserslist.versionAliases[data.name][version]) {\n    return browserslist.versionAliases[data.name][version]\n  } else {\n    return false\n  }\n}\n\nfunction normalizeVersion(data, version) {\n  var resolved = resolveVersion(data, version)\n  if (resolved) {\n    return resolved\n  } else if (data.versions.length === 1) {\n    return data.versions[0]\n  } else {\n    return false\n  }\n}\n\nfunction filterByYear(since, context) {\n  since = since / 1000\n  return Object.keys(agents).reduce(function (selected, name) {\n    var data = byName(name, context)\n    if (!data) return selected\n    var versions = Object.keys(data.releaseDate).filter(function (v) {\n      var date = data.releaseDate[v]\n      return date !== null && date >= since\n    })\n    return selected.concat(versions.map(nameMapper(data.name)))\n  }, [])\n}\n\nfunction cloneData(data) {\n  return {\n    name: data.name,\n    versions: data.versions,\n    released: data.released,\n    releaseDate: data.releaseDate\n  }\n}\n\nfunction byName(name, context) {\n  name = name.toLowerCase()\n  name = browserslist.aliases[name] || name\n  if (context.mobileToDesktop && browserslist.desktopNames[name]) {\n    var desktop = browserslist.data[browserslist.desktopNames[name]]\n    if (name === 'android') {\n      return normalizeAndroidData(cloneData(browserslist.data[name]), desktop)\n    } else {\n      var cloned = cloneData(desktop)\n      cloned.name = name\n      return cloned\n    }\n  }\n  return browserslist.data[name]\n}\n\nfunction normalizeAndroidVersions(androidVersions, chromeVersions) {\n  var iFirstEvergreen = chromeVersions.indexOf(ANDROID_EVERGREEN_FIRST)\n  return androidVersions\n    .filter(function (version) {\n      return /^(?:[2-4]\\.|[34]$)/.test(version)\n    })\n    .concat(chromeVersions.slice(iFirstEvergreen))\n}\n\nfunction copyObject(obj) {\n  var copy = {}\n  for (var key in obj) {\n    copy[key] = obj[key]\n  }\n  return copy\n}\n\nfunction normalizeAndroidData(android, chrome) {\n  android.released = normalizeAndroidVersions(android.released, chrome.released)\n  android.versions = normalizeAndroidVersions(android.versions, chrome.versions)\n  android.releaseDate = copyObject(android.releaseDate)\n  android.released.forEach(function (v) {\n    if (android.releaseDate[v] === undefined) {\n      android.releaseDate[v] = chrome.releaseDate[v]\n    }\n  })\n  return android\n}\n\nfunction checkName(name, context) {\n  var data = byName(name, context)\n  if (!data) throw new BrowserslistError('Unknown browser ' + name)\n  return data\n}\n\nfunction unknownQuery(query) {\n  return new BrowserslistError(\n    'Unknown browser query `' +\n      query +\n      '`. ' +\n      'Maybe you are using old Browserslist or made typo in query.'\n  )\n}\n\n// Adjusts last X versions queries for some mobile browsers,\n// where caniuse data jumps from a legacy version to the latest\nfunction filterJumps(list, name, nVersions, context) {\n  var jump = 1\n  switch (name) {\n    case 'android':\n      if (context.mobileToDesktop) return list\n      var released = browserslist.data.chrome.released\n      jump = released.length - released.indexOf(ANDROID_EVERGREEN_FIRST)\n      break\n    case 'op_mob':\n      var latest = browserslist.data.op_mob.released.slice(-1)[0]\n      jump = getMajor(latest) - OP_MOB_BLINK_FIRST + 1\n      break\n    default:\n      return list\n  }\n  if (nVersions <= jump) {\n    return list.slice(-1)\n  }\n  return list.slice(jump - 1 - nVersions)\n}\n\nfunction isSupported(flags, withPartial) {\n  return (\n    typeof flags === 'string' &&\n    (flags.indexOf('y') >= 0 || (withPartial && flags.indexOf('a') >= 0))\n  )\n}\n\nfunction resolve(queries, context) {\n  return parseQueries(queries).reduce(function (result, node, index) {\n    if (node.not && index === 0) {\n      throw new BrowserslistError(\n        'Write any browsers query (for instance, `defaults`) ' +\n          'before `' +\n          node.query +\n          '`'\n      )\n    }\n    var type = QUERIES[node.type]\n    var array = type.select.call(browserslist, context, node).map(function (j) {\n      var parts = j.split(' ')\n      if (parts[1] === '0') {\n        return parts[0] + ' ' + byName(parts[0], context).versions[0]\n      } else {\n        return j\n      }\n    })\n\n    if (node.compose === 'and') {\n      if (node.not) {\n        return result.filter(function (j) {\n          return array.indexOf(j) === -1\n        })\n      } else {\n        return result.filter(function (j) {\n          return array.indexOf(j) !== -1\n        })\n      }\n    } else {\n      if (node.not) {\n        var filter = {}\n        array.forEach(function (j) {\n          filter[j] = true\n        })\n        return result.filter(function (j) {\n          return !filter[j]\n        })\n      }\n      return result.concat(array)\n    }\n  }, [])\n}\n\nfunction prepareOpts(opts) {\n  if (typeof opts === 'undefined') opts = {}\n\n  if (typeof opts.path === 'undefined') {\n    opts.path = path.resolve ? path.resolve('.') : '.'\n  }\n\n  return opts\n}\n\nfunction prepareQueries(queries, opts) {\n  if (typeof queries === 'undefined' || queries === null) {\n    var config = browserslist.loadConfig(opts)\n    if (config) {\n      queries = config\n    } else {\n      queries = browserslist.defaults\n    }\n  }\n\n  return queries\n}\n\nfunction checkQueries(queries) {\n  if (!(typeof queries === 'string' || Array.isArray(queries))) {\n    throw new BrowserslistError(\n      'Browser queries must be an array or string. Got ' + typeof queries + '.'\n    )\n  }\n}\n\nvar cache = {}\nvar parseCache = {}\n\nfunction browserslist(queries, opts) {\n  opts = prepareOpts(opts)\n  queries = prepareQueries(queries, opts)\n  checkQueries(queries)\n\n  var needsPath = parseQueries(queries).some(function (node) {\n    return QUERIES[node.type].needsPath\n  })\n  var context = {\n    ignoreUnknownVersions: opts.ignoreUnknownVersions,\n    dangerousExtend: opts.dangerousExtend,\n    mobileToDesktop: opts.mobileToDesktop,\n    env: opts.env\n  }\n  // Removing to avoid using context.path without marking query as needsPath\n  if (needsPath) {\n    context.path = opts.path\n  }\n\n  env.oldDataWarning(browserslist.data)\n  var stats = env.getStat(opts, browserslist.data)\n  if (stats) {\n    context.customUsage = {}\n    for (var browser in stats) {\n      fillUsage(context.customUsage, browser, stats[browser])\n    }\n  }\n\n  var cacheKey = JSON.stringify([queries, context])\n  if (cache[cacheKey]) return cache[cacheKey]\n\n  var result = uniq(resolve(queries, context)).sort(function (name1, name2) {\n    name1 = name1.split(' ')\n    name2 = name2.split(' ')\n    if (name1[0] === name2[0]) {\n      // assumptions on caniuse data\n      // 1) version ranges never overlaps\n      // 2) if version is not a range, it never contains `-`\n      var version1 = name1[1].split('-')[0]\n      var version2 = name2[1].split('-')[0]\n      return compareSemver(version2.split('.'), version1.split('.'))\n    } else {\n      return compare(name1[0], name2[0])\n    }\n  })\n  if (!env.env.BROWSERSLIST_DISABLE_CACHE) {\n    cache[cacheKey] = result\n  }\n  return result\n}\n\nfunction parseQueries(queries) {\n  var cacheKey = JSON.stringify(queries)\n  if (cacheKey in parseCache) return parseCache[cacheKey]\n  var result = parseWithoutCache(QUERIES, queries)\n  if (!env.env.BROWSERSLIST_DISABLE_CACHE) {\n    parseCache[cacheKey] = result\n  }\n  return result\n}\n\nfunction loadCustomUsage(context, config) {\n  var stats = env.loadStat(context, config, browserslist.data)\n  if (stats) {\n    context.customUsage = {}\n    for (var browser in stats) {\n      fillUsage(context.customUsage, browser, stats[browser])\n    }\n  }\n  if (!context.customUsage) {\n    throw new BrowserslistError('Custom usage statistics was not provided')\n  }\n  return context.customUsage\n}\n\nbrowserslist.parse = function (queries, opts) {\n  opts = prepareOpts(opts)\n  queries = prepareQueries(queries, opts)\n  checkQueries(queries)\n  return parseQueries(queries)\n}\n\n// Will be filled by Can I Use data below\nbrowserslist.cache = {}\nbrowserslist.data = {}\nbrowserslist.usage = {\n  global: {},\n  custom: null\n}\n\n// Default browsers query\nbrowserslist.defaults = ['> 0.5%', 'last 2 versions', 'Firefox ESR', 'not dead']\n\n// Browser names aliases\nbrowserslist.aliases = {\n  fx: 'firefox',\n  ff: 'firefox',\n  ios: 'ios_saf',\n  explorer: 'ie',\n  blackberry: 'bb',\n  explorermobile: 'ie_mob',\n  operamini: 'op_mini',\n  operamobile: 'op_mob',\n  chromeandroid: 'and_chr',\n  firefoxandroid: 'and_ff',\n  ucandroid: 'and_uc',\n  qqandroid: 'and_qq'\n}\n\n// Can I Use only provides a few versions for some browsers (e.g. and_chr).\n// Fallback to a similar browser for unknown versions\n// Note op_mob is not included as its chromium versions are not in sync with Opera desktop\nbrowserslist.desktopNames = {\n  and_chr: 'chrome',\n  and_ff: 'firefox',\n  ie_mob: 'ie',\n  android: 'chrome' // has extra processing logic\n}\n\n// Aliases to work with joined versions like `ios_saf 7.0-7.1`\nbrowserslist.versionAliases = {}\n\nbrowserslist.clearCaches = env.clearCaches\nbrowserslist.parseConfig = env.parseConfig\nbrowserslist.readConfig = env.readConfig\nbrowserslist.findConfigFile = env.findConfigFile\nbrowserslist.findConfig = env.findConfig\nbrowserslist.loadConfig = env.loadConfig\n\nbrowserslist.coverage = function (browsers, stats) {\n  var data\n  if (typeof stats === 'undefined') {\n    data = browserslist.usage.global\n  } else if (stats === 'my stats') {\n    var opts = {}\n    opts.path = path.resolve ? path.resolve('.') : '.'\n    var customStats = env.getStat(opts)\n    if (!customStats) {\n      throw new BrowserslistError('Custom usage statistics was not provided')\n    }\n    data = {}\n    for (var browser in customStats) {\n      fillUsage(data, browser, customStats[browser])\n    }\n  } else if (typeof stats === 'string') {\n    if (stats.length > 2) {\n      stats = stats.toLowerCase()\n    } else {\n      stats = stats.toUpperCase()\n    }\n    env.loadCountry(browserslist.usage, stats, browserslist.data)\n    data = browserslist.usage[stats]\n  } else {\n    if ('dataByBrowser' in stats) {\n      stats = stats.dataByBrowser\n    }\n    data = {}\n    for (var name in stats) {\n      for (var version in stats[name]) {\n        data[name + ' ' + version] = stats[name][version]\n      }\n    }\n  }\n\n  return browsers.reduce(function (all, i) {\n    var usage = data[i]\n    if (usage === undefined) {\n      usage = data[i.replace(/ \\S+$/, ' 0')]\n    }\n    return all + (usage || 0)\n  }, 0)\n}\n\nfunction nodeQuery(context, node) {\n  var matched = browserslist.nodeVersions.filter(function (i) {\n    return isVersionsMatch(i, node.version)\n  })\n  if (matched.length === 0) {\n    if (context.ignoreUnknownVersions) {\n      return []\n    } else {\n      throw new BrowserslistError(\n        'Unknown version ' + node.version + ' of Node.js'\n      )\n    }\n  }\n  return ['node ' + matched[matched.length - 1]]\n}\n\nfunction sinceQuery(context, node) {\n  var year = parseInt(node.year)\n  var month = parseInt(node.month || '01') - 1\n  var day = parseInt(node.day || '01')\n  return filterByYear(Date.UTC(year, month, day, 0, 0, 0), context)\n}\n\nfunction bbmTransform(bbmVersions) {\n  var browsers = {\n    chrome: 'chrome',\n    chrome_android: 'and_chr',\n    edge: 'edge',\n    firefox: 'firefox',\n    firefox_android: 'and_ff',\n    safari: 'safari',\n    safari_ios: 'ios_saf',\n    webview_android: 'android',\n    samsunginternet_android: 'samsung',\n    opera_android: 'op_mob',\n    opera: 'opera',\n    qq_android: 'and_qq',\n    uc_android: 'and_uc',\n    kai_os: 'kaios'\n  }\n\n  return bbmVersions\n    .filter(function (version) {\n      return Object.keys(browsers).indexOf(version.browser) !== -1\n    })\n    .map(function (version) {\n      return browsers[version.browser] + ' >= ' + version.version\n    })\n}\n\nfunction coverQuery(context, node) {\n  var coverage = parseFloat(node.coverage)\n  var usage = browserslist.usage.global\n  if (node.place) {\n    if (node.place.match(/^my\\s+stats$/i)) {\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided')\n      }\n      usage = context.customUsage\n    } else {\n      var place\n      if (node.place.length === 2) {\n        place = node.place.toUpperCase()\n      } else {\n        place = node.place.toLowerCase()\n      }\n      env.loadCountry(browserslist.usage, place, browserslist.data)\n      usage = browserslist.usage[place]\n    }\n  } else if (node.config) {\n    usage = loadCustomUsage(context, node.config)\n  }\n  var versions = Object.keys(usage).sort(function (a, b) {\n    return usage[b] - usage[a]\n  })\n  var covered = 0\n  var result = []\n  var version\n  for (var i = 0; i < versions.length; i++) {\n    version = versions[i]\n    if (usage[version] === 0) break\n    covered += usage[version]\n    result.push(version)\n    if (covered >= coverage) break\n  }\n  return result\n}\n\nvar QUERIES = {\n  last_major_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      return Object.keys(agents).reduce(function (selected, name) {\n        var data = byName(name, context)\n        if (!data) return selected\n        var list = getMajorVersions(data.released, node.versions)\n        list = list.map(nameMapper(data.name))\n        list = filterJumps(list, data.name, node.versions, context)\n        return selected.concat(list)\n      }, [])\n    }\n  },\n  last_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+versions?$/i,\n    select: function (context, node) {\n      return Object.keys(agents).reduce(function (selected, name) {\n        var data = byName(name, context)\n        if (!data) return selected\n        var list = data.released.slice(-node.versions)\n        list = list.map(nameMapper(data.name))\n        list = filterJumps(list, data.name, node.versions, context)\n        return selected.concat(list)\n      }, [])\n    }\n  },\n  last_electron_major_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+electron\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      var validVersions = getMajorVersions(Object.keys(e2c), node.versions)\n      return validVersions.map(function (i) {\n        return 'chrome ' + e2c[i]\n      })\n    }\n  },\n  last_node_major_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+node\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      return getMajorVersions(browserslist.nodeVersions, node.versions).map(\n        function (version) {\n          return 'node ' + version\n        }\n      )\n    }\n  },\n  last_browser_major_versions: {\n    matches: ['versions', 'browser'],\n    regexp: /^last\\s+(\\d+)\\s+(\\w+)\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context)\n      var validVersions = getMajorVersions(data.released, node.versions)\n      var list = validVersions.map(nameMapper(data.name))\n      list = filterJumps(list, data.name, node.versions, context)\n      return list\n    }\n  },\n  last_electron_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+electron\\s+versions?$/i,\n    select: function (context, node) {\n      return Object.keys(e2c)\n        .slice(-node.versions)\n        .map(function (i) {\n          return 'chrome ' + e2c[i]\n        })\n    }\n  },\n  last_node_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+node\\s+versions?$/i,\n    select: function (context, node) {\n      return browserslist.nodeVersions\n        .slice(-node.versions)\n        .map(function (version) {\n          return 'node ' + version\n        })\n    }\n  },\n  last_browser_versions: {\n    matches: ['versions', 'browser'],\n    regexp: /^last\\s+(\\d+)\\s+(\\w+)\\s+versions?$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context)\n      var list = data.released.slice(-node.versions).map(nameMapper(data.name))\n      list = filterJumps(list, data.name, node.versions, context)\n      return list\n    }\n  },\n  unreleased_versions: {\n    matches: [],\n    regexp: /^unreleased\\s+versions$/i,\n    select: function (context) {\n      return Object.keys(agents).reduce(function (selected, name) {\n        var data = byName(name, context)\n        if (!data) return selected\n        var list = data.versions.filter(function (v) {\n          return data.released.indexOf(v) === -1\n        })\n        list = list.map(nameMapper(data.name))\n        return selected.concat(list)\n      }, [])\n    }\n  },\n  unreleased_electron_versions: {\n    matches: [],\n    regexp: /^unreleased\\s+electron\\s+versions?$/i,\n    select: function () {\n      return []\n    }\n  },\n  unreleased_browser_versions: {\n    matches: ['browser'],\n    regexp: /^unreleased\\s+(\\w+)\\s+versions?$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context)\n      return data.versions\n        .filter(function (v) {\n          return data.released.indexOf(v) === -1\n        })\n        .map(nameMapper(data.name))\n    }\n  },\n  last_years: {\n    matches: ['years'],\n    regexp: /^last\\s+((\\d+\\.)?\\d+)\\s+years?$/i,\n    select: function (context, node) {\n      return filterByYear(Date.now() - YEAR * node.years, context)\n    }\n  },\n  since_y: {\n    matches: ['year'],\n    regexp: /^since (\\d+)$/i,\n    select: sinceQuery\n  },\n  since_y_m: {\n    matches: ['year', 'month'],\n    regexp: /^since (\\d+)-(\\d+)$/i,\n    select: sinceQuery\n  },\n  since_y_m_d: {\n    matches: ['year', 'month', 'day'],\n    regexp: /^since (\\d+)-(\\d+)-(\\d+)$/i,\n    select: sinceQuery\n  },\n  baseline: {\n    matches: ['year', 'availability', 'date', 'downstream', 'kaios'],\n    // Matches:\n    //   baseline 2024\n    //   baseline newly available\n    //   baseline widely available\n    //   baseline widely available on 2024-06-01\n    //   ...with downstream\n    //   ...including kaios\n    regexp:\n      /^baseline\\s+(?:(\\d+)|(newly|widely)\\s+available(?:\\s+on\\s+(\\d{4}-\\d{2}-\\d{2}))?)?(\\s+with\\s+downstream)?(\\s+including\\s+kaios)?$/i,\n    select: function (context, node) {\n      var baselineVersions\n      var includeDownstream = !!node.downstream\n      var includeKaiOS = !!node.kaios\n      if (node.availability === 'newly' && node.date) {\n        throw new BrowserslistError(\n          'Using newly available with a date is not supported, please use \"widely available on YYYY-MM-DD\" and add 30 months to the date you specified.'\n        )\n      }\n      if (node.year) {\n        baselineVersions = bbm.getCompatibleVersions({\n          targetYear: node.year,\n          includeDownstreamBrowsers: includeDownstream,\n          includeKaiOS: includeKaiOS\n        })\n      } else if (node.date) {\n        baselineVersions = bbm.getCompatibleVersions({\n          widelyAvailableOnDate: node.date,\n          includeDownstreamBrowsers: includeDownstream,\n          includeKaiOS: includeKaiOS\n        })\n      } else if (node.availability === 'newly') {\n        var future30months = new Date().setMonth(new Date().getMonth() + 30)\n        baselineVersions = bbm.getCompatibleVersions({\n          widelyAvailableOnDate: future30months,\n          includeDownstreamBrowsers: includeDownstream,\n          includeKaiOS: includeKaiOS\n        })\n      } else {\n        baselineVersions = bbm.getCompatibleVersions({\n          includeDownstreamBrowsers: includeDownstream,\n          includeKaiOS: includeKaiOS\n        })\n      }\n      return resolve(bbmTransform(baselineVersions), context)\n    }\n  },\n  popularity: {\n    matches: ['sign', 'popularity'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity)\n      var usage = browserslist.usage.global\n      return Object.keys(usage).reduce(function (result, version) {\n        if (node.sign === '>') {\n          if (usage[version] > popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<') {\n          if (usage[version] < popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<=') {\n          if (usage[version] <= popularity) {\n            result.push(version)\n          }\n        } else if (usage[version] >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  popularity_in_my_stats: {\n    matches: ['sign', 'popularity'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+my\\s+stats$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity)\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided')\n      }\n      var usage = context.customUsage\n      return Object.keys(usage).reduce(function (result, version) {\n        var percentage = usage[version]\n        if (percentage == null) {\n          return result\n        }\n\n        if (node.sign === '>') {\n          if (percentage > popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<') {\n          if (percentage < popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<=') {\n          if (percentage <= popularity) {\n            result.push(version)\n          }\n        } else if (percentage >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  popularity_in_config_stats: {\n    matches: ['sign', 'popularity', 'config'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+(\\S+)\\s+stats$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity)\n      var usage = loadCustomUsage(context, node.config)\n      return Object.keys(usage).reduce(function (result, version) {\n        var percentage = usage[version]\n        if (percentage == null) {\n          return result\n        }\n\n        if (node.sign === '>') {\n          if (percentage > popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<') {\n          if (percentage < popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<=') {\n          if (percentage <= popularity) {\n            result.push(version)\n          }\n        } else if (percentage >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  popularity_in_place: {\n    matches: ['sign', 'popularity', 'place'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+((alt-)?\\w\\w)$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity)\n      var place = node.place\n      if (place.length === 2) {\n        place = place.toUpperCase()\n      } else {\n        place = place.toLowerCase()\n      }\n      env.loadCountry(browserslist.usage, place, browserslist.data)\n      var usage = browserslist.usage[place]\n      return Object.keys(usage).reduce(function (result, version) {\n        var percentage = usage[version]\n        if (percentage == null) {\n          return result\n        }\n\n        if (node.sign === '>') {\n          if (percentage > popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<') {\n          if (percentage < popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<=') {\n          if (percentage <= popularity) {\n            result.push(version)\n          }\n        } else if (percentage >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  cover: {\n    matches: ['coverage'],\n    regexp: /^cover\\s+(\\d+|\\d+\\.\\d+|\\.\\d+)%$/i,\n    select: coverQuery\n  },\n  cover_in: {\n    matches: ['coverage', 'place'],\n    regexp: /^cover\\s+(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+(my\\s+stats|(alt-)?\\w\\w)$/i,\n    select: coverQuery\n  },\n  cover_config: {\n    matches: ['coverage', 'config'],\n    regexp: /^cover\\s+(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+(\\S+)\\s+stats$/i,\n    select: coverQuery\n  },\n  supports: {\n    matches: ['supportType', 'feature'],\n    regexp: /^(?:(fully|partially)\\s+)?supports\\s+([\\w-]+)$/,\n    select: function (context, node) {\n      env.loadFeature(browserslist.cache, node.feature)\n      var withPartial = node.supportType !== 'fully'\n      var features = browserslist.cache[node.feature]\n      var result = []\n      for (var name in features) {\n        var data = byName(name, context)\n        // Only check desktop when latest released mobile has support\n        var iMax = data.released.length - 1\n        while (iMax >= 0) {\n          if (data.released[iMax] in features[name]) break\n          iMax--\n        }\n        var checkDesktop =\n          context.mobileToDesktop &&\n          name in browserslist.desktopNames &&\n          isSupported(features[name][data.released[iMax]], withPartial)\n        data.versions.forEach(function (version) {\n          var flags = features[name][version]\n          if (flags === undefined && checkDesktop) {\n            flags = features[browserslist.desktopNames[name]][version]\n          }\n          if (isSupported(flags, withPartial)) {\n            result.push(name + ' ' + version)\n          }\n        })\n      }\n      return result\n    }\n  },\n  electron_range: {\n    matches: ['from', 'to'],\n    regexp: /^electron\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      var fromToUse = normalizeElectron(node.from)\n      var toToUse = normalizeElectron(node.to)\n      var from = parseFloat(node.from)\n      var to = parseFloat(node.to)\n      if (!e2c[fromToUse]) {\n        throw new BrowserslistError('Unknown version ' + from + ' of electron')\n      }\n      if (!e2c[toToUse]) {\n        throw new BrowserslistError('Unknown version ' + to + ' of electron')\n      }\n      return Object.keys(e2c)\n        .filter(function (i) {\n          var parsed = parseFloat(i)\n          return parsed >= from && parsed <= to\n        })\n        .map(function (i) {\n          return 'chrome ' + e2c[i]\n        })\n    }\n  },\n  node_range: {\n    matches: ['from', 'to'],\n    regexp: /^node\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      return browserslist.nodeVersions\n        .filter(semverFilterLoose('>=', node.from))\n        .filter(semverFilterLoose('<=', node.to))\n        .map(function (v) {\n          return 'node ' + v\n        })\n    }\n  },\n  browser_range: {\n    matches: ['browser', 'from', 'to'],\n    regexp: /^(\\w+)\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context)\n      var from = parseFloat(normalizeVersion(data, node.from) || node.from)\n      var to = parseFloat(normalizeVersion(data, node.to) || node.to)\n      function filter(v) {\n        var parsed = parseFloat(v)\n        return parsed >= from && parsed <= to\n      }\n      return data.released.filter(filter).map(nameMapper(data.name))\n    }\n  },\n  electron_ray: {\n    matches: ['sign', 'version'],\n    regexp: /^electron\\s*(>=?|<=?)\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      var versionToUse = normalizeElectron(node.version)\n      return Object.keys(e2c)\n        .filter(generateFilter(node.sign, versionToUse))\n        .map(function (i) {\n          return 'chrome ' + e2c[i]\n        })\n    }\n  },\n  node_ray: {\n    matches: ['sign', 'version'],\n    regexp: /^node\\s*(>=?|<=?)\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      return browserslist.nodeVersions\n        .filter(generateSemverFilter(node.sign, node.version))\n        .map(function (v) {\n          return 'node ' + v\n        })\n    }\n  },\n  browser_ray: {\n    matches: ['browser', 'sign', 'version'],\n    regexp: /^(\\w+)\\s*(>=?|<=?)\\s*([\\d.]+)$/,\n    select: function (context, node) {\n      var version = node.version\n      var data = checkName(node.browser, context)\n      var alias = browserslist.versionAliases[data.name][version]\n      if (alias) version = alias\n      return data.released\n        .filter(generateFilter(node.sign, version))\n        .map(function (v) {\n          return data.name + ' ' + v\n        })\n    }\n  },\n  firefox_esr: {\n    matches: [],\n    regexp: /^(firefox|ff|fx)\\s+esr$/i,\n    select: function () {\n      return ['firefox 140']\n    }\n  },\n  opera_mini_all: {\n    matches: [],\n    regexp: /(operamini|op_mini)\\s+all/i,\n    select: function () {\n      return ['op_mini all']\n    }\n  },\n  electron_version: {\n    matches: ['version'],\n    regexp: /^electron\\s+([\\d.]+)$/i,\n    select: function (context, node) {\n      var versionToUse = normalizeElectron(node.version)\n      var chrome = e2c[versionToUse]\n      if (!chrome) {\n        throw new BrowserslistError(\n          'Unknown version ' + node.version + ' of electron'\n        )\n      }\n      return ['chrome ' + chrome]\n    }\n  },\n  node_major_version: {\n    matches: ['version'],\n    regexp: /^node\\s+(\\d+)$/i,\n    select: nodeQuery\n  },\n  node_minor_version: {\n    matches: ['version'],\n    regexp: /^node\\s+(\\d+\\.\\d+)$/i,\n    select: nodeQuery\n  },\n  node_patch_version: {\n    matches: ['version'],\n    regexp: /^node\\s+(\\d+\\.\\d+\\.\\d+)$/i,\n    select: nodeQuery\n  },\n  current_node: {\n    matches: [],\n    regexp: /^current\\s+node$/i,\n    select: function (context) {\n      return [env.currentNode(resolve, context)]\n    }\n  },\n  maintained_node: {\n    matches: [],\n    regexp: /^maintained\\s+node\\s+versions$/i,\n    select: function (context) {\n      var now = Date.now()\n      var queries = Object.keys(jsEOL)\n        .filter(function (key) {\n          return (\n            now < Date.parse(jsEOL[key].end) &&\n            now > Date.parse(jsEOL[key].start) &&\n            isEolReleased(key)\n          )\n        })\n        .map(function (key) {\n          return 'node ' + key.slice(1)\n        })\n      return resolve(queries, context)\n    }\n  },\n  phantomjs_1_9: {\n    matches: [],\n    regexp: /^phantomjs\\s+1.9$/i,\n    select: function () {\n      return ['safari 5']\n    }\n  },\n  phantomjs_2_1: {\n    matches: [],\n    regexp: /^phantomjs\\s+2.1$/i,\n    select: function () {\n      return ['safari 6']\n    }\n  },\n  browser_version: {\n    matches: ['browser', 'version'],\n    regexp: /^(\\w+)\\s+(tp|[\\d.]+)$/i,\n    select: function (context, node) {\n      var version = node.version\n      if (/^tp$/i.test(version)) version = 'TP'\n      var data = checkName(node.browser, context)\n      var alias = normalizeVersion(data, version)\n      if (alias) {\n        version = alias\n      } else {\n        if (version.indexOf('.') === -1) {\n          alias = version + '.0'\n        } else {\n          alias = version.replace(/\\.0$/, '')\n        }\n        alias = normalizeVersion(data, alias)\n        if (alias) {\n          version = alias\n        } else if (context.ignoreUnknownVersions) {\n          return []\n        } else {\n          throw new BrowserslistError(\n            'Unknown version ' + version + ' of ' + node.browser\n          )\n        }\n      }\n      return [data.name + ' ' + version]\n    }\n  },\n  browserslist_config: {\n    matches: [],\n    regexp: /^browserslist config$/i,\n    needsPath: true,\n    select: function (context) {\n      return browserslist(undefined, context)\n    }\n  },\n  extends: {\n    matches: ['config'],\n    regexp: /^extends (.+)$/i,\n    needsPath: true,\n    select: function (context, node) {\n      return resolve(env.loadQueries(context, node.config), context)\n    }\n  },\n  defaults: {\n    matches: [],\n    regexp: /^defaults$/i,\n    select: function (context) {\n      return resolve(browserslist.defaults, context)\n    }\n  },\n  dead: {\n    matches: [],\n    regexp: /^dead$/i,\n    select: function (context) {\n      var dead = [\n        'Baidu >= 0',\n        'ie <= 11',\n        'ie_mob <= 11',\n        'bb <= 10',\n        'op_mob <= 12.1',\n        'samsung 4'\n      ]\n      return resolve(dead, context)\n    }\n  },\n  unknown: {\n    matches: [],\n    regexp: /^(\\w+)$/i,\n    select: function (context, node) {\n      if (byName(node.query, context)) {\n        throw new BrowserslistError(\n          'Specify versions in Browserslist query for browser ' + node.query\n        )\n      } else {\n        throw unknownQuery(node.query)\n      }\n    }\n  }\n}\n\n// Get and convert Can I Use data\n\n;(function () {\n  for (var name in agents) {\n    var browser = agents[name]\n    browserslist.data[name] = {\n      name: name,\n      versions: normalize(agents[name].versions),\n      released: normalize(agents[name].versions.slice(0, -3)),\n      releaseDate: agents[name].release_date\n    }\n    fillUsage(browserslist.usage.global, name, browser.usage_global)\n\n    browserslist.versionAliases[name] = {}\n    for (var i = 0; i < browser.versions.length; i++) {\n      var full = browser.versions[i]\n      if (!full) continue\n\n      if (full.indexOf('-') !== -1) {\n        var interval = full.split('-')\n        for (var j = 0; j < interval.length; j++) {\n          browserslist.versionAliases[name][interval[j]] = full\n        }\n      }\n    }\n  }\n\n  browserslist.nodeVersions = jsReleases.map(function (release) {\n    return release.version\n  })\n})()\n\nmodule.exports = browserslist\n","var AND_REGEXP = /^\\s+and\\s+(.*)/i\nvar OR_REGEXP = /^(?:,\\s*|\\s+or\\s+)(.*)/i\n\nfunction flatten(array) {\n  if (!Array.isArray(array)) return [array]\n  return array.reduce(function (a, b) {\n    return a.concat(flatten(b))\n  }, [])\n}\n\nfunction find(string, predicate) {\n  for (var max = string.length, n = 1; n <= max; n++) {\n    var parsed = string.substr(-n, n)\n    if (predicate(parsed, n, max)) {\n      return string.slice(0, -n)\n    }\n  }\n  return ''\n}\n\nfunction matchQuery(all, query) {\n  var node = { query: query }\n  if (query.indexOf('not ') === 0) {\n    node.not = true\n    query = query.slice(4)\n  }\n\n  for (var name in all) {\n    var type = all[name]\n    var match = query.match(type.regexp)\n    if (match) {\n      node.type = name\n      for (var i = 0; i < type.matches.length; i++) {\n        node[type.matches[i]] = match[i + 1]\n      }\n      return node\n    }\n  }\n\n  node.type = 'unknown'\n  return node\n}\n\nfunction matchBlock(all, string, qs) {\n  var node\n  return find(string, function (parsed, n, max) {\n    if (AND_REGEXP.test(parsed)) {\n      node = matchQuery(all, parsed.match(AND_REGEXP)[1])\n      node.compose = 'and'\n      qs.unshift(node)\n      return true\n    } else if (OR_REGEXP.test(parsed)) {\n      node = matchQuery(all, parsed.match(OR_REGEXP)[1])\n      node.compose = 'or'\n      qs.unshift(node)\n      return true\n    } else if (n === max) {\n      node = matchQuery(all, parsed.trim())\n      node.compose = 'or'\n      qs.unshift(node)\n      return true\n    }\n    return false\n  })\n}\n\nmodule.exports = function parse(all, queries) {\n  if (!Array.isArray(queries)) queries = [queries]\n  return flatten(\n    queries.map(function (block) {\n      var qs = []\n      do {\n        block = matchBlock(all, block, qs)\n      } while (block)\n      return qs\n    })\n  )\n}\n","module.exports={A:{A:{K:0,D:0,E:0.0379299,F:0.0303439,A:0.00758598,B:0.675152,uC:0},B:\"msuC\",\"K\",\"D\",\"E\",\"F\",\"A\",\"B\",\"\",\"\",\"\"],E:\"IE\",F:{uC:962323200,K:998870400,D:1161129600,E:1237420800,F:1300060800,A:1346716800,B:1381968000}},B:{A:{\"0\":0,\"1\":0,\"2\":0,\"3\":0.031456,\"4\":0.003932,\"5\":0.011796,C:0,L:0,M:0,G:0,N:0,O:0,P:0.003932,Q:0,H:0,R:0,S:0,T:0,U:0,V:0,W:0,X:0,Y:0,Z:0,a:0,b:0.011796,c:0,d:0,e:0,f:0.003932,g:0,h:0,i:0,j:0,k:0,l:0,m:0,n:0,o:0,p:0,q:0,r:0,s:0.03932,t:0,u:0,v:0,w:0.007864,x:0.023592,y:0.003932,z:0,FB:0.003932,GB:0.007864,HB:0.003932,IB:0.011796,JB:0.011796,KB:0.007864,LB:0.007864,MB:0.011796,NB:0.031456,OB:0.011796,PB:0.015728,QB:0.043252,RB:0.023592,SB:0.027524,TB:0.043252,UB:1.44698,VB:2.72094,I:0.007864},B:\"webkit\",C:[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"C\",\"L\",\"M\",\"G\",\"N\",\"O\",\"P\",\"Q\",\"H\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"FB\",\"GB\",\"HB\",\"IB\",\"JB\",\"KB\",\"LB\",\"MB\",\"NB\",\"OB\",\"PB\",\"QB\",\"RB\",\"SB\",\"TB\",\"UB\",\"VB\",\"I\",\"\",\"\",\"\"],E:\"Edge\",F:{\"0\":1694649600,\"1\":1697155200,\"2\":1698969600,\"3\":1701993600,\"4\":1706227200,\"5\":1708732800,C:1438128000,L:1447286400,M:1470096000,G:1491868800,N:1508198400,O:1525046400,P:1542067200,Q:1579046400,H:1581033600,R:1586736000,S:1590019200,T:1594857600,U:1598486400,V:1602201600,W:1605830400,X:1611360000,Y:1614816000,Z:1618358400,a:1622073600,b:1626912000,c:1630627200,d:1632441600,e:1634774400,f:1637539200,g:1641427200,h:1643932800,i:1646265600,j:1649635200,k:1651190400,l:1653955200,m:1655942400,n:1659657600,o:1661990400,p:1664755200,q:1666915200,r:1670198400,s:1673481600,t:1675900800,u:1678665600,v:1680825600,w:1683158400,x:1685664000,y:1689897600,z:1692576000,FB:1711152000,GB:1713398400,HB:1715990400,IB:1718841600,JB:1721865600,KB:1724371200,LB:1726704000,MB:1729123200,NB:1731542400,OB:1737417600,PB:1740614400,QB:1741219200,RB:1743984000,SB:1746316800,TB:1748476800,UB:1750896000,VB:1754611200,I:1756944000},D:{C:\"ms\",L:\"ms\",M:\"ms\",G:\"ms\",N:\"ms\",O:\"ms\",P:\"ms\"}},C:{A:{\"0\":0,\"1\":0.121892,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,vC:0,RC:0,J:0,WB:0,K:0,D:0,E:0,F:0,A:0,B:0.031456,C:0,L:0,M:0,G:0,N:0,O:0,P:0,XB:0,AB:0,BB:0,CB:0,DB:0,EB:0,YB:0,ZB:0,aB:0,bB:0,cB:0,dB:0,eB:0,fB:0,gB:0,hB:0,iB:0,jB:0,kB:0,lB:0,mB:0,nB:0,oB:0,pB:0,qB:0,rB:0,sB:0,tB:0,uB:0,vB:0.027524,wB:0,xB:0,yB:0,zB:0,\"0B\":0,\"1B\":0,SC:0.003932,\"2B\":0,TC:0,\"3B\":0,\"4B\":0,\"5B\":0,\"6B\":0,\"7B\":0,\"8B\":0,\"9B\":0,AC:0,BC:0,CC:0,DC:0,EC:0,FC:0,GC:0,HC:0,IC:0,JC:0.007864,Q:0,H:0,R:0,UC:0,S:0,T:0,U:0,V:0,W:0,X:0,Y:0,Z:0,a:0,b:0,c:0,d:0,e:0,f:0,g:0,h:0,i:0,j:0,k:0,l:0,m:0,n:0,o:0,p:0,q:0,r:0,s:0,t:0,u:0,v:0,w:0,x:0,y:0.169076,z:0,FB:0,GB:0,HB:0.003932,IB:0,JB:0,KB:0.07864,LB:0,MB:0,NB:0,OB:0,PB:0.015728,QB:0.007864,RB:0.011796,SB:0.011796,TB:0.007864,UB:0.011796,VB:0.01966,I:0.047184,VC:0.868972,KC:0.404996,WC:0,wC:0,xC:0,yC:0,zC:0,\"0C\":0},B:\"moz\",C:[\"vC\",\"RC\",\"zC\",\"0C\",\"J\",\"WB\",\"K\",\"D\",\"E\",\"F\",\"A\",\"B\",\"C\",\"L\",\"M\",\"G\",\"N\",\"O\",\"P\",\"XB\",\"6\",\"7\",\"8\",\"9\",\"AB\",\"BB\",\"CB\",\"DB\",\"EB\",\"YB\",\"ZB\",\"aB\",\"bB\",\"cB\",\"dB\",\"eB\",\"fB\",\"gB\",\"hB\",\"iB\",\"jB\",\"kB\",\"lB\",\"mB\",\"nB\",\"oB\",\"pB\",\"qB\",\"rB\",\"sB\",\"tB\",\"uB\",\"vB\",\"wB\",\"xB\",\"yB\",\"zB\",\"0B\",\"1B\",\"SC\",\"2B\",\"TC\",\"3B\",\"4B\",\"5B\",\"6B\",\"7B\",\"8B\",\"9B\",\"AC\",\"BC\",\"CC\",\"DC\",\"EC\",\"FC\",\"GC\",\"HC\",\"IC\",\"JC\",\"Q\",\"H\",\"R\",\"UC\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"FB\",\"GB\",\"HB\",\"IB\",\"JB\",\"KB\",\"LB\",\"MB\",\"NB\",\"OB\",\"PB\",\"QB\",\"RB\",\"SB\",\"TB\",\"UB\",\"VB\",\"I\",\"VC\",\"KC\",\"WC\",\"wC\",\"xC\",\"yC\"],E:\"Firefox\",F:{\"0\":1693267200,\"1\":1695686400,\"2\":1698105600,\"3\":1700524800,\"4\":1702944000,\"5\":1705968000,\"6\":1361232000,\"7\":1364860800,\"8\":1368489600,\"9\":1372118400,vC:1161648000,RC:1213660800,zC:1246320000,\"0C\":1264032000,J:1300752000,WB:1308614400,K:1313452800,D:1317081600,E:1317081600,F:1320710400,A:1324339200,B:1327968000,C:1331596800,L:1335225600,M:1338854400,G:1342483200,N:1346112000,O:1349740800,P:1353628800,XB:1357603200,AB:1375747200,BB:1379376000,CB:1386633600,DB:1391472000,EB:1395100800,YB:1398729600,ZB:1402358400,aB:1405987200,bB:1409616000,cB:1413244800,dB:1417392000,eB:1421107200,fB:1424736000,gB:1428278400,hB:1431475200,iB:1435881600,jB:1439251200,kB:1442880000,lB:1446508800,mB:1450137600,nB:1453852800,oB:1457395200,pB:1461628800,qB:1465257600,rB:1470096000,sB:1474329600,tB:1479168000,uB:1485216000,vB:1488844800,wB:1492560000,xB:1497312000,yB:1502150400,zB:1506556800,\"0B\":1510617600,\"1B\":1516665600,SC:1520985600,\"2B\":1525824000,TC:1529971200,\"3B\":1536105600,\"4B\":1540252800,\"5B\":1544486400,\"6B\":1548720000,\"7B\":1552953600,\"8B\":1558396800,\"9B\":1562630400,AC:1567468800,BC:1571788800,CC:1575331200,DC:1578355200,EC:1581379200,FC:1583798400,GC:1586304000,HC:1588636800,IC:1591056000,JC:1593475200,Q:1595894400,H:1598313600,R:1600732800,UC:1603152000,S:1605571200,T:1607990400,U:1611619200,V:1614038400,W:1616457600,X:1618790400,Y:1622505600,Z:1626134400,a:1628553600,b:1630972800,c:1633392000,d:1635811200,e:1638835200,f:1641859200,g:1644364800,h:1646697600,i:1649116800,j:1651536000,k:1653955200,l:1656374400,m:1658793600,n:1661212800,o:1663632000,p:1666051200,q:1668470400,r:1670889600,s:1673913600,t:1676332800,u:1678752000,v:1681171200,w:1683590400,x:1686009600,y:1688428800,z:1690848000,FB:1708387200,GB:1710806400,HB:1713225600,IB:1715644800,JB:1718064000,KB:1720483200,LB:1722902400,MB:1725321600,NB:1727740800,OB:1730160000,PB:1732579200,QB:1736208000,RB:1738627200,SB:1741046400,TB:1743465600,UB:1745884800,VB:1748304000,I:1750723200,VC:1753142400,KC:1755561600,WC:1757980800,wC:null,xC:null,yC:null}},D:{A:{\"0\":0.11796,\"1\":0.05898,\"2\":0.051116,\"3\":0.106164,\"4\":0.043252,\"5\":0.070776,\"6\":0,\"7\":0,\"8\":0,\"9\":0,J:0,WB:0,K:0,D:0,E:0,F:0,A:0,B:0,C:0,L:0,M:0,G:0,N:0,O:0,P:0,XB:0,AB:0,BB:0,CB:0,DB:0,EB:0,YB:0,ZB:0,aB:0,bB:0,cB:0,dB:0,eB:0,fB:0,gB:0,hB:0,iB:0.007864,jB:0.007864,kB:0.007864,lB:0.007864,mB:0.007864,nB:0.007864,oB:0.011796,pB:0.007864,qB:0.011796,rB:0.01966,sB:0.01966,tB:0.007864,uB:0.007864,vB:0.011796,wB:0.007864,xB:0.007864,yB:0.007864,zB:0.015728,\"0B\":0.007864,\"1B\":0.011796,SC:0.007864,\"2B\":0.007864,TC:0,\"3B\":0,\"4B\":0,\"5B\":0,\"6B\":0,\"7B\":0.023592,\"8B\":0,\"9B\":0.003932,AC:0.007864,BC:0.007864,CC:0,DC:0,EC:0,FC:0.003932,GC:0.003932,HC:0.003932,IC:0,JC:0.007864,Q:0.070776,H:0.007864,R:0.035388,S:0.043252,T:0,U:0.007864,V:0.011796,W:0.03932,X:0.007864,Y:0.003932,Z:0.007864,a:0.01966,b:0.011796,c:0.011796,d:0.003932,e:0,f:0.007864,g:0.015728,h:0.043252,i:0.015728,j:0.011796,k:0.01966,l:0.015728,m:0.090436,n:0.031456,o:0.813924,p:0.007864,q:0.011796,r:0.031456,s:0.723488,t:0.007864,u:0.027524,v:2.94114,w:0.011796,x:0.047184,y:0.082572,z:0.066844,FB:0.074708,GB:0.062912,HB:0.428588,IB:0.467908,JB:0.035388,KB:0.07864,LB:0.03932,MB:0.106164,NB:0.25558,OB:0.17694,PB:0.070776,QB:0.35388,RB:0.129756,SB:0.161212,TB:0.542616,UB:7.16804,VB:7.30566,I:0.01966,VC:0.007864,KC:0,WC:0},B:\"webkit\",C:[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"J\",\"WB\",\"K\",\"D\",\"E\",\"F\",\"A\",\"B\",\"C\",\"L\",\"M\",\"G\",\"N\",\"O\",\"P\",\"XB\",\"6\",\"7\",\"8\",\"9\",\"AB\",\"BB\",\"CB\",\"DB\",\"EB\",\"YB\",\"ZB\",\"aB\",\"bB\",\"cB\",\"dB\",\"eB\",\"fB\",\"gB\",\"hB\",\"iB\",\"jB\",\"kB\",\"lB\",\"mB\",\"nB\",\"oB\",\"pB\",\"qB\",\"rB\",\"sB\",\"tB\",\"uB\",\"vB\",\"wB\",\"xB\",\"yB\",\"zB\",\"0B\",\"1B\",\"SC\",\"2B\",\"TC\",\"3B\",\"4B\",\"5B\",\"6B\",\"7B\",\"8B\",\"9B\",\"AC\",\"BC\",\"CC\",\"DC\",\"EC\",\"FC\",\"GC\",\"HC\",\"IC\",\"JC\",\"Q\",\"H\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"FB\",\"GB\",\"HB\",\"IB\",\"JB\",\"KB\",\"LB\",\"MB\",\"NB\",\"OB\",\"PB\",\"QB\",\"RB\",\"SB\",\"TB\",\"UB\",\"VB\",\"I\",\"VC\",\"KC\",\"WC\"],E:\"Chrome\",F:{\"0\":1694476800,\"1\":1696896000,\"2\":1698710400,\"3\":1701993600,\"4\":1705968000,\"5\":1708387200,\"6\":1337040000,\"7\":1340668800,\"8\":1343692800,\"9\":1348531200,J:1264377600,WB:1274745600,K:1283385600,D:1287619200,E:1291248000,F:1296777600,A:1299542400,B:1303862400,C:1307404800,L:1312243200,M:1316131200,G:1316131200,N:1319500800,O:1323734400,P:1328659200,XB:1332892800,AB:1352246400,BB:1357862400,CB:1361404800,DB:1364428800,EB:1369094400,YB:1374105600,ZB:1376956800,aB:1384214400,bB:1389657600,cB:1392940800,dB:1397001600,eB:1400544000,fB:1405468800,gB:1409011200,hB:1412640000,iB:1416268800,jB:1421798400,kB:1425513600,lB:1429401600,mB:1432080000,nB:1437523200,oB:1441152000,pB:1444780800,qB:1449014400,rB:1453248000,sB:1456963200,tB:1460592000,uB:1464134400,vB:1469059200,wB:1472601600,xB:1476230400,yB:1480550400,zB:1485302400,\"0B\":1489017600,\"1B\":1492560000,SC:1496707200,\"2B\":1500940800,TC:1504569600,\"3B\":1508198400,\"4B\":1512518400,\"5B\":1516752000,\"6B\":1520294400,\"7B\":1523923200,\"8B\":1527552000,\"9B\":1532390400,AC:1536019200,BC:1539648000,CC:1543968000,DC:1548720000,EC:1552348800,FC:1555977600,GC:1559606400,HC:1564444800,IC:1568073600,JC:1571702400,Q:1575936000,H:1580860800,R:1586304000,S:1589846400,T:1594684800,U:1598313600,V:1601942400,W:1605571200,X:1611014400,Y:1614556800,Z:1618272000,a:1621987200,b:1626739200,c:1630368000,d:1632268800,e:1634601600,f:1637020800,g:1641340800,h:1643673600,i:1646092800,j:1648512000,k:1650931200,l:1653350400,m:1655769600,n:1659398400,o:1661817600,p:1664236800,q:1666656000,r:1669680000,s:1673308800,t:1675728000,u:1678147200,v:1680566400,w:1682985600,x:1685404800,y:1689724800,z:1692057600,FB:1710806400,GB:1713225600,HB:1715644800,IB:1718064000,JB:1721174400,KB:1724112000,LB:1726531200,MB:1728950400,NB:1731369600,OB:1736812800,PB:1738627200,QB:1741046400,RB:1743465600,SB:1745884800,TB:1748304000,UB:1750723200,VB:1754352000,I:1756771200,VC:null,KC:null,WC:null}},E:{A:{J:0,WB:0,K:0,D:0,E:0,F:0,A:0,B:0,C:0,L:0,M:0.011796,G:0,\"1C\":0,XC:0,\"2C\":0,\"3C\":0,\"4C\":0,\"5C\":0,YC:0,LC:0.003932,MC:0.003932,\"6C\":0.027524,\"7C\":0.027524,\"8C\":0.023592,ZC:0,aC:0.007864,NC:0.007864,\"9C\":0.106164,OC:0.01966,bC:0.015728,cC:0.011796,dC:0.023592,eC:0.007864,fC:0.015728,AD:0.153348,PC:0.003932,gC:0.106164,hC:0.011796,iC:0.011796,jC:0.023592,kC:0.043252,BD:0.141552,QC:0.015728,lC:0.031456,mC:0.015728,nC:0.066844,oC:0.043252,pC:0.585868,qC:0.01966,rC:0,CD:0},B:\"webkitaC\",\"NC\",\"9C\",\"OC\",\"bC\",\"cC\",\"dC\",\"eC\",\"fC\",\"AD\",\"PC\",\"gC\",\"hC\",\"iC\",\"jC\",\"kC\",\"BD\",\"QC\",\"lC\",\"mC\",\"nC\",\"oC\",\"pC\",\"qC\",\"rC\",\"CD\",\"\"],E:\"Safari\",F:{\"1C\":1205798400,XC:1226534400,J:1244419200,WB:1275868800,\"2C\":1311120000,K:1343174400,\"3C\":1382400000,D:1382400000,\"4C\":1410998400,E:1413417600,F:1443657600,\"5C\":1458518400,A:1474329600,YC:1490572800,B:1505779200,LC:1522281600,C:1537142400,MC:1553472000,L:1568851200,\"6C\":1585008000,M:1600214400,\"7C\":1619395200,G:1632096000,\"8C\":1635292800,ZC:1639353600,aC:1647216000,NC:1652745600,\"9C\":1658275200,OC:1662940800,bC:1666569600,cC:1670889600,dC:1674432000,eC:1679875200,fC:1684368000,AD:1690156800,PC:1695686400,gC:1698192000,hC:1702252800,iC:1705881600,jC:1709596800,kC:1715558400,BD:1722211200,QC:1726444800,lC:1730073600,mC:1733875200,nC:1737936000,oC:1743379200,pC:1747008000,qC:1757894400,rC:null,CD:null}},F:{A:{\"0\":0,\"1\":0,\"2\":0.011796,\"3\":0.636984,\"4\":0.003932,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,F:0,B:0,C:0,G:0,N:0,O:0,P:0,XB:0,AB:0,BB:0,CB:0,DB:0,EB:0,YB:0,ZB:0,aB:0,bB:0,cB:0,dB:0,eB:0,fB:0,gB:0,hB:0,iB:0,jB:0,kB:0,lB:0,mB:0,nB:0,oB:0,pB:0.007864,qB:0,rB:0,sB:0,tB:0,uB:0,vB:0,wB:0,xB:0,yB:0,zB:0,\"0B\":0,\"1B\":0,\"2B\":0,\"3B\":0,\"4B\":0,\"5B\":0,\"6B\":0,\"7B\":0,\"8B\":0,\"9B\":0,AC:0,BC:0,CC:0,DC:0,EC:0,FC:0,GC:0,HC:0,IC:0,JC:0,Q:0,H:0,R:0,UC:0,S:0,T:0,U:0,V:0,W:0,X:0,Y:0,Z:0.051116,a:0.01966,b:0,c:0,d:0,e:0.027524,f:0,g:0,h:0,i:0,j:0,k:0,l:0,m:0,n:0,o:0,p:0,q:0,r:0,s:0,t:0,u:0,v:0,w:0,x:0,y:0,z:0,DD:0,ED:0,FD:0,GD:0,LC:0,sC:0,HD:0,MC:0},B:\"webkit\",C:[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"F\",\"DD\",\"ED\",\"FD\",\"GD\",\"B\",\"LC\",\"sC\",\"HD\",\"C\",\"MC\",\"G\",\"N\",\"O\",\"P\",\"XB\",\"6\",\"7\",\"8\",\"9\",\"AB\",\"BB\",\"CB\",\"DB\",\"EB\",\"YB\",\"ZB\",\"aB\",\"bB\",\"cB\",\"dB\",\"eB\",\"fB\",\"gB\",\"hB\",\"iB\",\"jB\",\"kB\",\"lB\",\"mB\",\"nB\",\"oB\",\"pB\",\"qB\",\"rB\",\"sB\",\"tB\",\"uB\",\"vB\",\"wB\",\"xB\",\"yB\",\"zB\",\"0B\",\"1B\",\"2B\",\"3B\",\"4B\",\"5B\",\"6B\",\"7B\",\"8B\",\"9B\",\"AC\",\"BC\",\"CC\",\"DC\",\"EC\",\"FC\",\"GC\",\"HC\",\"IC\",\"JC\",\"Q\",\"H\",\"R\",\"UC\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"\",\"\",\"\"],E:\"Opera\",F:{\"0\":1739404800,\"1\":1744675200,\"2\":1747094400,\"3\":1751414400,\"4\":1756339200,\"5\":1757548800,\"6\":1393891200,\"7\":1399334400,\"8\":1401753600,\"9\":1405987200,F:1150761600,DD:1223424000,ED:1251763200,FD:1267488000,GD:1277942400,B:1292457600,LC:1302566400,sC:1309219200,HD:1323129600,C:1323129600,MC:1352073600,G:1372723200,N:1377561600,O:1381104000,P:1386288000,XB:1390867200,AB:1409616000,BB:1413331200,CB:1417132800,DB:1422316800,EB:1425945600,YB:1430179200,ZB:1433808000,aB:1438646400,bB:1442448000,cB:1445904000,dB:1449100800,eB:1454371200,fB:1457308800,gB:1462320000,hB:1465344000,iB:1470096000,jB:1474329600,kB:1477267200,lB:1481587200,mB:1486425600,nB:1490054400,oB:1494374400,pB:1498003200,qB:1502236800,rB:1506470400,sB:1510099200,tB:1515024000,uB:1517961600,vB:1521676800,wB:1525910400,xB:1530144000,yB:1534982400,zB:1537833600,\"0B\":1543363200,\"1B\":1548201600,\"2B\":1554768000,\"3B\":1561593600,\"4B\":1566259200,\"5B\":1570406400,\"6B\":1573689600,\"7B\":1578441600,\"8B\":1583971200,\"9B\":1587513600,AC:1592956800,BC:1595894400,CC:1600128000,DC:1603238400,EC:1613520000,FC:1612224000,GC:1616544000,HC:1619568000,IC:1623715200,JC:1627948800,Q:1631577600,H:1633392000,R:1635984000,UC:1638403200,S:1642550400,T:1644969600,U:1647993600,V:1650412800,W:1652745600,X:1654646400,Y:1657152000,Z:1660780800,a:1663113600,b:1668816000,c:1668643200,d:1671062400,e:1675209600,f:1677024000,g:1679529600,h:1681948800,i:1684195200,j:1687219200,k:1690329600,l:1692748800,m:1696204800,n:1699920000,o:1699920000,p:1702944000,q:1707264000,r:1710115200,s:1711497600,t:1716336000,u:1719273600,v:1721088000,w:1724284800,x:1727222400,y:1732665600,z:1736294400},D:{F:\"o\",B:\"o\",C:\"o\",DD:\"o\",ED:\"o\",FD:\"o\",GD:\"o\",LC:\"o\",sC:\"o\",HD:\"o\",MC:\"o\"}},G:{A:{E:0,XC:0,ID:0,tC:0.0024628,JD:0,KD:0.006157,LD:0.0049256,MD:0,ND:0,OD:0.012314,PD:0.0012314,QD:0.0221652,RD:0.472858,SD:0.0073884,TD:0.0024628,UD:0.0714212,VD:0,WD:0.0036942,XD:0.0024628,YD:0.012314,ZD:0.024628,aD:0.0258594,bD:0.0221652,ZC:0.0197024,aC:0.0221652,NC:0.024628,cD:0.322627,OC:0.0394048,bC:0.0812724,cC:0.0418676,dC:0.0775782,eC:0.0172396,fC:0.0320164,dD:0.416213,PC:0.0233966,gC:0.0406362,hC:0.0295536,iC:0.0455618,jC:0.067727,kC:0.147768,eD:0.364494,QC:0.092355,lC:0.187173,mC:0.104669,nC:0.357106,oC:0.205644,pC:8.76141,qC:0.0480246,rC:0},B:\"webkittC\",\"JD\",\"KD\",\"LD\",\"E\",\"MD\",\"ND\",\"OD\",\"PD\",\"QD\",\"RD\",\"SD\",\"TD\",\"UD\",\"VD\",\"WD\",\"XD\",\"YD\",\"ZD\",\"aD\",\"bD\",\"ZC\",\"aC\",\"NC\",\"cD\",\"OC\",\"bC\",\"cC\",\"dC\",\"eC\",\"fC\",\"dD\",\"PC\",\"gC\",\"hC\",\"iC\",\"jC\",\"kC\",\"eD\",\"QC\",\"lC\",\"mC\",\"nC\",\"oC\",\"pC\",\"qC\",\"rC\",\"\",\"\"],E:\"Safari on iOS\",F:{XC:1270252800,ID:1283904000,tC:1299628800,JD:1331078400,KD:1359331200,LD:1394409600,E:1410912000,MD:1413763200,ND:1442361600,OD:1458518400,PD:1473724800,QD:1490572800,RD:1505779200,SD:1522281600,TD:1537142400,UD:1553472000,VD:1568851200,WD:1572220800,XD:1580169600,YD:1585008000,ZD:1600214400,aD:1619395200,bD:1632096000,ZC:1639353600,aC:1647216000,NC:1652659200,cD:1658275200,OC:1662940800,bC:1666569600,cC:1670889600,dC:1674432000,eC:1679875200,fC:1684368000,dD:1690156800,PC:1694995200,gC:1698192000,hC:1702252800,iC:1705881600,jC:1709596800,kC:1715558400,eD:1722211200,QC:1726444800,lC:1730073600,mC:1733875200,nC:1737936000,oC:1743379200,pC:1747008000,qC:1757894400,rC:null}},H:{A:{fD:0.05},B:\"ofD\",\"\",\"\",\"\"],E:\"Opera Mini\",F:{fD:1426464000}},I:{A:{RC:0,J:0,I:1.02412,gD:0,hD:0,iD:0,jD:0.000102566,tC:0.000205132,kD:0,lD:0.000717963},B:\"webkitgD\",\"hD\",\"iD\",\"RC\",\"J\",\"jD\",\"tC\",\"kD\",\"lD\",\"I\",\"\",\"\",\"\"],E:\"Android Browser\",F:{gD:1256515200,hD:1274313600,iD:1291593600,RC:1298332800,J:1318896000,jD:1341792000,tC:1374624000,kD:1386547200,lD:1401667200,I:1756771200}},J:{A:{D:0,A:0},B:\"webkitlackberry Browser\",F:{D:1325376000,A:1359504000}},K:{A:{A:0,B:0,C:0,H:0.999937,LC:0,sC:0,MC:0},B:\"osC\",\"C\",\"MC\",\"H\",\"\",\"\",\"\"],E:\"Opera Mobile\",F:{A:1287100800,B:1300752000,LC:1314835200,sC:1318291200,C:1330300800,MC:1349740800,H:1709769600},D:{H:\"webkit\"}},L:{A:{I:46.0235},B:\"webkithrome for Android\",F:{I:1756771200}},M:{A:{KC:0.327726},B:\"mozirefox for Android\",F:{KC:1755648000}},N:{A:{A:0,B:0},B:\"msobile\",F:{A:1340150400,B:1353456000}},O:{A:{NC:0.819315},B:\"webkitrowser for Android\",F:{NC:1710115200},D:{NC:\"webkit\"}},P:{A:{\"6\":0,\"7\":0.0108655,\"8\":0.0108655,\"9\":0.0217309,J:0,AB:0.0217309,BB:0.0325964,CB:0.0543273,DB:0.0760583,EB:1.77107,mD:0,nD:0,oD:0.0217309,pD:0,qD:0,YC:0,rD:0,sD:0,tD:0,uD:0,vD:0,OC:0,PC:0,QC:0,wD:0},B:\"webkitmD\",\"nD\",\"oD\",\"pD\",\"qD\",\"YC\",\"rD\",\"sD\",\"tD\",\"uD\",\"vD\",\"OC\",\"PC\",\"QC\",\"wD\",\"6\",\"7\",\"8\",\"9\",\"AB\",\"BB\",\"CB\",\"DB\",\"EB\",\"\",\"\",\"\"],E:\"Samsung Internet\",F:{\"6\":1677369600,\"7\":1684454400,\"8\":1689292800,\"9\":1697587200,J:1461024000,mD:1481846400,nD:1509408000,oD:1528329600,pD:1546128000,qD:1554163200,YC:1567900800,rD:1582588800,sD:1593475200,tD:1605657600,uD:1618531200,vD:1629072000,OC:1640736000,PC:1651708800,QC:1659657600,wD:1667260800,AB:1711497600,BB:1715126400,CB:1717718400,DB:1725667200,EB:1746057600}},Q:{A:{xD:0.176001},B:\"webkitxD\",\"\",\"\",\"\"],E:\"QQ Browser\",F:{xD:1710288000}},R:{A:{yD:0},B:\"webkityD\",\"\",\"\",\"\"],E:\"Baidu Browser\",F:{yD:1710201600}},S:{A:{zD:0.012138,\"0D\":0},B:\"mozzD\",\"0D\",\"\",\"\",\"\"],E:\"KaiOS Browser\",F:{zD:1527811200,\"0D\":1631664000}}};\n","module.exports={\"0\":\"117\",\"1\":\"118\",\"2\":\"119\",\"3\":\"120\",\"4\":\"121\",\"5\":\"122\",\"6\":\"20\",\"7\":\"21\",\"8\":\"22\",\"9\":\"23\",A:\"10\",B:\"11\",C:\"12\",D:\"7\",E:\"8\",F:\"9\",G:\"15\",H:\"80\",I:\"140\",J:\"4\",K:\"6\",L:\"13\",M:\"14\",N:\"16\",O:\"17\",P:\"18\",Q:\"79\",R:\"81\",S:\"83\",T:\"84\",U:\"85\",V:\"86\",W:\"87\",X:\"88\",Y:\"89\",Z:\"90\",a:\"91\",b:\"92\",c:\"93\",d:\"94\",e:\"95\",f:\"96\",g:\"97\",h:\"98\",i:\"99\",j:\"100\",k:\"101\",l:\"102\",m:\"103\",n:\"104\",o:\"105\",p:\"106\",q:\"107\",r:\"108\",s:\"109\",t:\"110\",u:\"111\",v:\"112\",w:\"113\",x:\"114\",y:\"115\",z:\"116\",AB:\"24\",BB:\"25\",CB:\"26\",DB:\"27\",EB:\"28\",FB:\"123\",GB:\"124\",HB:\"125\",IB:\"126\",JB:\"127\",KB:\"128\",LB:\"129\",MB:\"130\",NB:\"131\",OB:\"132\",PB:\"133\",QB:\"134\",RB:\"135\",SB:\"136\",TB:\"137\",UB:\"138\",VB:\"139\",WB:\"5\",XB:\"19\",YB:\"29\",ZB:\"30\",aB:\"31\",bB:\"32\",cB:\"33\",dB:\"34\",eB:\"35\",fB:\"36\",gB:\"37\",hB:\"38\",iB:\"39\",jB:\"40\",kB:\"41\",lB:\"42\",mB:\"43\",nB:\"44\",oB:\"45\",pB:\"46\",qB:\"47\",rB:\"48\",sB:\"49\",tB:\"50\",uB:\"51\",vB:\"52\",wB:\"53\",xB:\"54\",yB:\"55\",zB:\"56\",\"0B\":\"57\",\"1B\":\"58\",\"2B\":\"60\",\"3B\":\"62\",\"4B\":\"63\",\"5B\":\"64\",\"6B\":\"65\",\"7B\":\"66\",\"8B\":\"67\",\"9B\":\"68\",AC:\"69\",BC:\"70\",CC:\"71\",DC:\"72\",EC:\"73\",FC:\"74\",GC:\"75\",HC:\"76\",IC:\"77\",JC:\"78\",KC:\"142\",LC:\"11.1\",MC:\"12.1\",NC:\"15.5\",OC:\"16.0\",PC:\"17.0\",QC:\"18.0\",RC:\"3\",SC:\"59\",TC:\"61\",UC:\"82\",VC:\"141\",WC:\"143\",XC:\"3.2\",YC:\"10.1\",ZC:\"15.2-15.3\",aC:\"15.4\",bC:\"16.1\",cC:\"16.2\",dC:\"16.3\",eC:\"16.4\",fC:\"16.5\",gC:\"17.1\",hC:\"17.2\",iC:\"17.3\",jC:\"17.4\",kC:\"17.5\",lC:\"18.1\",mC:\"18.2\",nC:\"18.3\",oC:\"18.4\",pC:\"18.5-18.6\",qC:\"26.0\",rC:\"26.1\",sC:\"11.5\",tC:\"4.2-4.3\",uC:\"5.5\",vC:\"2\",wC:\"144\",xC:\"145\",yC:\"146\",zC:\"3.5\",\"0C\":\"3.6\",\"1C\":\"3.1\",\"2C\":\"5.1\",\"3C\":\"6.1\",\"4C\":\"7.1\",\"5C\":\"9.1\",\"6C\":\"13.1\",\"7C\":\"14.1\",\"8C\":\"15.1\",\"9C\":\"15.6\",AD:\"16.6\",BD:\"17.6\",CD:\"TP\",DD:\"9.5-9.6\",ED:\"10.0-10.1\",FD:\"10.5\",GD:\"10.6\",HD:\"11.6\",ID:\"4.0-4.1\",JD:\"5.0-5.1\",KD:\"6.0-6.1\",LD:\"7.0-7.1\",MD:\"8.1-8.4\",ND:\"9.0-9.2\",OD:\"9.3\",PD:\"10.0-10.2\",QD:\"10.3\",RD:\"11.0-11.2\",SD:\"11.3-11.4\",TD:\"12.0-12.1\",UD:\"12.2-12.5\",VD:\"13.0-13.1\",WD:\"13.2\",XD:\"13.3\",YD:\"13.4-13.7\",ZD:\"14.0-14.4\",aD:\"14.5-14.8\",bD:\"15.0-15.1\",cD:\"15.6-15.8\",dD:\"16.6-16.7\",eD:\"17.6-17.7\",fD:\"all\",gD:\"2.1\",hD:\"2.2\",iD:\"2.3\",jD:\"4.1\",kD:\"4.4\",lD:\"4.4.3-4.4.4\",mD:\"5.0-5.4\",nD:\"6.2-6.4\",oD:\"7.2-7.4\",pD:\"8.2\",qD:\"9.2\",rD:\"11.1-11.2\",sD:\"12.0\",tD:\"13.0\",uD:\"14.0\",vD:\"15.0\",wD:\"19.0\",xD:\"14.9\",yD:\"13.52\",zD:\"2.5\",\"0D\":\"3.0-3.1\"};\n","module.exports={A:\"ie\",B:\"edge\",C:\"firefox\",D:\"chrome\",E:\"safari\",F:\"opera\",G:\"ios_saf\",H:\"op_mini\",I:\"android\",J:\"bb\",K:\"op_mob\",L:\"and_chr\",M:\"and_ff\",N:\"ie_mob\",O:\"and_uc\",P:\"samsung\",Q:\"and_qq\",R:\"baidu\",S:\"kaios\"};\n","'use strict'\n\nconst browsers = require('./browsers').browsers\nconst versions = require('./browserVersions').browserVersions\nconst agentsData = require('../../data/agents')\n\nfunction unpackBrowserVersions(versionsData) {\n  return Object.keys(versionsData).reduce((usage, version) => {\n    usage[versions[version]] = versionsData[version]\n    return usage\n  }, {})\n}\n\nmodule.exports.agents = Object.keys(agentsData).reduce((map, key) => {\n  let versionsData = agentsData[key]\n  map[browsers[key]] = Object.keys(versionsData).reduce((data, entry) => {\n    if (entry === 'A') {\n      data.usage_global = unpackBrowserVersions(versionsData[entry])\n    } else if (entry === 'C') {\n      data.versions = versionsData[entry].reduce((list, version) => {\n        if (version === '') {\n          list.push(null)\n        } else {\n          list.push(versions[version])\n        }\n        return list\n      }, [])\n    } else if (entry === 'D') {\n      data.prefix_exceptions = unpackBrowserVersions(versionsData[entry])\n    } else if (entry === 'E') {\n      data.browser = versionsData[entry]\n    } else if (entry === 'F') {\n      data.release_date = Object.keys(versionsData[entry]).reduce(\n        (map2, key2) => {\n          map2[versions[key2]] = versionsData[entry][key2]\n          return map2\n        },\n        {}\n      )\n    } else {\n      // entry is B\n      data.prefix = versionsData[entry]\n    }\n    return data\n  }, {})\n  return map\n}, {})\n","module.exports.browserVersions = require('../../data/browserVersions')\n","module.exports.browsers = require('../../data/browsers')\n","module.exports = {\n\t\"0.20\": \"39\",\n\t\"0.21\": \"41\",\n\t\"0.22\": \"41\",\n\t\"0.23\": \"41\",\n\t\"0.24\": \"41\",\n\t\"0.25\": \"42\",\n\t\"0.26\": \"42\",\n\t\"0.27\": \"43\",\n\t\"0.28\": \"43\",\n\t\"0.29\": \"43\",\n\t\"0.30\": \"44\",\n\t\"0.31\": \"45\",\n\t\"0.32\": \"45\",\n\t\"0.33\": \"45\",\n\t\"0.34\": \"45\",\n\t\"0.35\": \"45\",\n\t\"0.36\": \"47\",\n\t\"0.37\": \"49\",\n\t\"1.0\": \"49\",\n\t\"1.1\": \"50\",\n\t\"1.2\": \"51\",\n\t\"1.3\": \"52\",\n\t\"1.4\": \"53\",\n\t\"1.5\": \"54\",\n\t\"1.6\": \"56\",\n\t\"1.7\": \"58\",\n\t\"1.8\": \"59\",\n\t\"2.0\": \"61\",\n\t\"2.1\": \"61\",\n\t\"3.0\": \"66\",\n\t\"3.1\": \"66\",\n\t\"4.0\": \"69\",\n\t\"4.1\": \"69\",\n\t\"4.2\": \"69\",\n\t\"5.0\": \"73\",\n\t\"6.0\": \"76\",\n\t\"6.1\": \"76\",\n\t\"7.0\": \"78\",\n\t\"7.1\": \"78\",\n\t\"7.2\": \"78\",\n\t\"7.3\": \"78\",\n\t\"8.0\": \"80\",\n\t\"8.1\": \"80\",\n\t\"8.2\": \"80\",\n\t\"8.3\": \"80\",\n\t\"8.4\": \"80\",\n\t\"8.5\": \"80\",\n\t\"9.0\": \"83\",\n\t\"9.1\": \"83\",\n\t\"9.2\": \"83\",\n\t\"9.3\": \"83\",\n\t\"9.4\": \"83\",\n\t\"10.0\": \"85\",\n\t\"10.1\": \"85\",\n\t\"10.2\": \"85\",\n\t\"10.3\": \"85\",\n\t\"10.4\": \"85\",\n\t\"11.0\": \"87\",\n\t\"11.1\": \"87\",\n\t\"11.2\": \"87\",\n\t\"11.3\": \"87\",\n\t\"11.4\": \"87\",\n\t\"11.5\": \"87\",\n\t\"12.0\": \"89\",\n\t\"12.1\": \"89\",\n\t\"12.2\": \"89\",\n\t\"13.0\": \"91\",\n\t\"13.1\": \"91\",\n\t\"13.2\": \"91\",\n\t\"13.3\": \"91\",\n\t\"13.4\": \"91\",\n\t\"13.5\": \"91\",\n\t\"13.6\": \"91\",\n\t\"14.0\": \"93\",\n\t\"14.1\": \"93\",\n\t\"14.2\": \"93\",\n\t\"15.0\": \"94\",\n\t\"15.1\": \"94\",\n\t\"15.2\": \"94\",\n\t\"15.3\": \"94\",\n\t\"15.4\": \"94\",\n\t\"15.5\": \"94\",\n\t\"16.0\": \"96\",\n\t\"16.1\": \"96\",\n\t\"16.2\": \"96\",\n\t\"17.0\": \"98\",\n\t\"17.1\": \"98\",\n\t\"17.2\": \"98\",\n\t\"17.3\": \"98\",\n\t\"17.4\": \"98\",\n\t\"18.0\": \"100\",\n\t\"18.1\": \"100\",\n\t\"18.2\": \"100\",\n\t\"18.3\": \"100\",\n\t\"19.0\": \"102\",\n\t\"19.1\": \"102\",\n\t\"20.0\": \"104\",\n\t\"20.1\": \"104\",\n\t\"20.2\": \"104\",\n\t\"20.3\": \"104\",\n\t\"21.0\": \"106\",\n\t\"21.1\": \"106\",\n\t\"21.2\": \"106\",\n\t\"21.3\": \"106\",\n\t\"21.4\": \"106\",\n\t\"22.0\": \"108\",\n\t\"22.1\": \"108\",\n\t\"22.2\": \"108\",\n\t\"22.3\": \"108\",\n\t\"23.0\": \"110\",\n\t\"23.1\": \"110\",\n\t\"23.2\": \"110\",\n\t\"23.3\": \"110\",\n\t\"24.0\": \"112\",\n\t\"24.1\": \"112\",\n\t\"24.2\": \"112\",\n\t\"24.3\": \"112\",\n\t\"24.4\": \"112\",\n\t\"24.5\": \"112\",\n\t\"24.6\": \"112\",\n\t\"24.7\": \"112\",\n\t\"24.8\": \"112\",\n\t\"25.0\": \"114\",\n\t\"25.1\": \"114\",\n\t\"25.2\": \"114\",\n\t\"25.3\": \"114\",\n\t\"25.4\": \"114\",\n\t\"25.5\": \"114\",\n\t\"25.6\": \"114\",\n\t\"25.7\": \"114\",\n\t\"25.8\": \"114\",\n\t\"25.9\": \"114\",\n\t\"26.0\": \"116\",\n\t\"26.1\": \"116\",\n\t\"26.2\": \"116\",\n\t\"26.3\": \"116\",\n\t\"26.4\": \"116\",\n\t\"26.5\": \"116\",\n\t\"26.6\": \"116\",\n\t\"27.0\": \"118\",\n\t\"27.1\": \"118\",\n\t\"27.2\": \"118\",\n\t\"27.3\": \"118\",\n\t\"28.0\": \"120\",\n\t\"28.1\": \"120\",\n\t\"28.2\": \"120\",\n\t\"28.3\": \"120\",\n\t\"29.0\": \"122\",\n\t\"29.1\": \"122\",\n\t\"29.2\": \"122\",\n\t\"29.3\": \"122\",\n\t\"29.4\": \"122\",\n\t\"30.0\": \"124\",\n\t\"30.1\": \"124\",\n\t\"30.2\": \"124\",\n\t\"30.3\": \"124\",\n\t\"30.4\": \"124\",\n\t\"30.5\": \"124\",\n\t\"31.0\": \"126\",\n\t\"31.1\": \"126\",\n\t\"31.2\": \"126\",\n\t\"31.3\": \"126\",\n\t\"31.4\": \"126\",\n\t\"31.5\": \"126\",\n\t\"31.6\": \"126\",\n\t\"31.7\": \"126\",\n\t\"32.0\": \"128\",\n\t\"32.1\": \"128\",\n\t\"32.2\": \"128\",\n\t\"32.3\": \"128\",\n\t\"33.0\": \"130\",\n\t\"33.1\": \"130\",\n\t\"33.2\": \"130\",\n\t\"33.3\": \"130\",\n\t\"33.4\": \"130\",\n\t\"34.0\": \"132\",\n\t\"34.1\": \"132\",\n\t\"34.2\": \"132\",\n\t\"34.3\": \"132\",\n\t\"34.4\": \"132\",\n\t\"34.5\": \"132\",\n\t\"35.0\": \"134\",\n\t\"35.1\": \"134\",\n\t\"35.2\": \"134\",\n\t\"35.3\": \"134\",\n\t\"35.4\": \"134\",\n\t\"35.5\": \"134\",\n\t\"35.6\": \"134\",\n\t\"35.7\": \"134\",\n\t\"36.0\": \"136\",\n\t\"36.1\": \"136\",\n\t\"36.2\": \"136\",\n\t\"36.3\": \"136\",\n\t\"36.4\": \"136\",\n\t\"36.5\": \"136\",\n\t\"36.6\": \"136\",\n\t\"36.7\": \"136\",\n\t\"36.8\": \"136\",\n\t\"36.9\": \"136\",\n\t\"37.0\": \"138\",\n\t\"37.1\": \"138\",\n\t\"37.2\": \"138\",\n\t\"37.3\": \"138\",\n\t\"37.4\": \"138\",\n\t\"37.5\": \"138\",\n\t\"37.6\": \"138\",\n\t\"38.0\": \"140\",\n\t\"38.1\": \"140\",\n\t\"38.2\": \"140\",\n\t\"39.0\": \"142\"\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar compatTransforms = require('./transforms');\nvar _transform = require('../transform');\n\nmodule.exports = {\n  /**\n   * Translates a regexp in new syntax to equivalent regexp in old syntax.\n   *\n   * @param string|RegExp|AST - regexp\n   * @param Array transformsWhitelist - names of the transforms to apply\n   */\n  transform: function transform(regexp) {\n    var transformsWhitelist = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    var transformToApply = transformsWhitelist.length > 0 ? transformsWhitelist : Object.keys(compatTransforms);\n\n    var result = void 0;\n\n    // Collect extra data per transform.\n    var extra = {};\n\n    transformToApply.forEach(function (transformName) {\n\n      if (!compatTransforms.hasOwnProperty(transformName)) {\n        throw new Error('Unknown compat-transform: ' + transformName + '. ' + 'Available transforms are: ' + Object.keys(compatTransforms).join(', '));\n      }\n\n      var handler = compatTransforms[transformName];\n\n      result = _transform.transform(regexp, handler);\n      regexp = result.getAST();\n\n      // Collect `extra` transform result.\n      if (typeof handler.getExtra === 'function') {\n        extra[transformName] = handler.getExtra();\n      }\n    });\n\n    // Set the final extras for all transforms.\n    result.setExtra(extra);\n\n    return result;\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * The `RegExpTree` class provides runtime support for `compat-transpiler`\n * module from `regexp-tree`.\n *\n * E.g. it tracks names of the capturing groups, in order to access the\n * names on the matched result.\n *\n * It's a thin-wrapper on top of original regexp.\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar RegExpTree = function () {\n  /**\n   * Initializes a `RegExpTree` instance.\n   *\n   * @param RegExp - a regular expression\n   *\n   * @param Object state:\n   *\n   *   An extra state which may store any related to transformation\n   *   data, for example, names of the groups.\n   *\n   *   - flags - original flags\n   *   - groups - names of the groups, and their indices\n   *   - source - original source\n   */\n  function RegExpTree(re, _ref) {\n    var flags = _ref.flags,\n        groups = _ref.groups,\n        source = _ref.source;\n\n    _classCallCheck(this, RegExpTree);\n\n    this._re = re;\n    this._groups = groups;\n\n    // Original props.\n    this.flags = flags;\n    this.source = source || re.source;\n    this.dotAll = flags.includes('s');\n\n    // Inherited directly from `re`.\n    this.global = re.global;\n    this.ignoreCase = re.ignoreCase;\n    this.multiline = re.multiline;\n    this.sticky = re.sticky;\n    this.unicode = re.unicode;\n  }\n\n  /**\n   * Facade wrapper for RegExp `test` method.\n   */\n\n\n  _createClass(RegExpTree, [{\n    key: 'test',\n    value: function test(string) {\n      return this._re.test(string);\n    }\n\n    /**\n     * Facade wrapper for RegExp `compile` method.\n     */\n\n  }, {\n    key: 'compile',\n    value: function compile(string) {\n      return this._re.compile(string);\n    }\n\n    /**\n     * Facade wrapper for RegExp `toString` method.\n     */\n\n  }, {\n    key: 'toString',\n    value: function toString() {\n      if (!this._toStringResult) {\n        this._toStringResult = '/' + this.source + '/' + this.flags;\n      }\n      return this._toStringResult;\n    }\n\n    /**\n     * Facade wrapper for RegExp `exec` method.\n     */\n\n  }, {\n    key: 'exec',\n    value: function exec(string) {\n      var result = this._re.exec(string);\n\n      if (!this._groups || !result) {\n        return result;\n      }\n\n      result.groups = {};\n\n      for (var group in this._groups) {\n        var groupNumber = this._groups[group];\n        result.groups[group] = result[groupNumber];\n      }\n\n      return result;\n    }\n  }]);\n\n  return RegExpTree;\n}();\n\nmodule.exports = {\n  RegExpTree: RegExpTree\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to translate `/./s` to `/[\\0-\\uFFFF]/`.\n */\n\nmodule.exports = {\n\n  // Whether `u` flag present. In which case we transform to\n  // \\u{10FFFF} instead of \\uFFFF.\n  _hasUFlag: false,\n\n  // Only run this plugin if we have `s` flag.\n  shouldRun: function shouldRun(ast) {\n    var shouldRun = ast.flags.includes('s');\n\n    if (!shouldRun) {\n      return false;\n    }\n\n    // Strip the `s` flag.\n    ast.flags = ast.flags.replace('s', '');\n\n    // Whether we have also `u`.\n    this._hasUFlag = ast.flags.includes('u');\n\n    return true;\n  },\n  Char: function Char(path) {\n    var node = path.node;\n\n\n    if (node.kind !== 'meta' || node.value !== '.') {\n      return;\n    }\n\n    var toValue = '\\\\uFFFF';\n    var toSymbol = '\\uFFFF';\n\n    if (this._hasUFlag) {\n      toValue = '\\\\u{10FFFF}';\n      toSymbol = '\\uDBFF\\uDFFF';\n    }\n\n    path.replace({\n      type: 'CharacterClass',\n      expressions: [{\n        type: 'ClassRange',\n        from: {\n          type: 'Char',\n          value: '\\\\0',\n          kind: 'decimal',\n          symbol: '\\0'\n        },\n        to: {\n          type: 'Char',\n          value: toValue,\n          kind: 'unicode',\n          symbol: toSymbol\n        }\n      }]\n    });\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to translate `/(?<name>a)\\k<name>/` to `/(a)\\1/`.\n */\n\nmodule.exports = {\n  // To track the names of the groups, and return them\n  // in the transform result state.\n  //\n  // A map from name to number: {foo: 2, bar: 4}\n  _groupNames: {},\n\n  /**\n   * Initialises the trasnform.\n   */\n  init: function init() {\n    this._groupNames = {};\n  },\n\n\n  /**\n   * Returns extra state, which eventually is returned to\n   */\n  getExtra: function getExtra() {\n    return this._groupNames;\n  },\n  Group: function Group(path) {\n    var node = path.node;\n\n\n    if (!node.name) {\n      return;\n    }\n\n    // Record group name.\n    this._groupNames[node.name] = node.number;\n\n    delete node.name;\n    delete node.nameRaw;\n  },\n  Backreference: function Backreference(path) {\n    var node = path.node;\n\n\n    if (node.kind !== 'name') {\n      return;\n    }\n\n    node.kind = 'number';\n    node.reference = node.number;\n    delete node.referenceRaw;\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to remove `x` flag `/foo/x` to `/foo/`.\n *\n * Note: other features of `x` flags (whitespace, comments) are\n * already removed at parsing stage.\n */\n\nmodule.exports = {\n  RegExp: function RegExp(_ref) {\n    var node = _ref.node;\n\n    if (node.flags.includes('x')) {\n      node.flags = node.flags.replace('x', '');\n    }\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nmodule.exports = {\n  // \"dotAll\" `s` flag\n  dotAll: require('./compat-dotall-s-transform'),\n\n  // Named capturing groups.\n  namedCapturingGroups: require('./compat-named-capturing-groups-transform'),\n\n  // `x` flag\n  xFlag: require('./compat-x-flag-transform')\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * Helper `gen` function calls node type handler.\n */\n\nfunction gen(node) {\n  return node ? generator[node.type](node) : '';\n}\n\n/**\n * AST handler.\n */\nvar generator = {\n  RegExp: function RegExp(node) {\n    return '/' + gen(node.body) + '/' + node.flags;\n  },\n  Alternative: function Alternative(node) {\n    return (node.expressions || []).map(gen).join('');\n  },\n  Disjunction: function Disjunction(node) {\n    return gen(node.left) + '|' + gen(node.right);\n  },\n  Group: function Group(node) {\n    var expression = gen(node.expression);\n\n    if (node.capturing) {\n      // A named group.\n      if (node.name) {\n        return '(?<' + (node.nameRaw || node.name) + '>' + expression + ')';\n      }\n\n      return '(' + expression + ')';\n    }\n\n    return '(?:' + expression + ')';\n  },\n  Backreference: function Backreference(node) {\n    switch (node.kind) {\n      case 'number':\n        return '\\\\' + node.reference;\n      case 'name':\n        return '\\\\k<' + (node.referenceRaw || node.reference) + '>';\n      default:\n        throw new TypeError('Unknown Backreference kind: ' + node.kind);\n    }\n  },\n  Assertion: function Assertion(node) {\n    switch (node.kind) {\n      case '^':\n      case '$':\n      case '\\\\b':\n      case '\\\\B':\n        return node.kind;\n\n      case 'Lookahead':\n        {\n          var assertion = gen(node.assertion);\n\n          if (node.negative) {\n            return '(?!' + assertion + ')';\n          }\n\n          return '(?=' + assertion + ')';\n        }\n\n      case 'Lookbehind':\n        {\n          var _assertion = gen(node.assertion);\n\n          if (node.negative) {\n            return '(?<!' + _assertion + ')';\n          }\n\n          return '(?<=' + _assertion + ')';\n        }\n\n      default:\n        throw new TypeError('Unknown Assertion kind: ' + node.kind);\n    }\n  },\n  CharacterClass: function CharacterClass(node) {\n    var expressions = node.expressions.map(gen).join('');\n\n    if (node.negative) {\n      return '[^' + expressions + ']';\n    }\n\n    return '[' + expressions + ']';\n  },\n  ClassRange: function ClassRange(node) {\n    return gen(node.from) + '-' + gen(node.to);\n  },\n  Repetition: function Repetition(node) {\n    return '' + gen(node.expression) + gen(node.quantifier);\n  },\n  Quantifier: function Quantifier(node) {\n    var quantifier = void 0;\n    var greedy = node.greedy ? '' : '?';\n\n    switch (node.kind) {\n      case '+':\n      case '?':\n      case '*':\n        quantifier = node.kind;\n        break;\n      case 'Range':\n        // Exact: {1}\n        if (node.from === node.to) {\n          quantifier = '{' + node.from + '}';\n        }\n        // Open: {1,}\n        else if (!node.to) {\n            quantifier = '{' + node.from + ',}';\n          }\n          // Closed: {1,3}\n          else {\n              quantifier = '{' + node.from + ',' + node.to + '}';\n            }\n        break;\n      default:\n        throw new TypeError('Unknown Quantifier kind: ' + node.kind);\n    }\n\n    return '' + quantifier + greedy;\n  },\n  Char: function Char(node) {\n    var value = node.value;\n\n    switch (node.kind) {\n      case 'simple':\n        {\n          if (node.escaped) {\n            return '\\\\' + value;\n          }\n          return value;\n        }\n\n      case 'hex':\n      case 'unicode':\n      case 'oct':\n      case 'decimal':\n      case 'control':\n      case 'meta':\n        return value;\n\n      default:\n        throw new TypeError('Unknown Char kind: ' + node.kind);\n    }\n  },\n  UnicodeProperty: function UnicodeProperty(node) {\n    var escapeChar = node.negative ? 'P' : 'p';\n    var namePart = void 0;\n\n    if (!node.shorthand && !node.binary) {\n      namePart = node.name + '=';\n    } else {\n      namePart = '';\n    }\n\n    return '\\\\' + escapeChar + '{' + namePart + node.value + '}';\n  }\n};\n\nmodule.exports = {\n  /**\n   * Generates a regexp string from an AST.\n   *\n   * @param Object ast - an AST node\n   */\n  generate: gen\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n// DFA minization.\n\n/**\n * Map from state to current set it goes.\n */\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nfunction _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar currentTransitionMap = null;\n\n/**\n * Takes a DFA, and returns a minimized version of it\n * compressing some states to groups (using standard, 0-, 1-,\n * 2-, ... N-equivalence algorithm).\n */\nfunction minimize(dfa) {\n  var table = dfa.getTransitionTable();\n  var allStates = Object.keys(table);\n  var alphabet = dfa.getAlphabet();\n  var accepting = dfa.getAcceptingStateNumbers();\n\n  currentTransitionMap = {};\n\n  var nonAccepting = new Set();\n\n  allStates.forEach(function (state) {\n    state = Number(state);\n    var isAccepting = accepting.has(state);\n\n    if (isAccepting) {\n      currentTransitionMap[state] = accepting;\n    } else {\n      nonAccepting.add(state);\n      currentTransitionMap[state] = nonAccepting;\n    }\n  });\n\n  // ---------------------------------------------------------------------------\n  // Step 1: build equivalent sets.\n\n  // All [1..N] equivalent sets.\n  var all = [\n  // 0-equivalent sets.\n  [nonAccepting, accepting].filter(function (set) {\n    return set.size > 0;\n  })];\n\n  var current = void 0;\n  var previous = void 0;\n\n  // Top of the stack is the current list of sets to analyze.\n  current = all[all.length - 1];\n\n  // Previous set (to check whether we need to stop).\n  previous = all[all.length - 2];\n\n  // Until we'll not have the same N and N-1 equivalent rows.\n\n  var _loop = function _loop() {\n    var newTransitionMap = {};\n\n    var _iteratorNormalCompletion3 = true;\n    var _didIteratorError3 = false;\n    var _iteratorError3 = undefined;\n\n    try {\n      for (var _iterator3 = current[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n        var _set = _step3.value;\n\n        // Handled states for this set.\n        var handledStates = {};\n\n        var _set2 = _toArray(_set),\n            first = _set2[0],\n            rest = _set2.slice(1);\n\n        handledStates[first] = new Set([first]);\n\n        // Have to compare each from the rest states with\n        // the already handled states, and see if they are equivalent.\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n          restSets: for (var _iterator4 = rest[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var state = _step4.value;\n            var _iteratorNormalCompletion5 = true;\n            var _didIteratorError5 = false;\n            var _iteratorError5 = undefined;\n\n            try {\n              for (var _iterator5 = Object.keys(handledStates)[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                var handledState = _step5.value;\n\n                // This and some previously handled state are equivalent --\n                // just append this state to the same set.\n                if (areEquivalent(state, handledState, table, alphabet)) {\n                  handledStates[handledState].add(state);\n                  handledStates[state] = handledStates[handledState];\n                  continue restSets;\n                }\n              }\n              // Else, this state is not equivalent to any of the\n              // handled states -- allocate a new set for it.\n            } catch (err) {\n              _didIteratorError5 = true;\n              _iteratorError5 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                  _iterator5.return();\n                }\n              } finally {\n                if (_didIteratorError5) {\n                  throw _iteratorError5;\n                }\n              }\n            }\n\n            handledStates[state] = new Set([state]);\n          }\n        } catch (err) {\n          _didIteratorError4 = true;\n          _iteratorError4 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion4 && _iterator4.return) {\n              _iterator4.return();\n            }\n          } finally {\n            if (_didIteratorError4) {\n              throw _iteratorError4;\n            }\n          }\n        }\n\n        // Add these handled states to all states map.\n\n\n        Object.assign(newTransitionMap, handledStates);\n      }\n\n      // Update current transition map for the handled row.\n    } catch (err) {\n      _didIteratorError3 = true;\n      _iteratorError3 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion3 && _iterator3.return) {\n          _iterator3.return();\n        }\n      } finally {\n        if (_didIteratorError3) {\n          throw _iteratorError3;\n        }\n      }\n    }\n\n    currentTransitionMap = newTransitionMap;\n\n    var newSets = new Set(Object.keys(newTransitionMap).map(function (state) {\n      return newTransitionMap[state];\n    }));\n\n    all.push([].concat(_toConsumableArray(newSets)));\n\n    // Top of the stack is the current.\n    current = all[all.length - 1];\n\n    // Previous set.\n    previous = all[all.length - 2];\n  };\n\n  while (!sameRow(current, previous)) {\n    _loop();\n  }\n\n  // ---------------------------------------------------------------------------\n  // Step 2: build minimized table from the equivalent sets.\n\n  // Remap state numbers from sets to index-based.\n  var remaped = new Map();\n  var idx = 1;\n  current.forEach(function (set) {\n    return remaped.set(set, idx++);\n  });\n\n  // Build the minimized table from the calculated equivalent sets.\n  var minimizedTable = {};\n\n  var minimizedAcceptingStates = new Set();\n\n  var updateAcceptingStates = function updateAcceptingStates(set, idx) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = set[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var state = _step.value;\n\n        if (accepting.has(state)) {\n          minimizedAcceptingStates.add(idx);\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  };\n\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = remaped.entries()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _ref = _step2.value;\n\n      var _ref2 = _slicedToArray(_ref, 2);\n\n      var set = _ref2[0];\n      var _idx = _ref2[1];\n\n      minimizedTable[_idx] = {};\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = alphabet[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var symbol = _step6.value;\n\n          updateAcceptingStates(set, _idx);\n\n          // Determine original transition for this symbol from the set.\n          var originalTransition = void 0;\n          var _iteratorNormalCompletion7 = true;\n          var _didIteratorError7 = false;\n          var _iteratorError7 = undefined;\n\n          try {\n            for (var _iterator7 = set[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n              var originalState = _step7.value;\n\n              originalTransition = table[originalState][symbol];\n              if (originalTransition) {\n                break;\n              }\n            }\n          } catch (err) {\n            _didIteratorError7 = true;\n            _iteratorError7 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion7 && _iterator7.return) {\n                _iterator7.return();\n              }\n            } finally {\n              if (_didIteratorError7) {\n                throw _iteratorError7;\n              }\n            }\n          }\n\n          if (originalTransition) {\n            minimizedTable[_idx][symbol] = remaped.get(currentTransitionMap[originalTransition]);\n          }\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n    }\n\n    // Update the table, and accepting states on the original DFA.\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  dfa.setTransitionTable(minimizedTable);\n  dfa.setAcceptingStateNumbers(minimizedAcceptingStates);\n\n  return dfa;\n}\n\nfunction sameRow(r1, r2) {\n  if (!r2) {\n    return false;\n  }\n\n  if (r1.length !== r2.length) {\n    return false;\n  }\n\n  for (var i = 0; i < r1.length; i++) {\n    var s1 = r1[i];\n    var s2 = r2[i];\n\n    if (s1.size !== s2.size) {\n      return false;\n    }\n\n    if ([].concat(_toConsumableArray(s1)).sort().join(',') !== [].concat(_toConsumableArray(s2)).sort().join(',')) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Checks whether two states are N-equivalent, i.e. whether they go\n * to the same set on a symbol.\n */\nfunction areEquivalent(s1, s2, table, alphabet) {\n  var _iteratorNormalCompletion8 = true;\n  var _didIteratorError8 = false;\n  var _iteratorError8 = undefined;\n\n  try {\n    for (var _iterator8 = alphabet[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n      var symbol = _step8.value;\n\n      if (!goToSameSet(s1, s2, table, symbol)) {\n        return false;\n      }\n    }\n  } catch (err) {\n    _didIteratorError8 = true;\n    _iteratorError8 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion8 && _iterator8.return) {\n        _iterator8.return();\n      }\n    } finally {\n      if (_didIteratorError8) {\n        throw _iteratorError8;\n      }\n    }\n  }\n\n  return true;\n}\n\n/**\n * Checks whether states go to the same set.\n */\nfunction goToSameSet(s1, s2, table, symbol) {\n  if (!currentTransitionMap[s1] || !currentTransitionMap[s2]) {\n    return false;\n  }\n\n  var originalTransitionS1 = table[s1][symbol];\n  var originalTransitionS2 = table[s2][symbol];\n\n  // If no actual transition on this symbol, treat it as positive.\n  if (!originalTransitionS1 && !originalTransitionS2) {\n    return true;\n  }\n\n  // Otherwise, check if they are in the same sets.\n  return currentTransitionMap[s1].has(originalTransitionS1) && currentTransitionMap[s2].has(originalTransitionS2);\n}\n\nmodule.exports = {\n  minimize: minimize\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DFAMinimizer = require('./dfa-minimizer');\n\nvar _require = require('../special-symbols'),\n    EPSILON_CLOSURE = _require.EPSILON_CLOSURE;\n\n/**\n * DFA is build by converting from NFA (subset construction).\n */\n\n\nvar DFA = function () {\n  function DFA(nfa) {\n    _classCallCheck(this, DFA);\n\n    this._nfa = nfa;\n  }\n\n  /**\n   * Minimizes DFA.\n   */\n\n\n  _createClass(DFA, [{\n    key: 'minimize',\n    value: function minimize() {\n      this.getTransitionTable();\n\n      this._originalAcceptingStateNumbers = this._acceptingStateNumbers;\n      this._originalTransitionTable = this._transitionTable;\n\n      DFAMinimizer.minimize(this);\n    }\n\n    /**\n     * Returns alphabet for this DFA.\n     */\n\n  }, {\n    key: 'getAlphabet',\n    value: function getAlphabet() {\n      return this._nfa.getAlphabet();\n    }\n\n    /**\n     * Returns accepting states.\n     */\n\n  }, {\n    key: 'getAcceptingStateNumbers',\n    value: function getAcceptingStateNumbers() {\n      if (!this._acceptingStateNumbers) {\n        // Accepting states are determined during table construction.\n        this.getTransitionTable();\n      }\n\n      return this._acceptingStateNumbers;\n    }\n\n    /**\n     * Returns original accepting states.\n     */\n\n  }, {\n    key: 'getOriginaAcceptingStateNumbers',\n    value: function getOriginaAcceptingStateNumbers() {\n      if (!this._originalAcceptingStateNumbers) {\n        // Accepting states are determined during table construction.\n        this.getTransitionTable();\n      }\n\n      return this._originalAcceptingStateNumbers;\n    }\n\n    /**\n     * Sets transition table.\n     */\n\n  }, {\n    key: 'setTransitionTable',\n    value: function setTransitionTable(table) {\n      this._transitionTable = table;\n    }\n\n    /**\n     * Sets accepting states.\n     */\n\n  }, {\n    key: 'setAcceptingStateNumbers',\n    value: function setAcceptingStateNumbers(stateNumbers) {\n      this._acceptingStateNumbers = stateNumbers;\n    }\n\n    /**\n     * DFA transition table is built from NFA table.\n     */\n\n  }, {\n    key: 'getTransitionTable',\n    value: function getTransitionTable() {\n      var _this = this;\n\n      if (this._transitionTable) {\n        return this._transitionTable;\n      }\n\n      // Calculate from NFA transition table.\n      var nfaTable = this._nfa.getTransitionTable();\n      var nfaStates = Object.keys(nfaTable);\n\n      this._acceptingStateNumbers = new Set();\n\n      // Start state of DFA is E(S[nfa])\n      var startState = nfaTable[nfaStates[0]][EPSILON_CLOSURE];\n\n      // Init the worklist (states which should be in the DFA).\n      var worklist = [startState];\n\n      var alphabet = this.getAlphabet();\n      var nfaAcceptingStates = this._nfa.getAcceptingStateNumbers();\n\n      var dfaTable = {};\n\n      // Determine whether the combined DFA state is accepting.\n      var updateAcceptingStates = function updateAcceptingStates(states) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = nfaAcceptingStates[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var nfaAcceptingState = _step.value;\n\n            // If any of the states from NFA is accepting, DFA's\n            // state is accepting as well.\n            if (states.indexOf(nfaAcceptingState) !== -1) {\n              _this._acceptingStateNumbers.add(states.join(','));\n              break;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      };\n\n      while (worklist.length > 0) {\n        var states = worklist.shift();\n        var dfaStateLabel = states.join(',');\n        dfaTable[dfaStateLabel] = {};\n\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = alphabet[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var symbol = _step2.value;\n\n            var onSymbol = [];\n\n            // Determine whether the combined state is accepting.\n            updateAcceptingStates(states);\n\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n              for (var _iterator3 = states[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                var state = _step3.value;\n\n                var nfaStatesOnSymbol = nfaTable[state][symbol];\n                if (!nfaStatesOnSymbol) {\n                  continue;\n                }\n\n                var _iteratorNormalCompletion4 = true;\n                var _didIteratorError4 = false;\n                var _iteratorError4 = undefined;\n\n                try {\n                  for (var _iterator4 = nfaStatesOnSymbol[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                    var nfaStateOnSymbol = _step4.value;\n\n                    if (!nfaTable[nfaStateOnSymbol]) {\n                      continue;\n                    }\n                    onSymbol.push.apply(onSymbol, _toConsumableArray(nfaTable[nfaStateOnSymbol][EPSILON_CLOSURE]));\n                  }\n                } catch (err) {\n                  _didIteratorError4 = true;\n                  _iteratorError4 = err;\n                } finally {\n                  try {\n                    if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                      _iterator4.return();\n                    }\n                  } finally {\n                    if (_didIteratorError4) {\n                      throw _iteratorError4;\n                    }\n                  }\n                }\n              }\n            } catch (err) {\n              _didIteratorError3 = true;\n              _iteratorError3 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                  _iterator3.return();\n                }\n              } finally {\n                if (_didIteratorError3) {\n                  throw _iteratorError3;\n                }\n              }\n            }\n\n            var dfaStatesOnSymbolSet = new Set(onSymbol);\n            var dfaStatesOnSymbol = [].concat(_toConsumableArray(dfaStatesOnSymbolSet));\n\n            if (dfaStatesOnSymbol.length > 0) {\n              var dfaOnSymbolStr = dfaStatesOnSymbol.join(',');\n\n              dfaTable[dfaStateLabel][symbol] = dfaOnSymbolStr;\n\n              if (!dfaTable.hasOwnProperty(dfaOnSymbolStr)) {\n                worklist.unshift(dfaStatesOnSymbol);\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n\n      return this._transitionTable = this._remapStateNumbers(dfaTable);\n    }\n\n    /**\n     * Remaps state numbers in the resulting table:\n     * combined states '1,2,3' -> 1, '3,4' -> 2, etc.\n     */\n\n  }, {\n    key: '_remapStateNumbers',\n    value: function _remapStateNumbers(calculatedDFATable) {\n      var newStatesMap = {};\n\n      this._originalTransitionTable = calculatedDFATable;\n      var transitionTable = {};\n\n      Object.keys(calculatedDFATable).forEach(function (originalNumber, newNumber) {\n        newStatesMap[originalNumber] = newNumber + 1;\n      });\n\n      for (var originalNumber in calculatedDFATable) {\n        var originalRow = calculatedDFATable[originalNumber];\n        var row = {};\n\n        for (var symbol in originalRow) {\n          row[symbol] = newStatesMap[originalRow[symbol]];\n        }\n\n        transitionTable[newStatesMap[originalNumber]] = row;\n      }\n\n      // Remap accepting states.\n      this._originalAcceptingStateNumbers = this._acceptingStateNumbers;\n      this._acceptingStateNumbers = new Set();\n\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = this._originalAcceptingStateNumbers[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var _originalNumber = _step5.value;\n\n          this._acceptingStateNumbers.add(newStatesMap[_originalNumber]);\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      return transitionTable;\n    }\n\n    /**\n     * Returns original DFA table, where state numbers\n     * are combined numbers from NFA.\n     */\n\n  }, {\n    key: 'getOriginalTransitionTable',\n    value: function getOriginalTransitionTable() {\n      if (!this._originalTransitionTable) {\n        // Original table is determined during table construction.\n        this.getTransitionTable();\n      }\n      return this._originalTransitionTable;\n    }\n\n    /**\n     * Checks whether this DFA accepts a string.\n     */\n\n  }, {\n    key: 'matches',\n    value: function matches(string) {\n      var state = 1;\n      var i = 0;\n      var table = this.getTransitionTable();\n\n      while (string[i]) {\n        state = table[state][string[i++]];\n        if (!state) {\n          return false;\n        }\n      }\n\n      if (!this.getAcceptingStateNumbers().has(state)) {\n        return false;\n      }\n\n      return true;\n    }\n  }]);\n\n  return DFA;\n}();\n\nmodule.exports = DFA;","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar NFA = require('./nfa/nfa');\nvar DFA = require('./dfa/dfa');\n\nvar nfaFromRegExp = require('./nfa/nfa-from-regexp');\nvar builders = require('./nfa/builders');\n\nmodule.exports = {\n\n  /**\n   * Export NFA and DFA classes.\n   */\n  NFA: NFA,\n  DFA: DFA,\n\n  /**\n   * Expose builders.\n   */\n  builders: builders,\n\n  /**\n   * Builds an NFA for the passed regexp.\n   *\n   * @param string | AST | RegExp:\n   *\n   *   a regular expression in different representations: a string,\n   *   a RegExp object, or an AST.\n   */\n  toNFA: function toNFA(regexp) {\n    return nfaFromRegExp.build(regexp);\n  },\n\n\n  /**\n   * Builds DFA for the passed regexp.\n   *\n   * @param string | AST | RegExp:\n   *\n   *   a regular expression in different representations: a string,\n   *   a RegExp object, or an AST.\n   */\n  toDFA: function toDFA(regexp) {\n    return new DFA(this.toNFA(regexp));\n  },\n\n\n  /**\n   * Returns true if regexp accepts the string.\n   */\n  test: function test(regexp, string) {\n    return this.toDFA(regexp).matches(string);\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar NFA = require('./nfa');\nvar NFAState = require('./nfa-state');\n\nvar _require = require('../special-symbols'),\n    EPSILON = _require.EPSILON;\n\n// -----------------------------------------------------------------------------\n// Char NFA fragment: `c`\n\n/**\n * Char factory.\n *\n * Creates an NFA fragment for a single char.\n *\n * [in] --c--> [out]\n */\n\n\nfunction char(c) {\n  var inState = new NFAState();\n  var outState = new NFAState({\n    accepting: true\n  });\n\n  return new NFA(inState.addTransition(c, outState), outState);\n}\n\n// -----------------------------------------------------------------------------\n// Epsilon NFA fragment\n\n/**\n * Epsilon factory.\n *\n * Creates an NFA fragment for ε (recognizes an empty string).\n *\n * [in] --ε--> [out]\n */\nfunction e() {\n  return char(EPSILON);\n}\n\n// -----------------------------------------------------------------------------\n// Alteration NFA fragment: `abc`\n\n/**\n * Creates a connection between two NFA fragments on epsilon transition.\n *\n * [in-a] --a--> [out-a] --ε--> [in-b] --b--> [out-b]\n */\nfunction altPair(first, second) {\n  first.out.accepting = false;\n  second.out.accepting = true;\n\n  first.out.addTransition(EPSILON, second.in);\n\n  return new NFA(first.in, second.out);\n}\n\n/**\n * Alteration factory.\n *\n * Creates a alteration NFA for (at least) two NFA-fragments.\n */\nfunction alt(first) {\n  for (var _len = arguments.length, fragments = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    fragments[_key - 1] = arguments[_key];\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = fragments[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var fragment = _step.value;\n\n      first = altPair(first, fragment);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return first;\n}\n\n// -----------------------------------------------------------------------------\n// Disjunction NFA fragment: `a|b`\n\n/**\n * Creates a disjunction choice between two fragments.\n */\nfunction orPair(first, second) {\n  var inState = new NFAState();\n  var outState = new NFAState();\n\n  inState.addTransition(EPSILON, first.in);\n  inState.addTransition(EPSILON, second.in);\n\n  outState.accepting = true;\n  first.out.accepting = false;\n  second.out.accepting = false;\n\n  first.out.addTransition(EPSILON, outState);\n  second.out.addTransition(EPSILON, outState);\n\n  return new NFA(inState, outState);\n}\n\n/**\n * Disjunction factory.\n *\n * Creates a disjunction NFA for (at least) two NFA-fragments.\n */\nfunction or(first) {\n  for (var _len2 = arguments.length, fragments = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    fragments[_key2 - 1] = arguments[_key2];\n  }\n\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = fragments[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var fragment = _step2.value;\n\n      first = orPair(first, fragment);\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return first;\n}\n\n// -----------------------------------------------------------------------------\n// Kleene-closure\n\n/**\n * Kleene star/closure.\n *\n * a*\n */\nfunction repExplicit(fragment) {\n  var inState = new NFAState();\n  var outState = new NFAState({\n    accepting: true\n  });\n\n  // 0 or more.\n  inState.addTransition(EPSILON, fragment.in);\n  inState.addTransition(EPSILON, outState);\n\n  fragment.out.accepting = false;\n  fragment.out.addTransition(EPSILON, outState);\n  outState.addTransition(EPSILON, fragment.in);\n\n  return new NFA(inState, outState);\n}\n\n/**\n * Optimized Kleene-star: just adds ε-transitions from\n * input to the output, and back.\n */\nfunction rep(fragment) {\n  fragment.in.addTransition(EPSILON, fragment.out);\n  fragment.out.addTransition(EPSILON, fragment.in);\n  return fragment;\n}\n\n/**\n * Optimized Plus: just adds ε-transitions from\n * the output to the input.\n */\nfunction plusRep(fragment) {\n  fragment.out.addTransition(EPSILON, fragment.in);\n  return fragment;\n}\n\n/**\n * Optimized ? repetition: just adds ε-transitions from\n * the input to the output.\n */\nfunction questionRep(fragment) {\n  fragment.in.addTransition(EPSILON, fragment.out);\n  return fragment;\n}\n\nmodule.exports = {\n  alt: alt,\n  char: char,\n  e: e,\n  or: or,\n  rep: rep,\n  repExplicit: repExplicit,\n  plusRep: plusRep,\n  questionRep: questionRep\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar parser = require('../../../parser');\n\nvar _require = require('./builders'),\n    alt = _require.alt,\n    char = _require.char,\n    or = _require.or,\n    rep = _require.rep,\n    plusRep = _require.plusRep,\n    questionRep = _require.questionRep;\n\n/**\n * Helper `gen` function calls node type handler.\n */\n\n\nfunction gen(node) {\n  if (node && !generator[node.type]) {\n    throw new Error(node.type + ' is not supported in NFA/DFA interpreter.');\n  }\n\n  return node ? generator[node.type](node) : '';\n}\n\n/**\n * AST handler.\n */\nvar generator = {\n  RegExp: function RegExp(node) {\n    if (node.flags !== '') {\n      throw new Error('NFA/DFA: Flags are not supported yet.');\n    }\n\n    return gen(node.body);\n  },\n  Alternative: function Alternative(node) {\n    var fragments = (node.expressions || []).map(gen);\n    return alt.apply(undefined, _toConsumableArray(fragments));\n  },\n  Disjunction: function Disjunction(node) {\n    return or(gen(node.left), gen(node.right));\n  },\n  Repetition: function Repetition(node) {\n    switch (node.quantifier.kind) {\n      case '*':\n        return rep(gen(node.expression));\n      case '+':\n        return plusRep(gen(node.expression));\n      case '?':\n        return questionRep(gen(node.expression));\n      default:\n        throw new Error('Unknown repeatition: ' + node.quantifier.kind + '.');\n    }\n  },\n  Char: function Char(node) {\n    if (node.kind !== 'simple') {\n      throw new Error('NFA/DFA: Only simple chars are supported yet.');\n    }\n\n    return char(node.value);\n  },\n  Group: function Group(node) {\n    return gen(node.expression);\n  }\n};\n\nmodule.exports = {\n  /**\n   * Builds an NFA from the passed regexp.\n   */\n  build: function build(regexp) {\n    var ast = regexp;\n\n    if (regexp instanceof RegExp) {\n      regexp = '' + regexp;\n    }\n\n    if (typeof regexp === 'string') {\n      ast = parser.parse(regexp, {\n        captureLocations: true\n      });\n    }\n\n    return gen(ast);\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar State = require('../state');\n\nvar _require = require('../special-symbols'),\n    EPSILON = _require.EPSILON;\n\n/**\n * NFA state.\n *\n * Allows nondeterministic transitions to several states on the\n * same symbol, and also epsilon-transitions.\n */\n\n\nvar NFAState = function (_State) {\n  _inherits(NFAState, _State);\n\n  function NFAState() {\n    _classCallCheck(this, NFAState);\n\n    return _possibleConstructorReturn(this, (NFAState.__proto__ || Object.getPrototypeOf(NFAState)).apply(this, arguments));\n  }\n\n  _createClass(NFAState, [{\n    key: 'matches',\n\n\n    /**\n     * Whether this state matches a string.\n     *\n     * We maintain set of visited epsilon-states to avoid infinite loops\n     * when an epsilon-transition goes eventually to itself.\n     *\n     * NOTE: this function is rather \"educational\", since we use DFA for strings\n     * matching. DFA is built on top of NFA, and uses fast transition table.\n     */\n    value: function matches(string) {\n      var visited = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Set();\n\n      // An epsilon-state has been visited, stop to avoid infinite loop.\n      if (visited.has(this)) {\n        return false;\n      }\n\n      visited.add(this);\n\n      // No symbols left..\n      if (string.length === 0) {\n        // .. and we're in the accepting state.\n        if (this.accepting) {\n          return true;\n        }\n\n        // Check if we can reach any accepting state from\n        // on the epsilon transitions.\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = this.getTransitionsOnSymbol(EPSILON)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var nextState = _step.value;\n\n            if (nextState.matches('', visited)) {\n              return true;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        return false;\n      }\n\n      // Else, we get some symbols.\n      var symbol = string[0];\n      var rest = string.slice(1);\n\n      var symbolTransitions = this.getTransitionsOnSymbol(symbol);\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = symbolTransitions[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var _nextState = _step2.value;\n\n          if (_nextState.matches(rest)) {\n            return true;\n          }\n        }\n\n        // If we couldn't match on symbol, check still epsilon-transitions\n        // without consuming the symbol (i.e. continue from `string`, not `rest`).\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.getTransitionsOnSymbol(EPSILON)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _nextState2 = _step3.value;\n\n          if (_nextState2.matches(string, visited)) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return false;\n    }\n\n    /**\n     * Returns an ε-closure for this state:\n     * self + all states following ε-transitions.\n     */\n\n  }, {\n    key: 'getEpsilonClosure',\n    value: function getEpsilonClosure() {\n      var _this2 = this;\n\n      if (!this._epsilonClosure) {\n        (function () {\n          var epsilonTransitions = _this2.getTransitionsOnSymbol(EPSILON);\n          var closure = _this2._epsilonClosure = new Set();\n          closure.add(_this2);\n          var _iteratorNormalCompletion4 = true;\n          var _didIteratorError4 = false;\n          var _iteratorError4 = undefined;\n\n          try {\n            for (var _iterator4 = epsilonTransitions[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n              var nextState = _step4.value;\n\n              if (!closure.has(nextState)) {\n                closure.add(nextState);\n                var nextClosure = nextState.getEpsilonClosure();\n                nextClosure.forEach(function (state) {\n                  return closure.add(state);\n                });\n              }\n            }\n          } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                _iterator4.return();\n              }\n            } finally {\n              if (_didIteratorError4) {\n                throw _iteratorError4;\n              }\n            }\n          }\n        })();\n      }\n\n      return this._epsilonClosure;\n    }\n  }]);\n\n  return NFAState;\n}(State);\n\nmodule.exports = NFAState;","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _require = require('../special-symbols'),\n    EPSILON = _require.EPSILON,\n    EPSILON_CLOSURE = _require.EPSILON_CLOSURE;\n\n/**\n * NFA fragment.\n *\n * NFA sub-fragments can be combined to a larger NFAs building\n * the resulting machine. Combining the fragments is done by patching\n * edges of the in- and out-states.\n *\n * 2-states implementation, `in`, and `out`. Eventually all transitions\n * go to the same `out`, which can further be connected via ε-transition\n * with other fragment.\n */\n\n\nvar NFA = function () {\n  function NFA(inState, outState) {\n    _classCallCheck(this, NFA);\n\n    this.in = inState;\n    this.out = outState;\n  }\n\n  /**\n   * Tries to recognize a string based on this NFA fragment.\n   */\n\n\n  _createClass(NFA, [{\n    key: 'matches',\n    value: function matches(string) {\n      return this.in.matches(string);\n    }\n\n    /**\n     * Returns an alphabet for this NFA.\n     */\n\n  }, {\n    key: 'getAlphabet',\n    value: function getAlphabet() {\n      if (!this._alphabet) {\n        this._alphabet = new Set();\n        var table = this.getTransitionTable();\n        for (var state in table) {\n          var transitions = table[state];\n          for (var symbol in transitions) {\n            if (symbol !== EPSILON_CLOSURE) {\n              this._alphabet.add(symbol);\n            }\n          }\n        }\n      }\n      return this._alphabet;\n    }\n\n    /**\n     * Returns set of accepting states.\n     */\n\n  }, {\n    key: 'getAcceptingStates',\n    value: function getAcceptingStates() {\n      if (!this._acceptingStates) {\n        // States are determined during table construction.\n        this.getTransitionTable();\n      }\n      return this._acceptingStates;\n    }\n\n    /**\n     * Returns accepting state numbers.\n     */\n\n  }, {\n    key: 'getAcceptingStateNumbers',\n    value: function getAcceptingStateNumbers() {\n      if (!this._acceptingStateNumbers) {\n        this._acceptingStateNumbers = new Set();\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = this.getAcceptingStates()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var acceptingState = _step.value;\n\n            this._acceptingStateNumbers.add(acceptingState.number);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n      return this._acceptingStateNumbers;\n    }\n\n    /**\n     * Builds and returns transition table.\n     */\n\n  }, {\n    key: 'getTransitionTable',\n    value: function getTransitionTable() {\n      var _this = this;\n\n      if (!this._transitionTable) {\n        this._transitionTable = {};\n        this._acceptingStates = new Set();\n\n        var visited = new Set();\n        var symbols = new Set();\n\n        var visitState = function visitState(state) {\n          if (visited.has(state)) {\n            return;\n          }\n\n          visited.add(state);\n          state.number = visited.size;\n          _this._transitionTable[state.number] = {};\n\n          if (state.accepting) {\n            _this._acceptingStates.add(state);\n          }\n\n          var transitions = state.getTransitions();\n\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = transitions[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var _ref = _step2.value;\n\n              var _ref2 = _slicedToArray(_ref, 2);\n\n              var symbol = _ref2[0];\n              var symbolTransitions = _ref2[1];\n\n              var combinedState = [];\n              symbols.add(symbol);\n              var _iteratorNormalCompletion3 = true;\n              var _didIteratorError3 = false;\n              var _iteratorError3 = undefined;\n\n              try {\n                for (var _iterator3 = symbolTransitions[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                  var nextState = _step3.value;\n\n                  visitState(nextState);\n                  combinedState.push(nextState.number);\n                }\n              } catch (err) {\n                _didIteratorError3 = true;\n                _iteratorError3 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                    _iterator3.return();\n                  }\n                } finally {\n                  if (_didIteratorError3) {\n                    throw _iteratorError3;\n                  }\n                }\n              }\n\n              _this._transitionTable[state.number][symbol] = combinedState;\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n        };\n\n        // Traverse the graph starting from the `in`.\n        visitState(this.in);\n\n        // Append epsilon-closure column.\n        visited.forEach(function (state) {\n          delete _this._transitionTable[state.number][EPSILON];\n          _this._transitionTable[state.number][EPSILON_CLOSURE] = [].concat(_toConsumableArray(state.getEpsilonClosure())).map(function (s) {\n            return s.number;\n          });\n        });\n      }\n\n      return this._transitionTable;\n    }\n  }]);\n\n  return NFA;\n}();\n\nmodule.exports = NFA;","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * Epsilon, the empty string.\n */\n\nvar EPSILON = 'ε';\n\n/**\n * Epsilon-closure.\n */\nvar EPSILON_CLOSURE = EPSILON + '*';\n\nmodule.exports = {\n  EPSILON: EPSILON,\n  EPSILON_CLOSURE: EPSILON_CLOSURE\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A generic FA State class (base for NFA and DFA).\n *\n * Maintains the transition map, and the flag whether\n * the state is accepting.\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar State = function () {\n  function State() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$accepting = _ref.accepting,\n        accepting = _ref$accepting === undefined ? false : _ref$accepting;\n\n    _classCallCheck(this, State);\n\n    /**\n     * Outgoing transitions to other states.\n     */\n    this._transitions = new Map();\n\n    /**\n     * Whether the state is accepting.\n     */\n    this.accepting = accepting;\n  }\n\n  /**\n   * Returns transitions for this state.\n   */\n\n\n  _createClass(State, [{\n    key: 'getTransitions',\n    value: function getTransitions() {\n      return this._transitions;\n    }\n\n    /**\n     * Creates a transition on symbol.\n     */\n\n  }, {\n    key: 'addTransition',\n    value: function addTransition(symbol, toState) {\n      this.getTransitionsOnSymbol(symbol).add(toState);\n      return this;\n    }\n\n    /**\n     * Returns transitions set on symbol.\n     */\n\n  }, {\n    key: 'getTransitionsOnSymbol',\n    value: function getTransitionsOnSymbol(symbol) {\n      var transitions = this._transitions.get(symbol);\n\n      if (!transitions) {\n        transitions = new Set();\n        this._transitions.set(symbol, transitions);\n      }\n\n      return transitions;\n    }\n  }]);\n\n  return State;\n}();\n\nmodule.exports = State;","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar clone = require('../utils/clone');\nvar parser = require('../parser');\nvar transform = require('../transform');\nvar optimizationTransforms = require('./transforms');\n\nmodule.exports = {\n  /**\n   * Optimizer transforms a regular expression into an optimized version,\n   * replacing some sub-expressions with their idiomatic patterns.\n   *\n   * @param string | RegExp | AST - a regexp to optimize.\n   *\n   * @return TransformResult - an optimized regexp.\n   *\n   * Example:\n   *\n   *   /[a-zA-Z_0-9][a-zA-Z_0-9]*\\e{1,}/\n   *\n   * Optimized to:\n   *\n   *   /\\w+e+/\n   */\n  optimize: function optimize(regexp) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$whitelist = _ref.whitelist,\n        whitelist = _ref$whitelist === undefined ? [] : _ref$whitelist,\n        _ref$blacklist = _ref.blacklist,\n        blacklist = _ref$blacklist === undefined ? [] : _ref$blacklist;\n\n    var transformsRaw = whitelist.length > 0 ? whitelist : Array.from(optimizationTransforms.keys());\n\n    var transformToApply = transformsRaw.filter(function (transform) {\n      return !blacklist.includes(transform);\n    });\n\n    var ast = regexp;\n    if (regexp instanceof RegExp) {\n      regexp = '' + regexp;\n    }\n\n    if (typeof regexp === 'string') {\n      ast = parser.parse(regexp);\n    }\n\n    var result = new transform.TransformResult(ast);\n    var prevResultString = void 0;\n\n    do {\n      // Get a copy of the current state here so\n      // we can compare it with the state at the\n      // end of the loop.\n      prevResultString = result.toString();\n      ast = clone(result.getAST());\n\n      transformToApply.forEach(function (transformName) {\n        if (!optimizationTransforms.has(transformName)) {\n          throw new Error('Unknown optimization-transform: ' + transformName + '. ' + 'Available transforms are: ' + Array.from(optimizationTransforms.keys()).join(', '));\n        }\n\n        var transformer = optimizationTransforms.get(transformName);\n\n        // Don't override result just yet since we\n        // might want to rollback the transform\n        var newResult = transform.transform(ast, transformer);\n\n        if (newResult.toString() !== result.toString()) {\n          if (newResult.toString().length <= result.toString().length) {\n            result = newResult;\n          } else {\n            // Result has changed but is not shorter:\n            // restore ast to its previous state.\n\n            ast = clone(result.getAST());\n          }\n        }\n      });\n\n      // Keep running the optimizer until it stops\n      // making any change to the regexp.\n    } while (result.toString() !== prevResultString);\n\n    return result;\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar UPPER_A_CP = 'A'.codePointAt(0);\nvar UPPER_Z_CP = 'Z'.codePointAt(0);\n/**\n * Transforms case-insensitive regexp to lowercase\n *\n * /AaBbÏ/i -> /aabbï/i\n */\nmodule.exports = {\n  _AZClassRanges: null,\n  _hasUFlag: false,\n  init: function init(ast) {\n    this._AZClassRanges = new Set();\n    this._hasUFlag = ast.flags.includes('u');\n  },\n  shouldRun: function shouldRun(ast) {\n    return ast.flags.includes('i');\n  },\n  Char: function Char(path) {\n    var node = path.node,\n        parent = path.parent;\n\n    if (isNaN(node.codePoint)) {\n      return;\n    }\n\n    // Engine support for case-insensitive matching without the u flag\n    // for characters above \\u1000 does not seem reliable.\n    if (!this._hasUFlag && node.codePoint >= 0x1000) {\n      return;\n    }\n\n    if (parent.type === 'ClassRange') {\n      // The only class ranges we handle must be inside A-Z.\n      // After the `from` char is processed, the isAZClassRange test\n      // will be false, so we use a Set to keep track of parents and\n      // process the `to` char.\n      if (!this._AZClassRanges.has(parent) && !isAZClassRange(parent)) {\n        return;\n      }\n      this._AZClassRanges.add(parent);\n    }\n\n    var lower = node.symbol.toLowerCase();\n    if (lower !== node.symbol) {\n      node.value = displaySymbolAsValue(lower, node);\n      node.symbol = lower;\n      node.codePoint = lower.codePointAt(0);\n    }\n  }\n};\n\nfunction isAZClassRange(classRange) {\n  var from = classRange.from,\n      to = classRange.to;\n  // A-Z\n\n  return from.codePoint >= UPPER_A_CP && from.codePoint <= UPPER_Z_CP && to.codePoint >= UPPER_A_CP && to.codePoint <= UPPER_Z_CP;\n}\n\nfunction displaySymbolAsValue(symbol, node) {\n  var codePoint = symbol.codePointAt(0);\n  if (node.kind === 'decimal') {\n    return '\\\\' + codePoint;\n  }\n  if (node.kind === 'oct') {\n    return '\\\\0' + codePoint.toString(8);\n  }\n  if (node.kind === 'hex') {\n    return '\\\\x' + codePoint.toString(16);\n  }\n  if (node.kind === 'unicode') {\n    if (node.isSurrogatePair) {\n      var _getSurrogatePairFrom = getSurrogatePairFromCodePoint(codePoint),\n          lead = _getSurrogatePairFrom.lead,\n          trail = _getSurrogatePairFrom.trail;\n\n      return '\\\\u' + '0'.repeat(4 - lead.length) + lead + '\\\\u' + '0'.repeat(4 - trail.length) + trail;\n    } else if (node.value.includes('{')) {\n      return '\\\\u{' + codePoint.toString(16) + '}';\n    } else {\n      var code = codePoint.toString(16);\n      return '\\\\u' + '0'.repeat(4 - code.length) + code;\n    }\n  }\n  // simple\n  return symbol;\n}\n\n/**\n * Converts a code point to a surrogate pair.\n * Conversion algorithm is taken from The Unicode Standard 3.0 Section 3.7\n * (https://www.unicode.org/versions/Unicode3.0.0/ch03.pdf)\n * @param {number} codePoint - Between 0x10000 and 0x10ffff\n * @returns {{lead: string, trail: string}}\n */\nfunction getSurrogatePairFromCodePoint(codePoint) {\n  var lead = Math.floor((codePoint - 0x10000) / 0x400) + 0xd800;\n  var trail = (codePoint - 0x10000) % 0x400 + 0xdc00;\n  return {\n    lead: lead.toString(16),\n    trail: trail.toString(16)\n  };\n}","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to merge class ranges.\n *\n * [a-ec] -> [a-e]\n * [a-ec-e] -> [a-e]\n * [\\w\\da-f] -> [\\w]\n * [abcdef] -> [a-f]\n */\n\nmodule.exports = {\n  _hasIUFlags: false,\n  init: function init(ast) {\n    this._hasIUFlags = ast.flags.includes('i') && ast.flags.includes('u');\n  },\n  CharacterClass: function CharacterClass(path) {\n    var node = path.node;\n\n    var expressions = node.expressions;\n\n    var metas = [];\n    // Extract metas\n    expressions.forEach(function (expression) {\n      if (isMeta(expression)) {\n        metas.push(expression.value);\n      }\n    });\n\n    expressions.sort(sortCharClass);\n\n    for (var i = 0; i < expressions.length; i++) {\n      var expression = expressions[i];\n      if (fitsInMetas(expression, metas, this._hasIUFlags) || combinesWithPrecedingClassRange(expression, expressions[i - 1]) || combinesWithFollowingClassRange(expression, expressions[i + 1])) {\n        expressions.splice(i, 1);\n        i--;\n      } else {\n        var nbMergedChars = charCombinesWithPrecedingChars(expression, i, expressions);\n        expressions.splice(i - nbMergedChars + 1, nbMergedChars);\n        i -= nbMergedChars;\n      }\n    }\n  }\n};\n\n/**\n * Sorts expressions in char class in the following order:\n * - meta chars, ordered alphabetically by value\n * - chars (except `control` kind) and class ranges, ordered alphabetically (`from` char is used for class ranges)\n * - if ambiguous, class range comes before char\n * - if ambiguous between two class ranges, orders alphabetically by `to` char\n * - control chars, ordered alphabetically by value\n * @param {Object} a - Left Char or ClassRange node\n * @param {Object} b - Right Char or ClassRange node\n * @returns {number}\n */\nfunction sortCharClass(a, b) {\n  var aValue = getSortValue(a);\n  var bValue = getSortValue(b);\n\n  if (aValue === bValue) {\n    // We want ClassRange before Char\n    // [bb-d] -> [b-db]\n    if (a.type === 'ClassRange' && b.type !== 'ClassRange') {\n      return -1;\n    }\n    if (b.type === 'ClassRange' && a.type !== 'ClassRange') {\n      return 1;\n    }\n    if (a.type === 'ClassRange' && b.type === 'ClassRange') {\n      return getSortValue(a.to) - getSortValue(b.to);\n    }\n    if (isMeta(a) && isMeta(b) || isControl(a) && isControl(b)) {\n      return a.value < b.value ? -1 : 1;\n    }\n  }\n  return aValue - bValue;\n}\n\n/**\n * @param {Object} expression - Char or ClassRange node\n * @returns {number}\n */\nfunction getSortValue(expression) {\n  if (expression.type === 'Char') {\n    if (expression.value === '-') {\n      return Infinity;\n    }\n    if (expression.kind === 'control') {\n      return Infinity;\n    }\n    if (expression.kind === 'meta' && isNaN(expression.codePoint)) {\n      return -1;\n    }\n    return expression.codePoint;\n  }\n  // ClassRange\n  return expression.from.codePoint;\n}\n\n/**\n * Checks if a node is a meta char from the set \\d\\w\\s\\D\\W\\S\n * @param {Object} expression - Char or ClassRange node\n * @param {?string} value\n * @returns {boolean}\n */\nfunction isMeta(expression) {\n  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  return expression.type === 'Char' && expression.kind === 'meta' && (value ? expression.value === value : /^\\\\[dws]$/i.test(expression.value));\n}\n\n/**\n * @param {Object} expression - Char or ClassRange node\n * @returns {boolean}\n */\nfunction isControl(expression) {\n  return expression.type === 'Char' && expression.kind === 'control';\n}\n\n/**\n * @param {Object} expression - Char or ClassRange node\n * @param {string[]} metas - Array of meta chars, e.g. [\"\\\\w\", \"\\\\s\"]\n * @param {boolean} hasIUFlags\n * @returns {boolean}\n */\nfunction fitsInMetas(expression, metas, hasIUFlags) {\n  for (var i = 0; i < metas.length; i++) {\n    if (fitsInMeta(expression, metas[i], hasIUFlags)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * @param {Object} expression - Char or ClassRange node\n * @param {string} meta - e.g. \"\\\\w\"\n * @param {boolean} hasIUFlags\n * @returns {boolean}\n */\nfunction fitsInMeta(expression, meta, hasIUFlags) {\n  if (expression.type === 'ClassRange') {\n    return fitsInMeta(expression.from, meta, hasIUFlags) && fitsInMeta(expression.to, meta, hasIUFlags);\n  }\n\n  // Special cases:\n  // \\S contains \\w and \\d\n  if (meta === '\\\\S' && (isMeta(expression, '\\\\w') || isMeta(expression, '\\\\d'))) {\n    return true;\n  }\n  // \\D contains \\W and \\s\n  if (meta === '\\\\D' && (isMeta(expression, '\\\\W') || isMeta(expression, '\\\\s'))) {\n    return true;\n  }\n  // \\w contains \\d\n  if (meta === '\\\\w' && isMeta(expression, '\\\\d')) {\n    return true;\n  }\n  // \\W contains \\s\n  if (meta === '\\\\W' && isMeta(expression, '\\\\s')) {\n    return true;\n  }\n\n  if (expression.type !== 'Char' || isNaN(expression.codePoint)) {\n    return false;\n  }\n\n  if (meta === '\\\\s') {\n    return fitsInMetaS(expression);\n  }\n  if (meta === '\\\\S') {\n    return !fitsInMetaS(expression);\n  }\n  if (meta === '\\\\d') {\n    return fitsInMetaD(expression);\n  }\n  if (meta === '\\\\D') {\n    return !fitsInMetaD(expression);\n  }\n  if (meta === '\\\\w') {\n    return fitsInMetaW(expression, hasIUFlags);\n  }\n  if (meta === '\\\\W') {\n    return !fitsInMetaW(expression, hasIUFlags);\n  }\n  return false;\n}\n\n/**\n * @param {Object} expression - Char node with codePoint\n * @returns {boolean}\n */\nfunction fitsInMetaS(expression) {\n  return expression.codePoint === 0x0009 || // \\t\n  expression.codePoint === 0x000a || // \\n\n  expression.codePoint === 0x000b || // \\v\n  expression.codePoint === 0x000c || // \\f\n  expression.codePoint === 0x000d || // \\r\n  expression.codePoint === 0x0020 || // space\n  expression.codePoint === 0x00a0 || // nbsp\n  expression.codePoint === 0x1680 || // part of Zs\n  expression.codePoint >= 0x2000 && expression.codePoint <= 0x200a || // part of Zs\n  expression.codePoint === 0x2028 || // line separator\n  expression.codePoint === 0x2029 || // paragraph separator\n  expression.codePoint === 0x202f || // part of Zs\n  expression.codePoint === 0x205f || // part of Zs\n  expression.codePoint === 0x3000 || // part of Zs\n  expression.codePoint === 0xfeff; // zwnbsp\n}\n\n/**\n * @param {Object} expression - Char node with codePoint\n * @returns {boolean}\n */\nfunction fitsInMetaD(expression) {\n  return expression.codePoint >= 0x30 && expression.codePoint <= 0x39; // 0-9\n}\n\n/**\n * @param {Object} expression - Char node with codePoint\n * @param {boolean} hasIUFlags\n * @returns {boolean}\n */\nfunction fitsInMetaW(expression, hasIUFlags) {\n  return fitsInMetaD(expression) || expression.codePoint >= 0x41 && expression.codePoint <= 0x5a || // A-Z\n  expression.codePoint >= 0x61 && expression.codePoint <= 0x7a || // a-z\n  expression.value === '_' || hasIUFlags && (expression.codePoint === 0x017f || expression.codePoint === 0x212a);\n}\n\n/**\n * @param {Object} expression - Char or ClassRange node\n * @param {Object} classRange - Char or ClassRange node\n * @returns {boolean}\n */\nfunction combinesWithPrecedingClassRange(expression, classRange) {\n  if (classRange && classRange.type === 'ClassRange') {\n    if (fitsInClassRange(expression, classRange)) {\n      // [a-gc] -> [a-g]\n      // [a-gc-e] -> [a-g]\n      return true;\n    } else if (\n    // We only want \\w chars or char codes to keep readability\n    isMetaWCharOrCode(expression) && classRange.to.codePoint === expression.codePoint - 1) {\n      // [a-de] -> [a-e]\n      classRange.to = expression;\n      return true;\n    } else if (expression.type === 'ClassRange' && expression.from.codePoint <= classRange.to.codePoint + 1 && expression.to.codePoint >= classRange.from.codePoint - 1) {\n      // [a-db-f] -> [a-f]\n      // [b-fa-d] -> [a-f]\n      // [a-cd-f] -> [a-f]\n      if (expression.from.codePoint < classRange.from.codePoint) {\n        classRange.from = expression.from;\n      }\n      if (expression.to.codePoint > classRange.to.codePoint) {\n        classRange.to = expression.to;\n      }\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * @param {Object} expression - Char or ClassRange node\n * @param {Object} classRange - Char or ClassRange node\n * @returns {boolean}\n */\nfunction combinesWithFollowingClassRange(expression, classRange) {\n  if (classRange && classRange.type === 'ClassRange') {\n    // Considering the elements were ordered alphabetically,\n    // there is only one case to handle\n    // [ab-e] -> [a-e]\n    if (\n    // We only want \\w chars or char codes to keep readability\n    isMetaWCharOrCode(expression) && classRange.from.codePoint === expression.codePoint + 1) {\n      classRange.from = expression;\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * @param {Object} expression - Char or ClassRange node\n * @param {Object} classRange - ClassRange node\n * @returns {boolean}\n */\nfunction fitsInClassRange(expression, classRange) {\n  if (expression.type === 'Char' && isNaN(expression.codePoint)) {\n    return false;\n  }\n  if (expression.type === 'ClassRange') {\n    return fitsInClassRange(expression.from, classRange) && fitsInClassRange(expression.to, classRange);\n  }\n  return expression.codePoint >= classRange.from.codePoint && expression.codePoint <= classRange.to.codePoint;\n}\n\n/**\n * @param {Object} expression - Char or ClassRange node\n * @param {Number} index\n * @param {Object[]} expressions - expressions in CharClass\n * @returns {number} - Number of characters combined with expression\n */\nfunction charCombinesWithPrecedingChars(expression, index, expressions) {\n  // We only want \\w chars or char codes to keep readability\n  if (!isMetaWCharOrCode(expression)) {\n    return 0;\n  }\n  var nbMergedChars = 0;\n  while (index > 0) {\n    var currentExpression = expressions[index];\n    var precedingExpresion = expressions[index - 1];\n    if (isMetaWCharOrCode(precedingExpresion) && precedingExpresion.codePoint === currentExpression.codePoint - 1) {\n      nbMergedChars++;\n      index--;\n    } else {\n      break;\n    }\n  }\n\n  if (nbMergedChars > 1) {\n    expressions[index] = {\n      type: 'ClassRange',\n      from: expressions[index],\n      to: expression\n    };\n    return nbMergedChars;\n  }\n  return 0;\n}\n\nfunction isMetaWCharOrCode(expression) {\n  return expression && expression.type === 'Char' && !isNaN(expression.codePoint) && (fitsInMetaW(expression, false) || expression.kind === 'unicode' || expression.kind === 'hex' || expression.kind === 'oct' || expression.kind === 'decimal');\n}","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to simplify character classes\n * spanning only one or two chars.\n *\n * [a-a] -> [a]\n * [a-b] -> [ab]\n */\n\nmodule.exports = {\n  ClassRange: function ClassRange(path) {\n    var node = path.node;\n\n\n    if (node.from.codePoint === node.to.codePoint) {\n\n      path.replace(node.from);\n    } else if (node.from.codePoint === node.to.codePoint - 1) {\n\n      path.getParent().insertChildAt(node.to, path.index + 1);\n      path.replace(node.from);\n    }\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to remove duplicates from character classes.\n */\n\nmodule.exports = {\n  CharacterClass: function CharacterClass(path) {\n    var node = path.node;\n\n    var sources = {};\n\n    for (var i = 0; i < node.expressions.length; i++) {\n      var childPath = path.getChild(i);\n      var source = childPath.jsonEncode();\n\n      if (sources.hasOwnProperty(source)) {\n        childPath.remove();\n\n        // Since we remove the current node.\n        // TODO: make it simpler for users with a method.\n        i--;\n      }\n\n      sources[source] = true;\n    }\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to replace standard character classes with\n * their meta symbols equivalents.\n */\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nmodule.exports = {\n  _hasIFlag: false,\n  _hasUFlag: false,\n  init: function init(ast) {\n    this._hasIFlag = ast.flags.includes('i');\n    this._hasUFlag = ast.flags.includes('u');\n  },\n  CharacterClass: function CharacterClass(path) {\n    // [0-9] -> \\d\n    rewriteNumberRanges(path);\n\n    // [a-zA-Z_0-9] -> \\w\n    rewriteWordRanges(path, this._hasIFlag, this._hasUFlag);\n\n    // [ \\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff] -> \\s\n    rewriteWhitespaceRanges(path);\n  }\n};\n\n/**\n * Rewrites number ranges: [0-9] -> \\d\n */\nfunction rewriteNumberRanges(path) {\n  var node = path.node;\n\n\n  node.expressions.forEach(function (expression, i) {\n    if (isFullNumberRange(expression)) {\n      path.getChild(i).replace({\n        type: 'Char',\n        value: '\\\\d',\n        kind: 'meta'\n      });\n    }\n  });\n}\n\n/**\n * Rewrites word ranges: [a-zA-Z_0-9] -> \\w\n * Thus, the ranges may go in any order, and other symbols/ranges\n * are kept untouched, e.g. [a-z_\\dA-Z$] -> [\\w$]\n */\nfunction rewriteWordRanges(path, hasIFlag, hasUFlag) {\n  var node = path.node;\n\n\n  var numberPath = null;\n  var lowerCasePath = null;\n  var upperCasePath = null;\n  var underscorePath = null;\n  var u017fPath = null;\n  var u212aPath = null;\n\n  node.expressions.forEach(function (expression, i) {\n    // \\d\n    if (isMetaChar(expression, '\\\\d')) {\n      numberPath = path.getChild(i);\n    }\n\n    // a-z\n    else if (isLowerCaseRange(expression)) {\n        lowerCasePath = path.getChild(i);\n      }\n\n      // A-Z\n      else if (isUpperCaseRange(expression)) {\n          upperCasePath = path.getChild(i);\n        }\n\n        // _\n        else if (isUnderscore(expression)) {\n            underscorePath = path.getChild(i);\n          } else if (hasIFlag && hasUFlag && isCodePoint(expression, 0x017f)) {\n            u017fPath = path.getChild(i);\n          } else if (hasIFlag && hasUFlag && isCodePoint(expression, 0x212a)) {\n            u212aPath = path.getChild(i);\n          }\n  });\n\n  // If we found the whole pattern, replace it.\n  if (numberPath && (lowerCasePath && upperCasePath || hasIFlag && (lowerCasePath || upperCasePath)) && underscorePath && (!hasUFlag || !hasIFlag || u017fPath && u212aPath)) {\n    // Put \\w in place of \\d.\n    numberPath.replace({\n      type: 'Char',\n      value: '\\\\w',\n      kind: 'meta'\n    });\n\n    // Other paths are removed.\n    if (lowerCasePath) {\n      lowerCasePath.remove();\n    }\n    if (upperCasePath) {\n      upperCasePath.remove();\n    }\n    underscorePath.remove();\n    if (u017fPath) {\n      u017fPath.remove();\n    }\n    if (u212aPath) {\n      u212aPath.remove();\n    }\n  }\n}\n\n/**\n * Rewrites whitespace ranges: [ \\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff] -> \\s.\n */\nvar whitespaceRangeTests = [function (node) {\n  return isChar(node, ' ');\n}].concat(_toConsumableArray(['\\\\f', '\\\\n', '\\\\r', '\\\\t', '\\\\v'].map(function (char) {\n  return function (node) {\n    return isMetaChar(node, char);\n  };\n})), _toConsumableArray([0x00a0, 0x1680, 0x2028, 0x2029, 0x202f, 0x205f, 0x3000, 0xfeff].map(function (codePoint) {\n  return function (node) {\n    return isCodePoint(node, codePoint);\n  };\n})), [function (node) {\n  return node.type === 'ClassRange' && isCodePoint(node.from, 0x2000) && isCodePoint(node.to, 0x200a);\n}]);\n\nfunction rewriteWhitespaceRanges(path) {\n  var node = path.node;\n\n\n  if (node.expressions.length < whitespaceRangeTests.length || !whitespaceRangeTests.every(function (test) {\n    return node.expressions.some(function (expression) {\n      return test(expression);\n    });\n  })) {\n    return;\n  }\n\n  // If we found the whole pattern, replace it.\n\n  // Put \\s in place of \\n.\n  var nNode = node.expressions.find(function (expression) {\n    return isMetaChar(expression, '\\\\n');\n  });\n  nNode.value = '\\\\s';\n  nNode.symbol = undefined;\n  nNode.codePoint = NaN;\n\n  // Other paths are removed.\n  node.expressions.map(function (expression, i) {\n    return whitespaceRangeTests.some(function (test) {\n      return test(expression);\n    }) ? path.getChild(i) : undefined;\n  }).filter(Boolean).forEach(function (path) {\n    return path.remove();\n  });\n}\n\nfunction isFullNumberRange(node) {\n  return node.type === 'ClassRange' && node.from.value === '0' && node.to.value === '9';\n}\n\nfunction isChar(node, value) {\n  var kind = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'simple';\n\n  return node.type === 'Char' && node.value === value && node.kind === kind;\n}\n\nfunction isMetaChar(node, value) {\n  return isChar(node, value, 'meta');\n}\n\nfunction isLowerCaseRange(node) {\n  return node.type === 'ClassRange' && node.from.value === 'a' && node.to.value === 'z';\n}\n\nfunction isUpperCaseRange(node) {\n  return node.type === 'ClassRange' && node.from.value === 'A' && node.to.value === 'Z';\n}\n\nfunction isUnderscore(node) {\n  return node.type === 'Char' && node.value === '_' && node.kind === 'simple';\n}\n\nfunction isCodePoint(node, codePoint) {\n  return node.type === 'Char' && node.kind === 'unicode' && node.codePoint === codePoint;\n}","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to replace single char character classes with\n * just that character.\n *\n * [\\d] -> \\d, [^\\w] -> \\W\n */\n\nmodule.exports = {\n  CharacterClass: function CharacterClass(path) {\n    var node = path.node;\n\n\n    if (node.expressions.length !== 1 || !hasAppropriateSiblings(path) || !isAppropriateChar(node.expressions[0])) {\n      return;\n    }\n\n    var _node$expressions$ = node.expressions[0],\n        value = _node$expressions$.value,\n        kind = _node$expressions$.kind,\n        escaped = _node$expressions$.escaped;\n\n\n    if (node.negative) {\n      // For negative can extract only meta chars like [^\\w] -> \\W\n      // cannot do for [^a] -> a (wrong).\n      if (!isMeta(value)) {\n        return;\n      }\n\n      value = getInverseMeta(value);\n    }\n\n    path.replace({\n      type: 'Char',\n      value: value,\n      kind: kind,\n      escaped: escaped || shouldEscape(value)\n    });\n  }\n};\n\nfunction isAppropriateChar(node) {\n  return node.type === 'Char' &&\n  // We don't extract [\\b] (backspace) since \\b has different\n  // semantics (word boundary).\n  node.value !== '\\\\b';\n}\n\nfunction isMeta(value) {\n  return (/^\\\\[dwsDWS]$/.test(value)\n  );\n}\n\nfunction getInverseMeta(value) {\n  return (/[dws]/.test(value) ? value.toUpperCase() : value.toLowerCase()\n  );\n}\n\nfunction hasAppropriateSiblings(path) {\n  var parent = path.parent,\n      index = path.index;\n\n\n  if (parent.type !== 'Alternative') {\n    return true;\n  }\n\n  var previousNode = parent.expressions[index - 1];\n  if (previousNode == null) {\n    return true;\n  }\n\n  // Don't optimized \\1[0] to \\10\n  if (previousNode.type === 'Backreference' && previousNode.kind === 'number') {\n    return false;\n  }\n\n  // Don't optimized \\2[0] to \\20\n  if (previousNode.type === 'Char' && previousNode.kind === 'decimal') {\n    return false;\n  }\n\n  return true;\n}\n\n// Note: \\{ and \\} are always preserved to avoid `a[{]2[}]` turning\n// into `a{2}`.\nfunction shouldEscape(value) {\n  return (/[*[()+?$./{}|]/.test(value)\n  );\n}","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar UPPER_A_CP = 'A'.codePointAt(0);\nvar UPPER_Z_CP = 'Z'.codePointAt(0);\nvar LOWER_A_CP = 'a'.codePointAt(0);\nvar LOWER_Z_CP = 'z'.codePointAt(0);\nvar DIGIT_0_CP = '0'.codePointAt(0);\nvar DIGIT_9_CP = '9'.codePointAt(0);\n\n/**\n * A regexp-tree plugin to transform coded chars into simple chars.\n *\n * \\u0061 -> a\n */\nmodule.exports = {\n  Char: function Char(path) {\n    var node = path.node,\n        parent = path.parent;\n\n    if (isNaN(node.codePoint) || node.kind === 'simple') {\n      return;\n    }\n\n    if (parent.type === 'ClassRange') {\n      if (!isSimpleRange(parent)) {\n        return;\n      }\n    }\n\n    if (!isPrintableASCIIChar(node.codePoint)) {\n      return;\n    }\n\n    var symbol = String.fromCodePoint(node.codePoint);\n    var newChar = {\n      type: 'Char',\n      kind: 'simple',\n      value: symbol,\n      symbol: symbol,\n      codePoint: node.codePoint\n    };\n    if (needsEscape(symbol, parent.type)) {\n      newChar.escaped = true;\n    }\n    path.replace(newChar);\n  }\n};\n\n/**\n * Checks if a range is included either in 0-9, a-z or A-Z\n * @param classRange\n * @returns {boolean}\n */\nfunction isSimpleRange(classRange) {\n  var from = classRange.from,\n      to = classRange.to;\n\n  return from.codePoint >= DIGIT_0_CP && from.codePoint <= DIGIT_9_CP && to.codePoint >= DIGIT_0_CP && to.codePoint <= DIGIT_9_CP || from.codePoint >= UPPER_A_CP && from.codePoint <= UPPER_Z_CP && to.codePoint >= UPPER_A_CP && to.codePoint <= UPPER_Z_CP || from.codePoint >= LOWER_A_CP && from.codePoint <= LOWER_Z_CP && to.codePoint >= LOWER_A_CP && to.codePoint <= LOWER_Z_CP;\n}\n\n/**\n * Checks if a code point in the range of printable ASCII chars\n * (DEL char excluded)\n * @param codePoint\n * @returns {boolean}\n */\nfunction isPrintableASCIIChar(codePoint) {\n  return codePoint >= 0x20 && codePoint <= 0x7e;\n}\n\nfunction needsEscape(symbol, parentType) {\n  if (parentType === 'ClassRange' || parentType === 'CharacterClass') {\n    return (/[\\]\\\\^-]/.test(symbol)\n    );\n  }\n\n  return (/[*[()+?^$./\\\\|{}]/.test(symbol)\n  );\n}","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to remove unnecessary escape.\n *\n * \\e -> e\n *\n * [\\(] -> [(]\n */\n\nmodule.exports = {\n  _hasXFlag: false,\n  init: function init(ast) {\n    this._hasXFlag = ast.flags.includes('x');\n  },\n  Char: function Char(path) {\n    var node = path.node;\n\n\n    if (!node.escaped) {\n      return;\n    }\n\n    if (shouldUnescape(path, this._hasXFlag)) {\n      delete node.escaped;\n    }\n  }\n};\n\nfunction shouldUnescape(path, hasXFlag) {\n  var value = path.node.value,\n      index = path.index,\n      parent = path.parent;\n\n  // In char class (, etc are allowed.\n\n  if (parent.type !== 'CharacterClass' && parent.type !== 'ClassRange') {\n    return !preservesEscape(value, index, parent, hasXFlag);\n  }\n\n  return !preservesInCharClass(value, index, parent);\n}\n\n/**\n * \\], \\\\, \\^, \\-\n */\nfunction preservesInCharClass(value, index, parent) {\n  if (value === '^') {\n    // Avoid [\\^a] turning into [^a]\n    return index === 0 && !parent.negative;\n  }\n  if (value === '-') {\n    // Avoid [a\\-z] turning into [a-z]\n    return true;\n  }\n  return (/[\\]\\\\]/.test(value)\n  );\n}\n\nfunction preservesEscape(value, index, parent, hasXFlag) {\n  if (value === '{') {\n    return preservesOpeningCurlyBraceEscape(index, parent);\n  }\n\n  if (value === '}') {\n    return preservesClosingCurlyBraceEscape(index, parent);\n  }\n\n  if (hasXFlag && /[ #]/.test(value)) {\n    return true;\n  }\n\n  return (/[*[()+?^$./\\\\|]/.test(value)\n  );\n}\n\nfunction consumeNumbers(startIndex, parent, rtl) {\n  var i = startIndex;\n  var siblingNode = (rtl ? i >= 0 : i < parent.expressions.length) && parent.expressions[i];\n\n  while (siblingNode && siblingNode.type === 'Char' && siblingNode.kind === 'simple' && !siblingNode.escaped && /\\d/.test(siblingNode.value)) {\n    rtl ? i-- : i++;\n    siblingNode = (rtl ? i >= 0 : i < parent.expressions.length) && parent.expressions[i];\n  }\n\n  return Math.abs(startIndex - i);\n}\n\nfunction isSimpleChar(node, value) {\n  return node && node.type === 'Char' && node.kind === 'simple' && !node.escaped && node.value === value;\n}\n\nfunction preservesOpeningCurlyBraceEscape(index, parent) {\n  // (?:\\{) -> (?:{)\n  if (index == null) {\n    return false;\n  }\n\n  var nbFollowingNumbers = consumeNumbers(index + 1, parent);\n  var i = index + nbFollowingNumbers + 1;\n  var nextSiblingNode = i < parent.expressions.length && parent.expressions[i];\n\n  if (nbFollowingNumbers) {\n    // Avoid \\{3} turning into {3}\n    if (isSimpleChar(nextSiblingNode, '}')) {\n      return true;\n    }\n\n    if (isSimpleChar(nextSiblingNode, ',')) {\n      nbFollowingNumbers = consumeNumbers(i + 1, parent);\n      i = i + nbFollowingNumbers + 1;\n      nextSiblingNode = i < parent.expressions.length && parent.expressions[i];\n\n      // Avoid \\{3,} turning into {3,}\n      return isSimpleChar(nextSiblingNode, '}');\n    }\n  }\n  return false;\n}\n\nfunction preservesClosingCurlyBraceEscape(index, parent) {\n  // (?:\\{) -> (?:{)\n  if (index == null) {\n    return false;\n  }\n\n  var nbPrecedingNumbers = consumeNumbers(index - 1, parent, true);\n  var i = index - nbPrecedingNumbers - 1;\n  var previousSiblingNode = i >= 0 && parent.expressions[i];\n\n  // Avoid {3\\} turning into {3}\n  if (nbPrecedingNumbers && isSimpleChar(previousSiblingNode, '{')) {\n    return true;\n  }\n\n  if (isSimpleChar(previousSiblingNode, ',')) {\n    nbPrecedingNumbers = consumeNumbers(i - 1, parent, true);\n    i = i - nbPrecedingNumbers - 1;\n    previousSiblingNode = i < parent.expressions.length && parent.expressions[i];\n\n    // Avoid {3,\\} turning into {3,}\n    return nbPrecedingNumbers && isSimpleChar(previousSiblingNode, '{');\n  }\n  return false;\n}","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to transform surrogate pairs into single unicode code point\n *\n * \\ud83d\\ude80 -> \\u{1f680}\n */\n\nmodule.exports = {\n  shouldRun: function shouldRun(ast) {\n    return ast.flags.includes('u');\n  },\n  Char: function Char(path) {\n    var node = path.node;\n\n    if (node.kind !== 'unicode' || !node.isSurrogatePair || isNaN(node.codePoint)) {\n      return;\n    }\n    node.value = '\\\\u{' + node.codePoint.toString(16) + '}';\n    delete node.isSurrogatePair;\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar NodePath = require('../../traverse/node-path');\n\nvar _require = require('../../transform/utils'),\n    increaseQuantifierByOne = _require.increaseQuantifierByOne;\n\n/**\n * A regexp-tree plugin to combine repeating patterns.\n *\n * /^abcabcabc/ -> /^abc{3}/\n * /^(?:abc){2}abc/ -> /^(?:abc){3}/\n * /^abc(?:abc){2}/ -> /^(?:abc){3}/\n */\n\nmodule.exports = {\n  Alternative: function Alternative(path) {\n    var node = path.node;\n\n    // We can skip the first child\n\n    var index = 1;\n    while (index < node.expressions.length) {\n      var child = path.getChild(index);\n      index = Math.max(1, combineRepeatingPatternLeft(path, child, index));\n\n      if (index >= node.expressions.length) {\n        break;\n      }\n\n      child = path.getChild(index);\n      index = Math.max(1, combineWithPreviousRepetition(path, child, index));\n\n      if (index >= node.expressions.length) {\n        break;\n      }\n\n      child = path.getChild(index);\n      index = Math.max(1, combineRepetitionWithPrevious(path, child, index));\n\n      index++;\n    }\n  }\n};\n\n// abcabc -> (?:abc){2}\nfunction combineRepeatingPatternLeft(alternative, child, index) {\n  var node = alternative.node;\n\n\n  var nbPossibleLengths = Math.ceil(index / 2);\n  var i = 0;\n\n  while (i < nbPossibleLengths) {\n    var startIndex = index - 2 * i - 1;\n    var right = void 0,\n        left = void 0;\n\n    if (i === 0) {\n      right = child;\n      left = alternative.getChild(startIndex);\n    } else {\n      right = NodePath.getForNode({\n        type: 'Alternative',\n        expressions: [].concat(_toConsumableArray(node.expressions.slice(index - i, index)), [child.node])\n      });\n\n      left = NodePath.getForNode({\n        type: 'Alternative',\n        expressions: [].concat(_toConsumableArray(node.expressions.slice(startIndex, index - i)))\n      });\n    }\n\n    if (right.hasEqualSource(left)) {\n      for (var j = 0; j < 2 * i + 1; j++) {\n        alternative.getChild(startIndex).remove();\n      }\n\n      child.replace({\n        type: 'Repetition',\n        expression: i === 0 && right.node.type !== 'Repetition' ? right.node : {\n          type: 'Group',\n          capturing: false,\n          expression: right.node\n        },\n        quantifier: {\n          type: 'Quantifier',\n          kind: 'Range',\n          from: 2,\n          to: 2,\n          greedy: true\n        }\n      });\n      return startIndex;\n    }\n\n    i++;\n  }\n\n  return index;\n}\n\n// (?:abc){2}abc -> (?:abc){3}\nfunction combineWithPreviousRepetition(alternative, child, index) {\n  var node = alternative.node;\n\n\n  var i = 0;\n  while (i < index) {\n    var previousChild = alternative.getChild(i);\n\n    if (previousChild.node.type === 'Repetition' && previousChild.node.quantifier.greedy) {\n      var left = previousChild.getChild();\n      var right = void 0;\n\n      if (left.node.type === 'Group' && !left.node.capturing) {\n        left = left.getChild();\n      }\n\n      if (i + 1 === index) {\n        right = child;\n        if (right.node.type === 'Group' && !right.node.capturing) {\n          right = right.getChild();\n        }\n      } else {\n        right = NodePath.getForNode({\n          type: 'Alternative',\n          expressions: [].concat(_toConsumableArray(node.expressions.slice(i + 1, index + 1)))\n        });\n      }\n\n      if (left.hasEqualSource(right)) {\n        for (var j = i; j < index; j++) {\n          alternative.getChild(i + 1).remove();\n        }\n\n        increaseQuantifierByOne(previousChild.node.quantifier);\n\n        return i;\n      }\n    }\n\n    i++;\n  }\n  return index;\n}\n\n// abc(?:abc){2} -> (?:abc){3}\nfunction combineRepetitionWithPrevious(alternative, child, index) {\n  var node = alternative.node;\n\n\n  if (child.node.type === 'Repetition' && child.node.quantifier.greedy) {\n    var right = child.getChild();\n    var left = void 0;\n\n    if (right.node.type === 'Group' && !right.node.capturing) {\n      right = right.getChild();\n    }\n\n    var rightLength = void 0;\n    if (right.node.type === 'Alternative') {\n      rightLength = right.node.expressions.length;\n      left = NodePath.getForNode({\n        type: 'Alternative',\n        expressions: [].concat(_toConsumableArray(node.expressions.slice(index - rightLength, index)))\n      });\n    } else {\n      rightLength = 1;\n      left = alternative.getChild(index - 1);\n      if (left.node.type === 'Group' && !left.node.capturing) {\n        left = left.getChild();\n      }\n    }\n\n    if (left.hasEqualSource(right)) {\n      for (var j = index - rightLength; j < index; j++) {\n        alternative.getChild(index - rightLength).remove();\n      }\n\n      increaseQuantifierByOne(child.node.quantifier);\n\n      return index - rightLength;\n    }\n  }\n  return index;\n}","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar NodePath = require('../../traverse/node-path');\n\nvar _require = require('../../transform/utils'),\n    disjunctionToList = _require.disjunctionToList,\n    listToDisjunction = _require.listToDisjunction;\n\n/**\n * Removes duplicates from a disjunction sequence:\n *\n * /(ab|bc|ab)+(xy|xy)+/ -> /(ab|bc)+(xy)+/\n */\n\n\nmodule.exports = {\n  Disjunction: function Disjunction(path) {\n    var node = path.node;\n\n    // Make unique nodes.\n\n    var uniqueNodesMap = {};\n\n    var parts = disjunctionToList(node).filter(function (part) {\n      var encoded = part ? NodePath.getForNode(part).jsonEncode() : 'null';\n\n      // Already recorded this part, filter out.\n      if (uniqueNodesMap.hasOwnProperty(encoded)) {\n        return false;\n      }\n\n      uniqueNodesMap[encoded] = part;\n      return true;\n    });\n\n    // Replace with the optimized disjunction.\n    path.replace(listToDisjunction(parts));\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to replace single char group disjunction to char group\n *\n * a|b|c -> [abc]\n * [12]|3|4 -> [1234]\n * (a|b|c) -> ([abc])\n * (?:a|b|c) -> [abc]\n */\n\nmodule.exports = {\n  Disjunction: function Disjunction(path) {\n    var node = path.node,\n        parent = path.parent;\n\n\n    if (!handlers[parent.type]) {\n      return;\n    }\n\n    var charset = new Map();\n\n    if (!shouldProcess(node, charset) || !charset.size) {\n      return;\n    }\n\n    var characterClass = {\n      type: 'CharacterClass',\n      expressions: Array.from(charset.keys()).sort().map(function (key) {\n        return charset.get(key);\n      })\n    };\n\n    handlers[parent.type](path.getParent(), characterClass);\n  }\n};\n\nvar handlers = {\n  RegExp: function RegExp(path, characterClass) {\n    var node = path.node;\n\n\n    node.body = characterClass;\n  },\n  Group: function Group(path, characterClass) {\n    var node = path.node;\n\n\n    if (node.capturing) {\n      node.expression = characterClass;\n    } else {\n      path.replace(characterClass);\n    }\n  }\n};\n\nfunction shouldProcess(expression, charset) {\n  if (!expression) {\n    // Abort on empty disjunction part\n    return false;\n  }\n\n  var type = expression.type;\n\n\n  if (type === 'Disjunction') {\n    var left = expression.left,\n        right = expression.right;\n\n\n    return shouldProcess(left, charset) && shouldProcess(right, charset);\n  } else if (type === 'Char') {\n    if (expression.kind === 'meta' && expression.symbol === '.') {\n      return false;\n    }\n\n    var value = expression.value;\n\n\n    charset.set(value, expression);\n\n    return true;\n  } else if (type === 'CharacterClass' && !expression.negative) {\n    return expression.expressions.every(function (expression) {\n      return shouldProcess(expression, charset);\n    });\n  }\n\n  return false;\n}","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nmodule.exports = new Map([\n// \\ud83d\\ude80 -> \\u{1f680}\n['charSurrogatePairToSingleUnicode', require('./char-surrogate-pair-to-single-unicode-transform')],\n\n// \\u0061 -> a\n['charCodeToSimpleChar', require('./char-code-to-simple-char-transform')],\n\n// /Aa/i -> /aa/i\n['charCaseInsensitiveLowerCaseTransform', require('./char-case-insensitive-lowercase-transform')],\n\n// [\\d\\d] -> [\\d]\n['charClassRemoveDuplicates', require('./char-class-remove-duplicates-transform')],\n\n// a{1,2}a{2,3} -> a{3,5}\n['quantifiersMerge', require('./quantifiers-merge-transform')],\n\n// a{1,} -> a+, a{3,3} -> a{3}, a{1} -> a\n['quantifierRangeToSymbol', require('./quantifier-range-to-symbol-transform')],\n\n// [a-a] -> [a], [a-b] -> [ab]\n['charClassClassrangesToChars', require('./char-class-classranges-to-chars-transform')],\n\n// [0-9] -> [\\d]\n['charClassToMeta', require('./char-class-to-meta-transform')],\n\n// [\\d] -> \\d, [^\\w] -> \\W\n['charClassToSingleChar', require('./char-class-to-single-char-transform')],\n\n// \\e -> e\n['charEscapeUnescape', require('./char-escape-unescape-transform')],\n\n// [a-de-f] -> [a-f]\n['charClassClassrangesMerge', require('./char-class-classranges-merge-transform')],\n\n// (ab|ab) -> (ab)\n['disjunctionRemoveDuplicates', require('./disjunction-remove-duplicates-transform')],\n\n// (a|b|c) -> [abc]\n['groupSingleCharsToCharClass', require('./group-single-chars-to-char-class')],\n\n// (?:)a -> a\n['removeEmptyGroup', require('./remove-empty-group-transform')],\n\n// (?:a) -> a\n['ungroup', require('./ungroup-transform')],\n\n// abcabcabc -> (?:abc){3}\n['combineRepeatingPatterns', require('./combine-repeating-patterns-transform')]]);","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to replace different range-based quantifiers\n * with their symbol equivalents.\n *\n * a{0,} -> a*\n * a{1,} -> a+\n * a{1} -> a\n *\n * NOTE: the following is automatically handled in the generator:\n *\n * a{3,3} -> a{3}\n */\n\nmodule.exports = {\n  Quantifier: function Quantifier(path) {\n    var node = path.node;\n\n\n    if (node.kind !== 'Range') {\n      return;\n    }\n\n    // a{0,} -> a*\n    rewriteOpenZero(path);\n\n    // a{1,} -> a+\n    rewriteOpenOne(path);\n\n    // a{1} -> a\n    rewriteExactOne(path);\n  }\n};\n\nfunction rewriteOpenZero(path) {\n  var node = path.node;\n\n\n  if (node.from !== 0 || node.to) {\n    return;\n  }\n\n  node.kind = '*';\n  delete node.from;\n}\n\nfunction rewriteOpenOne(path) {\n  var node = path.node;\n\n\n  if (node.from !== 1 || node.to) {\n    return;\n  }\n\n  node.kind = '+';\n  delete node.from;\n}\n\nfunction rewriteExactOne(path) {\n  var node = path.node;\n\n\n  if (node.from !== 1 || node.to !== 1) {\n    return;\n  }\n\n  path.parentPath.replace(path.parentPath.node.expression);\n}","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar _require = require('../../transform/utils'),\n    increaseQuantifierByOne = _require.increaseQuantifierByOne;\n\n/**\n * A regexp-tree plugin to merge quantifiers\n *\n * a+a+ -> a{2,}\n * a{2}a{3} -> a{5}\n * a{1,2}a{2,3} -> a{3,5}\n */\n\n\nmodule.exports = {\n  Repetition: function Repetition(path) {\n    var node = path.node,\n        parent = path.parent;\n\n\n    if (parent.type !== 'Alternative' || !path.index) {\n      return;\n    }\n\n    var previousSibling = path.getPreviousSibling();\n\n    if (!previousSibling) {\n      return;\n    }\n\n    if (previousSibling.node.type === 'Repetition') {\n      if (!previousSibling.getChild().hasEqualSource(path.getChild())) {\n        return;\n      }\n\n      var _extractFromTo = extractFromTo(previousSibling.node.quantifier),\n          previousSiblingFrom = _extractFromTo.from,\n          previousSiblingTo = _extractFromTo.to;\n\n      var _extractFromTo2 = extractFromTo(node.quantifier),\n          nodeFrom = _extractFromTo2.from,\n          nodeTo = _extractFromTo2.to;\n\n      // It's does not seem reliable to merge quantifiers with different greediness\n      // when none of both is a greedy open range\n\n\n      if (previousSibling.node.quantifier.greedy !== node.quantifier.greedy && !isGreedyOpenRange(previousSibling.node.quantifier) && !isGreedyOpenRange(node.quantifier)) {\n        return;\n      }\n\n      // a*a* -> a*\n      // a*a+ -> a+\n      // a+a+ -> a{2,}\n      // a{2}a{4} -> a{6}\n      // a{1,2}a{2,3} -> a{3,5}\n      // a{1,}a{2,} -> a{3,}\n      // a+a{2,} -> a{3,}\n\n      // a??a{2,} -> a{2,}\n      // a*?a{2,} -> a{2,}\n      // a+?a{2,} -> a{3,}\n\n      node.quantifier.kind = 'Range';\n      node.quantifier.from = previousSiblingFrom + nodeFrom;\n      if (previousSiblingTo && nodeTo) {\n        node.quantifier.to = previousSiblingTo + nodeTo;\n      } else {\n        delete node.quantifier.to;\n      }\n      if (isGreedyOpenRange(previousSibling.node.quantifier) || isGreedyOpenRange(node.quantifier)) {\n        node.quantifier.greedy = true;\n      }\n\n      previousSibling.remove();\n    } else {\n      if (!previousSibling.hasEqualSource(path.getChild())) {\n        return;\n      }\n\n      increaseQuantifierByOne(node.quantifier);\n      previousSibling.remove();\n    }\n  }\n};\n\nfunction isGreedyOpenRange(quantifier) {\n  return quantifier.greedy && (quantifier.kind === '+' || quantifier.kind === '*' || quantifier.kind === 'Range' && !quantifier.to);\n}\n\nfunction extractFromTo(quantifier) {\n  var from = void 0,\n      to = void 0;\n  if (quantifier.kind === '*') {\n    from = 0;\n  } else if (quantifier.kind === '+') {\n    from = 1;\n  } else if (quantifier.kind === '?') {\n    from = 0;\n    to = 1;\n  } else {\n    from = quantifier.from;\n    if (quantifier.to) {\n      to = quantifier.to;\n    }\n  }\n  return { from: from, to: to };\n}","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to remove non-capturing empty groups.\n *\n * /(?:)a/ -> /a/\n * /a|(?:)/ -> /a|/\n */\n\nmodule.exports = {\n  Group: function Group(path) {\n    var node = path.node,\n        parent = path.parent;\n\n    var childPath = path.getChild();\n\n    if (node.capturing || childPath) {\n      return;\n    }\n\n    if (parent.type === 'Repetition') {\n\n      path.getParent().replace(node);\n    } else if (parent.type !== 'RegExp') {\n\n      path.remove();\n    }\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to remove unnecessary groups.\n *\n * /(?:a)/ -> /a/\n */\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nmodule.exports = {\n  Group: function Group(path) {\n    var node = path.node,\n        parent = path.parent;\n\n    var childPath = path.getChild();\n\n    if (node.capturing || !childPath) {\n      return;\n    }\n\n    // Don't optimize \\1(?:0) to \\10\n    if (!hasAppropriateSiblings(path)) {\n      return;\n    }\n\n    // Don't optimize /a(?:b|c)/ to /ab|c/\n    // but /(?:b|c)/ to /b|c/ is ok\n    if (childPath.node.type === 'Disjunction' && parent.type !== 'RegExp') {\n      return;\n    }\n\n    // Don't optimize /(?:ab)+/ to /ab+/\n    // but /(?:a)+/ to /a+/ is ok\n    // and /(?:[a-d])+/ to /[a-d]+/ is ok too\n    if (parent.type === 'Repetition' && childPath.node.type !== 'Char' && childPath.node.type !== 'CharacterClass') {\n      return;\n    }\n\n    if (childPath.node.type === 'Alternative') {\n      var parentPath = path.getParent();\n      if (parentPath.node.type === 'Alternative') {\n        // /abc(?:def)ghi/ When (?:def) is ungrouped its content must be merged with parent alternative\n\n        parentPath.replace({\n          type: 'Alternative',\n          expressions: [].concat(_toConsumableArray(parent.expressions.slice(0, path.index)), _toConsumableArray(childPath.node.expressions), _toConsumableArray(parent.expressions.slice(path.index + 1)))\n        });\n      }\n    } else {\n      path.replace(childPath.node);\n    }\n  }\n};\n\nfunction hasAppropriateSiblings(path) {\n  var parent = path.parent,\n      index = path.index;\n\n\n  if (parent.type !== 'Alternative') {\n    return true;\n  }\n\n  var previousNode = parent.expressions[index - 1];\n  if (previousNode == null) {\n    return true;\n  }\n\n  // Don't optimized \\1(?:0) to \\10\n  if (previousNode.type === 'Backreference' && previousNode.kind === 'number') {\n    return false;\n  }\n\n  // Don't optimized \\2(?:0) to \\20\n  if (previousNode.type === 'Char' && previousNode.kind === 'decimal') {\n    return false;\n  }\n\n  return true;\n}","/**\n * LR parser generated by the Syntax tool.\n *\n * https://www.npmjs.com/package/syntax-cli\n *\n *   npm install -g syntax-cli\n *\n *   syntax-cli --help\n *\n * To regenerate run:\n *\n *   syntax-cli \\\n *     --grammar ~/path-to-grammar-file \\\n *     --mode <parsing-mode> \\\n *     --output ~/path-to-output-parser-file.js\n */\n\n'use strict';\n\n/**\n * Matched token text.\n */\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar yytext = void 0;\n\n/**\n * Length of the matched token text.\n */\nvar yyleng = void 0;\n\n/**\n * Storage object.\n */\nvar yy = {};\n\n/**\n * Result of semantic action.\n */\nvar __ = void 0;\n\n/**\n * Result location object.\n */\nvar __loc = void 0;\n\nfunction yyloc(start, end) {\n  if (!yy.options.captureLocations) {\n    return null;\n  }\n\n  // Epsilon doesn't produce location.\n  if (!start || !end) {\n    return start || end;\n  }\n\n  return {\n    startOffset: start.startOffset,\n    endOffset: end.endOffset,\n    startLine: start.startLine,\n    endLine: end.endLine,\n    startColumn: start.startColumn,\n    endColumn: end.endColumn\n  };\n}\n\nvar EOF = '$';\n\n/**\n * List of productions (generated by Syntax tool).\n */\nvar productions = [[-1, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [0, 4, function (_1, _2, _3, _4, _1loc, _2loc, _3loc, _4loc) {\n  __loc = yyloc(_1loc, _4loc);\n  __ = Node({\n    type: 'RegExp',\n    body: _2,\n    flags: checkFlags(_4)\n  }, loc(_1loc, _4loc || _3loc));\n}], [1, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [1, 0, function () {\n  __loc = null;__ = '';\n}], [2, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [2, 2, function (_1, _2, _1loc, _2loc) {\n  __loc = yyloc(_1loc, _2loc);__ = _1 + _2;\n}], [3, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [4, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [4, 3, function (_1, _2, _3, _1loc, _2loc, _3loc) {\n  __loc = yyloc(_1loc, _3loc);\n  // Location for empty disjunction: /|/\n  var _loc = null;\n\n  if (_2loc) {\n    _loc = loc(_1loc || _2loc, _3loc || _2loc);\n  };\n\n  __ = Node({\n    type: 'Disjunction',\n    left: _1,\n    right: _3\n  }, _loc);\n}], [5, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);\n  if (_1.length === 0) {\n    __ = null;\n    return;\n  }\n\n  if (_1.length === 1) {\n    __ = Node(_1[0], __loc);\n  } else {\n    __ = Node({\n      type: 'Alternative',\n      expressions: _1\n    }, __loc);\n  }\n}], [6, 0, function () {\n  __loc = null;__ = [];\n}], [6, 2, function (_1, _2, _1loc, _2loc) {\n  __loc = yyloc(_1loc, _2loc);__ = _1.concat(_2);\n}], [7, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Node(Object.assign({ type: 'Assertion' }, _1), __loc);\n}], [7, 2, function (_1, _2, _1loc, _2loc) {\n  __loc = yyloc(_1loc, _2loc);\n  __ = _1;\n\n  if (_2) {\n    __ = Node({\n      type: 'Repetition',\n      expression: _1,\n      quantifier: _2\n    }, __loc);\n  }\n}], [8, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = { kind: '^' };\n}], [8, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = { kind: '$' };\n}], [8, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = { kind: '\\\\b' };\n}], [8, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = { kind: '\\\\B' };\n}], [8, 3, function (_1, _2, _3, _1loc, _2loc, _3loc) {\n  __loc = yyloc(_1loc, _3loc);\n  __ = {\n    kind: 'Lookahead',\n    assertion: _2\n  };\n}], [8, 3, function (_1, _2, _3, _1loc, _2loc, _3loc) {\n  __loc = yyloc(_1loc, _3loc);\n  __ = {\n    kind: 'Lookahead',\n    negative: true,\n    assertion: _2\n  };\n}], [8, 3, function (_1, _2, _3, _1loc, _2loc, _3loc) {\n  __loc = yyloc(_1loc, _3loc);\n  __ = {\n    kind: 'Lookbehind',\n    assertion: _2\n  };\n}], [8, 3, function (_1, _2, _3, _1loc, _2loc, _3loc) {\n  __loc = yyloc(_1loc, _3loc);\n  __ = {\n    kind: 'Lookbehind',\n    negative: true,\n    assertion: _2\n  };\n}], [9, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [9, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [9, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Char(_1, 'simple', __loc);\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Char(_1.slice(1), 'simple', __loc);__.escaped = true;\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Char(_1, 'unicode', __loc);__.isSurrogatePair = true;\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Char(_1, 'unicode', __loc);\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = UnicodeProperty(_1, __loc);\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Char(_1, 'control', __loc);\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Char(_1, 'hex', __loc);\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Char(_1, 'oct', __loc);\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = GroupRefOrDecChar(_1, __loc);\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Char(_1, 'meta', __loc);\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Char(_1, 'meta', __loc);\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = NamedGroupRefOrChars(_1, _1loc);\n}], [11, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [11, 0], [12, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [12, 2, function (_1, _2, _1loc, _2loc) {\n  __loc = yyloc(_1loc, _2loc);\n  _1.greedy = false;\n  __ = _1;\n}], [13, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);\n  __ = Node({\n    type: 'Quantifier',\n    kind: _1,\n    greedy: true\n  }, __loc);\n}], [13, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);\n  __ = Node({\n    type: 'Quantifier',\n    kind: _1,\n    greedy: true\n  }, __loc);\n}], [13, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);\n  __ = Node({\n    type: 'Quantifier',\n    kind: _1,\n    greedy: true\n  }, __loc);\n}], [13, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);\n  var range = getRange(_1);\n  __ = Node({\n    type: 'Quantifier',\n    kind: 'Range',\n    from: range[0],\n    to: range[0],\n    greedy: true\n  }, __loc);\n}], [13, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);\n  __ = Node({\n    type: 'Quantifier',\n    kind: 'Range',\n    from: getRange(_1)[0],\n    greedy: true\n  }, __loc);\n}], [13, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);\n  var range = getRange(_1);\n  __ = Node({\n    type: 'Quantifier',\n    kind: 'Range',\n    from: range[0],\n    to: range[1],\n    greedy: true\n  }, __loc);\n}], [14, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [14, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [15, 3, function (_1, _2, _3, _1loc, _2loc, _3loc) {\n  __loc = yyloc(_1loc, _3loc);\n  var nameRaw = String(_1);\n  var name = decodeUnicodeGroupName(nameRaw);\n  if (!yy.options.allowGroupNameDuplicates && namedGroups.hasOwnProperty(name)) {\n    throw new SyntaxError('Duplicate of the named group \"' + name + '\".');\n  }\n\n  namedGroups[name] = _1.groupNumber;\n\n  __ = Node({\n    type: 'Group',\n    capturing: true,\n    name: name,\n    nameRaw: nameRaw,\n    number: _1.groupNumber,\n    expression: _2\n  }, __loc);\n}], [15, 3, function (_1, _2, _3, _1loc, _2loc, _3loc) {\n  __loc = yyloc(_1loc, _3loc);\n  __ = Node({\n    type: 'Group',\n    capturing: true,\n    number: _1.groupNumber,\n    expression: _2\n  }, __loc);\n}], [16, 3, function (_1, _2, _3, _1loc, _2loc, _3loc) {\n  __loc = yyloc(_1loc, _3loc);\n  __ = Node({\n    type: 'Group',\n    capturing: false,\n    expression: _2\n  }, __loc);\n}], [17, 3, function (_1, _2, _3, _1loc, _2loc, _3loc) {\n  __loc = yyloc(_1loc, _3loc);\n  __ = Node({\n    type: 'CharacterClass',\n    negative: true,\n    expressions: _2\n  }, __loc);\n}], [17, 3, function (_1, _2, _3, _1loc, _2loc, _3loc) {\n  __loc = yyloc(_1loc, _3loc);\n  __ = Node({\n    type: 'CharacterClass',\n    expressions: _2\n  }, __loc);\n}], [18, 0, function () {\n  __loc = null;__ = [];\n}], [18, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [19, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = [_1];\n}], [19, 2, function (_1, _2, _1loc, _2loc) {\n  __loc = yyloc(_1loc, _2loc);__ = [_1].concat(_2);\n}], [19, 4, function (_1, _2, _3, _4, _1loc, _2loc, _3loc, _4loc) {\n  __loc = yyloc(_1loc, _4loc);\n  checkClassRange(_1, _3);\n\n  __ = [Node({\n    type: 'ClassRange',\n    from: _1,\n    to: _3\n  }, loc(_1loc, _3loc))];\n\n  if (_4) {\n    __ = __.concat(_4);\n  }\n}], [20, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [20, 2, function (_1, _2, _1loc, _2loc) {\n  __loc = yyloc(_1loc, _2loc);__ = [_1].concat(_2);\n}], [20, 4, function (_1, _2, _3, _4, _1loc, _2loc, _3loc, _4loc) {\n  __loc = yyloc(_1loc, _4loc);\n  checkClassRange(_1, _3);\n\n  __ = [Node({\n    type: 'ClassRange',\n    from: _1,\n    to: _3\n  }, loc(_1loc, _3loc))];\n\n  if (_4) {\n    __ = __.concat(_4);\n  }\n}], [21, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Char(_1, 'simple', __loc);\n}], [21, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [22, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [22, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Char(_1, 'meta', __loc);\n}]];\n\n/**\n * Encoded tokens map.\n */\nvar tokens = { \"SLASH\": \"23\", \"CHAR\": \"24\", \"BAR\": \"25\", \"BOS\": \"26\", \"EOS\": \"27\", \"ESC_b\": \"28\", \"ESC_B\": \"29\", \"POS_LA_ASSERT\": \"30\", \"R_PAREN\": \"31\", \"NEG_LA_ASSERT\": \"32\", \"POS_LB_ASSERT\": \"33\", \"NEG_LB_ASSERT\": \"34\", \"ESC_CHAR\": \"35\", \"U_CODE_SURROGATE\": \"36\", \"U_CODE\": \"37\", \"U_PROP_VALUE_EXP\": \"38\", \"CTRL_CH\": \"39\", \"HEX_CODE\": \"40\", \"OCT_CODE\": \"41\", \"DEC_CODE\": \"42\", \"META_CHAR\": \"43\", \"ANY\": \"44\", \"NAMED_GROUP_REF\": \"45\", \"Q_MARK\": \"46\", \"STAR\": \"47\", \"PLUS\": \"48\", \"RANGE_EXACT\": \"49\", \"RANGE_OPEN\": \"50\", \"RANGE_CLOSED\": \"51\", \"NAMED_CAPTURE_GROUP\": \"52\", \"L_PAREN\": \"53\", \"NON_CAPTURE_GROUP\": \"54\", \"NEG_CLASS\": \"55\", \"R_BRACKET\": \"56\", \"L_BRACKET\": \"57\", \"DASH\": \"58\", \"$\": \"59\" };\n\n/**\n * Parsing table (generated by Syntax tool).\n */\nvar table = [{ \"0\": 1, \"23\": \"s2\" }, { \"59\": \"acc\" }, { \"3\": 3, \"4\": 4, \"5\": 5, \"6\": 6, \"23\": \"r10\", \"24\": \"r10\", \"25\": \"r10\", \"26\": \"r10\", \"27\": \"r10\", \"28\": \"r10\", \"29\": \"r10\", \"30\": \"r10\", \"32\": \"r10\", \"33\": \"r10\", \"34\": \"r10\", \"35\": \"r10\", \"36\": \"r10\", \"37\": \"r10\", \"38\": \"r10\", \"39\": \"r10\", \"40\": \"r10\", \"41\": \"r10\", \"42\": \"r10\", \"43\": \"r10\", \"44\": \"r10\", \"45\": \"r10\", \"52\": \"r10\", \"53\": \"r10\", \"54\": \"r10\", \"55\": \"r10\", \"57\": \"r10\" }, { \"23\": \"s7\" }, { \"23\": \"r6\", \"25\": \"s12\" }, { \"23\": \"r7\", \"25\": \"r7\", \"31\": \"r7\" }, { \"7\": 14, \"8\": 15, \"9\": 16, \"10\": 25, \"14\": 27, \"15\": 42, \"16\": 43, \"17\": 26, \"23\": \"r9\", \"24\": \"s28\", \"25\": \"r9\", \"26\": \"s17\", \"27\": \"s18\", \"28\": \"s19\", \"29\": \"s20\", \"30\": \"s21\", \"31\": \"r9\", \"32\": \"s22\", \"33\": \"s23\", \"34\": \"s24\", \"35\": \"s29\", \"36\": \"s30\", \"37\": \"s31\", \"38\": \"s32\", \"39\": \"s33\", \"40\": \"s34\", \"41\": \"s35\", \"42\": \"s36\", \"43\": \"s37\", \"44\": \"s38\", \"45\": \"s39\", \"52\": \"s44\", \"53\": \"s45\", \"54\": \"s46\", \"55\": \"s40\", \"57\": \"s41\" }, { \"1\": 8, \"2\": 9, \"24\": \"s10\", \"59\": \"r3\" }, { \"59\": \"r1\" }, { \"24\": \"s11\", \"59\": \"r2\" }, { \"24\": \"r4\", \"59\": \"r4\" }, { \"24\": \"r5\", \"59\": \"r5\" }, { \"5\": 13, \"6\": 6, \"23\": \"r10\", \"24\": \"r10\", \"25\": \"r10\", \"26\": \"r10\", \"27\": \"r10\", \"28\": \"r10\", \"29\": \"r10\", \"30\": \"r10\", \"31\": \"r10\", \"32\": \"r10\", \"33\": \"r10\", \"34\": \"r10\", \"35\": \"r10\", \"36\": \"r10\", \"37\": \"r10\", \"38\": \"r10\", \"39\": \"r10\", \"40\": \"r10\", \"41\": \"r10\", \"42\": \"r10\", \"43\": \"r10\", \"44\": \"r10\", \"45\": \"r10\", \"52\": \"r10\", \"53\": \"r10\", \"54\": \"r10\", \"55\": \"r10\", \"57\": \"r10\" }, { \"23\": \"r8\", \"25\": \"r8\", \"31\": \"r8\" }, { \"23\": \"r11\", \"24\": \"r11\", \"25\": \"r11\", \"26\": \"r11\", \"27\": \"r11\", \"28\": \"r11\", \"29\": \"r11\", \"30\": \"r11\", \"31\": \"r11\", \"32\": \"r11\", \"33\": \"r11\", \"34\": \"r11\", \"35\": \"r11\", \"36\": \"r11\", \"37\": \"r11\", \"38\": \"r11\", \"39\": \"r11\", \"40\": \"r11\", \"41\": \"r11\", \"42\": \"r11\", \"43\": \"r11\", \"44\": \"r11\", \"45\": \"r11\", \"52\": \"r11\", \"53\": \"r11\", \"54\": \"r11\", \"55\": \"r11\", \"57\": \"r11\" }, { \"23\": \"r12\", \"24\": \"r12\", \"25\": \"r12\", \"26\": \"r12\", \"27\": \"r12\", \"28\": \"r12\", \"29\": \"r12\", \"30\": \"r12\", \"31\": \"r12\", \"32\": \"r12\", \"33\": \"r12\", \"34\": \"r12\", \"35\": \"r12\", \"36\": \"r12\", \"37\": \"r12\", \"38\": \"r12\", \"39\": \"r12\", \"40\": \"r12\", \"41\": \"r12\", \"42\": \"r12\", \"43\": \"r12\", \"44\": \"r12\", \"45\": \"r12\", \"52\": \"r12\", \"53\": \"r12\", \"54\": \"r12\", \"55\": \"r12\", \"57\": \"r12\" }, { \"11\": 47, \"12\": 48, \"13\": 49, \"23\": \"r38\", \"24\": \"r38\", \"25\": \"r38\", \"26\": \"r38\", \"27\": \"r38\", \"28\": \"r38\", \"29\": \"r38\", \"30\": \"r38\", \"31\": \"r38\", \"32\": \"r38\", \"33\": \"r38\", \"34\": \"r38\", \"35\": \"r38\", \"36\": \"r38\", \"37\": \"r38\", \"38\": \"r38\", \"39\": \"r38\", \"40\": \"r38\", \"41\": \"r38\", \"42\": \"r38\", \"43\": \"r38\", \"44\": \"r38\", \"45\": \"r38\", \"46\": \"s52\", \"47\": \"s50\", \"48\": \"s51\", \"49\": \"s53\", \"50\": \"s54\", \"51\": \"s55\", \"52\": \"r38\", \"53\": \"r38\", \"54\": \"r38\", \"55\": \"r38\", \"57\": \"r38\" }, { \"23\": \"r14\", \"24\": \"r14\", \"25\": \"r14\", \"26\": \"r14\", \"27\": \"r14\", \"28\": \"r14\", \"29\": \"r14\", \"30\": \"r14\", \"31\": \"r14\", \"32\": \"r14\", \"33\": \"r14\", \"34\": \"r14\", \"35\": \"r14\", \"36\": \"r14\", \"37\": \"r14\", \"38\": \"r14\", \"39\": \"r14\", \"40\": \"r14\", \"41\": \"r14\", \"42\": \"r14\", \"43\": \"r14\", \"44\": \"r14\", \"45\": \"r14\", \"52\": \"r14\", \"53\": \"r14\", \"54\": \"r14\", \"55\": \"r14\", \"57\": \"r14\" }, { \"23\": \"r15\", \"24\": \"r15\", \"25\": \"r15\", \"26\": \"r15\", \"27\": \"r15\", \"28\": \"r15\", \"29\": \"r15\", \"30\": \"r15\", \"31\": \"r15\", \"32\": \"r15\", \"33\": \"r15\", \"34\": \"r15\", \"35\": \"r15\", \"36\": \"r15\", \"37\": \"r15\", \"38\": \"r15\", \"39\": \"r15\", \"40\": \"r15\", \"41\": \"r15\", \"42\": \"r15\", \"43\": \"r15\", \"44\": \"r15\", \"45\": \"r15\", \"52\": \"r15\", \"53\": \"r15\", \"54\": \"r15\", \"55\": \"r15\", \"57\": \"r15\" }, { \"23\": \"r16\", \"24\": \"r16\", \"25\": \"r16\", \"26\": \"r16\", \"27\": \"r16\", \"28\": \"r16\", \"29\": \"r16\", \"30\": \"r16\", \"31\": \"r16\", \"32\": \"r16\", \"33\": \"r16\", \"34\": \"r16\", \"35\": \"r16\", \"36\": \"r16\", \"37\": \"r16\", \"38\": \"r16\", \"39\": \"r16\", \"40\": \"r16\", \"41\": \"r16\", \"42\": \"r16\", \"43\": \"r16\", \"44\": \"r16\", \"45\": \"r16\", \"52\": \"r16\", \"53\": \"r16\", \"54\": \"r16\", \"55\": \"r16\", \"57\": \"r16\" }, { \"23\": \"r17\", \"24\": \"r17\", \"25\": \"r17\", \"26\": \"r17\", \"27\": \"r17\", \"28\": \"r17\", \"29\": \"r17\", \"30\": \"r17\", \"31\": \"r17\", \"32\": \"r17\", \"33\": \"r17\", \"34\": \"r17\", \"35\": \"r17\", \"36\": \"r17\", \"37\": \"r17\", \"38\": \"r17\", \"39\": \"r17\", \"40\": \"r17\", \"41\": \"r17\", \"42\": \"r17\", \"43\": \"r17\", \"44\": \"r17\", \"45\": \"r17\", \"52\": \"r17\", \"53\": \"r17\", \"54\": \"r17\", \"55\": \"r17\", \"57\": \"r17\" }, { \"4\": 57, \"5\": 5, \"6\": 6, \"24\": \"r10\", \"25\": \"r10\", \"26\": \"r10\", \"27\": \"r10\", \"28\": \"r10\", \"29\": \"r10\", \"30\": \"r10\", \"31\": \"r10\", \"32\": \"r10\", \"33\": \"r10\", \"34\": \"r10\", \"35\": \"r10\", \"36\": \"r10\", \"37\": \"r10\", \"38\": \"r10\", \"39\": \"r10\", \"40\": \"r10\", \"41\": \"r10\", \"42\": \"r10\", \"43\": \"r10\", \"44\": \"r10\", \"45\": \"r10\", \"52\": \"r10\", \"53\": \"r10\", \"54\": \"r10\", \"55\": \"r10\", \"57\": \"r10\" }, { \"4\": 59, \"5\": 5, \"6\": 6, \"24\": \"r10\", \"25\": \"r10\", \"26\": \"r10\", \"27\": \"r10\", \"28\": \"r10\", \"29\": \"r10\", \"30\": \"r10\", \"31\": \"r10\", \"32\": \"r10\", \"33\": \"r10\", \"34\": \"r10\", \"35\": \"r10\", \"36\": \"r10\", \"37\": \"r10\", \"38\": \"r10\", \"39\": \"r10\", \"40\": \"r10\", \"41\": \"r10\", \"42\": \"r10\", \"43\": \"r10\", \"44\": \"r10\", \"45\": \"r10\", \"52\": \"r10\", \"53\": \"r10\", \"54\": \"r10\", \"55\": \"r10\", \"57\": \"r10\" }, { \"4\": 61, \"5\": 5, \"6\": 6, \"24\": \"r10\", \"25\": \"r10\", \"26\": \"r10\", \"27\": \"r10\", \"28\": \"r10\", \"29\": \"r10\", \"30\": \"r10\", \"31\": \"r10\", \"32\": \"r10\", \"33\": \"r10\", \"34\": \"r10\", \"35\": \"r10\", \"36\": \"r10\", \"37\": \"r10\", \"38\": \"r10\", \"39\": \"r10\", \"40\": \"r10\", \"41\": \"r10\", \"42\": \"r10\", \"43\": \"r10\", \"44\": \"r10\", \"45\": \"r10\", \"52\": \"r10\", \"53\": \"r10\", \"54\": \"r10\", \"55\": \"r10\", \"57\": \"r10\" }, { \"4\": 63, \"5\": 5, \"6\": 6, \"24\": \"r10\", \"25\": \"r10\", \"26\": \"r10\", \"27\": \"r10\", \"28\": \"r10\", \"29\": \"r10\", \"30\": \"r10\", \"31\": \"r10\", \"32\": \"r10\", \"33\": \"r10\", \"34\": \"r10\", \"35\": \"r10\", \"36\": \"r10\", \"37\": \"r10\", \"38\": \"r10\", \"39\": \"r10\", \"40\": \"r10\", \"41\": \"r10\", \"42\": \"r10\", \"43\": \"r10\", \"44\": \"r10\", \"45\": \"r10\", \"52\": \"r10\", \"53\": \"r10\", \"54\": \"r10\", \"55\": \"r10\", \"57\": \"r10\" }, { \"23\": \"r22\", \"24\": \"r22\", \"25\": \"r22\", \"26\": \"r22\", \"27\": \"r22\", \"28\": \"r22\", \"29\": \"r22\", \"30\": \"r22\", \"31\": \"r22\", \"32\": \"r22\", \"33\": \"r22\", \"34\": \"r22\", \"35\": \"r22\", \"36\": \"r22\", \"37\": \"r22\", \"38\": \"r22\", \"39\": \"r22\", \"40\": \"r22\", \"41\": \"r22\", \"42\": \"r22\", \"43\": \"r22\", \"44\": \"r22\", \"45\": \"r22\", \"46\": \"r22\", \"47\": \"r22\", \"48\": \"r22\", \"49\": \"r22\", \"50\": \"r22\", \"51\": \"r22\", \"52\": \"r22\", \"53\": \"r22\", \"54\": \"r22\", \"55\": \"r22\", \"57\": \"r22\" }, { \"23\": \"r23\", \"24\": \"r23\", \"25\": \"r23\", \"26\": \"r23\", \"27\": \"r23\", \"28\": \"r23\", \"29\": \"r23\", \"30\": \"r23\", \"31\": \"r23\", \"32\": \"r23\", \"33\": \"r23\", \"34\": \"r23\", \"35\": \"r23\", \"36\": \"r23\", \"37\": \"r23\", \"38\": \"r23\", \"39\": \"r23\", \"40\": \"r23\", \"41\": \"r23\", \"42\": \"r23\", \"43\": \"r23\", \"44\": \"r23\", \"45\": \"r23\", \"46\": \"r23\", \"47\": \"r23\", \"48\": \"r23\", \"49\": \"r23\", \"50\": \"r23\", \"51\": \"r23\", \"52\": \"r23\", \"53\": \"r23\", \"54\": \"r23\", \"55\": \"r23\", \"57\": \"r23\" }, { \"23\": \"r24\", \"24\": \"r24\", \"25\": \"r24\", \"26\": \"r24\", \"27\": \"r24\", \"28\": \"r24\", \"29\": \"r24\", \"30\": \"r24\", \"31\": \"r24\", \"32\": \"r24\", \"33\": \"r24\", \"34\": \"r24\", \"35\": \"r24\", \"36\": \"r24\", \"37\": \"r24\", \"38\": \"r24\", \"39\": \"r24\", \"40\": \"r24\", \"41\": \"r24\", \"42\": \"r24\", \"43\": \"r24\", \"44\": \"r24\", \"45\": \"r24\", \"46\": \"r24\", \"47\": \"r24\", \"48\": \"r24\", \"49\": \"r24\", \"50\": \"r24\", \"51\": \"r24\", \"52\": \"r24\", \"53\": \"r24\", \"54\": \"r24\", \"55\": \"r24\", \"57\": \"r24\" }, { \"23\": \"r25\", \"24\": \"r25\", \"25\": \"r25\", \"26\": \"r25\", \"27\": \"r25\", \"28\": \"r25\", \"29\": \"r25\", \"30\": \"r25\", \"31\": \"r25\", \"32\": \"r25\", \"33\": \"r25\", \"34\": \"r25\", \"35\": \"r25\", \"36\": \"r25\", \"37\": \"r25\", \"38\": \"r25\", \"39\": \"r25\", \"40\": \"r25\", \"41\": \"r25\", \"42\": \"r25\", \"43\": \"r25\", \"44\": \"r25\", \"45\": \"r25\", \"46\": \"r25\", \"47\": \"r25\", \"48\": \"r25\", \"49\": \"r25\", \"50\": \"r25\", \"51\": \"r25\", \"52\": \"r25\", \"53\": \"r25\", \"54\": \"r25\", \"55\": \"r25\", \"56\": \"r25\", \"57\": \"r25\", \"58\": \"r25\" }, { \"23\": \"r26\", \"24\": \"r26\", \"25\": \"r26\", \"26\": \"r26\", \"27\": \"r26\", \"28\": \"r26\", \"29\": \"r26\", \"30\": \"r26\", \"31\": \"r26\", \"32\": \"r26\", \"33\": \"r26\", \"34\": \"r26\", \"35\": \"r26\", \"36\": \"r26\", \"37\": \"r26\", \"38\": \"r26\", \"39\": \"r26\", \"40\": \"r26\", \"41\": \"r26\", \"42\": \"r26\", \"43\": \"r26\", \"44\": \"r26\", \"45\": \"r26\", \"46\": \"r26\", \"47\": \"r26\", \"48\": \"r26\", \"49\": \"r26\", \"50\": \"r26\", \"51\": \"r26\", \"52\": \"r26\", \"53\": \"r26\", \"54\": \"r26\", \"55\": \"r26\", \"56\": \"r26\", \"57\": \"r26\", \"58\": \"r26\" }, { \"23\": \"r27\", \"24\": \"r27\", \"25\": \"r27\", \"26\": \"r27\", \"27\": \"r27\", \"28\": \"r27\", \"29\": \"r27\", \"30\": \"r27\", \"31\": \"r27\", \"32\": \"r27\", \"33\": \"r27\", \"34\": \"r27\", \"35\": \"r27\", \"36\": \"r27\", \"37\": \"r27\", \"38\": \"r27\", \"39\": \"r27\", \"40\": \"r27\", \"41\": \"r27\", \"42\": \"r27\", \"43\": \"r27\", \"44\": \"r27\", \"45\": \"r27\", \"46\": \"r27\", \"47\": \"r27\", \"48\": \"r27\", \"49\": \"r27\", \"50\": \"r27\", \"51\": \"r27\", \"52\": \"r27\", \"53\": \"r27\", \"54\": \"r27\", \"55\": \"r27\", \"56\": \"r27\", \"57\": \"r27\", \"58\": \"r27\" }, { \"23\": \"r28\", \"24\": \"r28\", \"25\": \"r28\", \"26\": \"r28\", \"27\": \"r28\", \"28\": \"r28\", \"29\": \"r28\", \"30\": \"r28\", \"31\": \"r28\", \"32\": \"r28\", \"33\": \"r28\", \"34\": \"r28\", \"35\": \"r28\", \"36\": \"r28\", \"37\": \"r28\", \"38\": \"r28\", \"39\": \"r28\", \"40\": \"r28\", \"41\": \"r28\", \"42\": \"r28\", \"43\": \"r28\", \"44\": \"r28\", \"45\": \"r28\", \"46\": \"r28\", \"47\": \"r28\", \"48\": \"r28\", \"49\": \"r28\", \"50\": \"r28\", \"51\": \"r28\", \"52\": \"r28\", \"53\": \"r28\", \"54\": \"r28\", \"55\": \"r28\", \"56\": \"r28\", \"57\": \"r28\", \"58\": \"r28\" }, { \"23\": \"r29\", \"24\": \"r29\", \"25\": \"r29\", \"26\": \"r29\", \"27\": \"r29\", \"28\": \"r29\", \"29\": \"r29\", \"30\": \"r29\", \"31\": \"r29\", \"32\": \"r29\", \"33\": \"r29\", \"34\": \"r29\", \"35\": \"r29\", \"36\": \"r29\", \"37\": \"r29\", \"38\": \"r29\", \"39\": \"r29\", \"40\": \"r29\", \"41\": \"r29\", \"42\": \"r29\", \"43\": \"r29\", \"44\": \"r29\", \"45\": \"r29\", \"46\": \"r29\", \"47\": \"r29\", \"48\": \"r29\", \"49\": \"r29\", \"50\": \"r29\", \"51\": \"r29\", \"52\": \"r29\", \"53\": \"r29\", \"54\": \"r29\", \"55\": \"r29\", \"56\": \"r29\", \"57\": \"r29\", \"58\": \"r29\" }, { \"23\": \"r30\", \"24\": \"r30\", \"25\": \"r30\", \"26\": \"r30\", \"27\": \"r30\", \"28\": \"r30\", \"29\": \"r30\", \"30\": \"r30\", \"31\": \"r30\", \"32\": \"r30\", \"33\": \"r30\", \"34\": \"r30\", \"35\": \"r30\", \"36\": \"r30\", \"37\": \"r30\", \"38\": \"r30\", \"39\": \"r30\", \"40\": \"r30\", \"41\": \"r30\", \"42\": \"r30\", \"43\": \"r30\", \"44\": \"r30\", \"45\": \"r30\", \"46\": \"r30\", \"47\": \"r30\", \"48\": \"r30\", \"49\": \"r30\", \"50\": \"r30\", \"51\": \"r30\", \"52\": \"r30\", \"53\": \"r30\", \"54\": \"r30\", \"55\": \"r30\", \"56\": \"r30\", \"57\": \"r30\", \"58\": \"r30\" }, { \"23\": \"r31\", \"24\": \"r31\", \"25\": \"r31\", \"26\": \"r31\", \"27\": \"r31\", \"28\": \"r31\", \"29\": \"r31\", \"30\": \"r31\", \"31\": \"r31\", \"32\": \"r31\", \"33\": \"r31\", \"34\": \"r31\", \"35\": \"r31\", \"36\": \"r31\", \"37\": \"r31\", \"38\": \"r31\", \"39\": \"r31\", \"40\": \"r31\", \"41\": \"r31\", \"42\": \"r31\", \"43\": \"r31\", \"44\": \"r31\", \"45\": \"r31\", \"46\": \"r31\", \"47\": \"r31\", \"48\": \"r31\", \"49\": \"r31\", \"50\": \"r31\", \"51\": \"r31\", \"52\": \"r31\", \"53\": \"r31\", \"54\": \"r31\", \"55\": \"r31\", \"56\": \"r31\", \"57\": \"r31\", \"58\": \"r31\" }, { \"23\": \"r32\", \"24\": \"r32\", \"25\": \"r32\", \"26\": \"r32\", \"27\": \"r32\", \"28\": \"r32\", \"29\": \"r32\", \"30\": \"r32\", \"31\": \"r32\", \"32\": \"r32\", \"33\": \"r32\", \"34\": \"r32\", \"35\": \"r32\", \"36\": \"r32\", \"37\": \"r32\", \"38\": \"r32\", \"39\": \"r32\", \"40\": \"r32\", \"41\": \"r32\", \"42\": \"r32\", \"43\": \"r32\", \"44\": \"r32\", \"45\": \"r32\", \"46\": \"r32\", \"47\": \"r32\", \"48\": \"r32\", \"49\": \"r32\", \"50\": \"r32\", \"51\": \"r32\", \"52\": \"r32\", \"53\": \"r32\", \"54\": \"r32\", \"55\": \"r32\", \"56\": \"r32\", \"57\": \"r32\", \"58\": \"r32\" }, { \"23\": \"r33\", \"24\": \"r33\", \"25\": \"r33\", \"26\": \"r33\", \"27\": \"r33\", \"28\": \"r33\", \"29\": \"r33\", \"30\": \"r33\", \"31\": \"r33\", \"32\": \"r33\", \"33\": \"r33\", \"34\": \"r33\", \"35\": \"r33\", \"36\": \"r33\", \"37\": \"r33\", \"38\": \"r33\", \"39\": \"r33\", \"40\": \"r33\", \"41\": \"r33\", \"42\": \"r33\", \"43\": \"r33\", \"44\": \"r33\", \"45\": \"r33\", \"46\": \"r33\", \"47\": \"r33\", \"48\": \"r33\", \"49\": \"r33\", \"50\": \"r33\", \"51\": \"r33\", \"52\": \"r33\", \"53\": \"r33\", \"54\": \"r33\", \"55\": \"r33\", \"56\": \"r33\", \"57\": \"r33\", \"58\": \"r33\" }, { \"23\": \"r34\", \"24\": \"r34\", \"25\": \"r34\", \"26\": \"r34\", \"27\": \"r34\", \"28\": \"r34\", \"29\": \"r34\", \"30\": \"r34\", \"31\": \"r34\", \"32\": \"r34\", \"33\": \"r34\", \"34\": \"r34\", \"35\": \"r34\", \"36\": \"r34\", \"37\": \"r34\", \"38\": \"r34\", \"39\": \"r34\", \"40\": \"r34\", \"41\": \"r34\", \"42\": \"r34\", \"43\": \"r34\", \"44\": \"r34\", \"45\": \"r34\", \"46\": \"r34\", \"47\": \"r34\", \"48\": \"r34\", \"49\": \"r34\", \"50\": \"r34\", \"51\": \"r34\", \"52\": \"r34\", \"53\": \"r34\", \"54\": \"r34\", \"55\": \"r34\", \"56\": \"r34\", \"57\": \"r34\", \"58\": \"r34\" }, { \"23\": \"r35\", \"24\": \"r35\", \"25\": \"r35\", \"26\": \"r35\", \"27\": \"r35\", \"28\": \"r35\", \"29\": \"r35\", \"30\": \"r35\", \"31\": \"r35\", \"32\": \"r35\", \"33\": \"r35\", \"34\": \"r35\", \"35\": \"r35\", \"36\": \"r35\", \"37\": \"r35\", \"38\": \"r35\", \"39\": \"r35\", \"40\": \"r35\", \"41\": \"r35\", \"42\": \"r35\", \"43\": \"r35\", \"44\": \"r35\", \"45\": \"r35\", \"46\": \"r35\", \"47\": \"r35\", \"48\": \"r35\", \"49\": \"r35\", \"50\": \"r35\", \"51\": \"r35\", \"52\": \"r35\", \"53\": \"r35\", \"54\": \"r35\", \"55\": \"r35\", \"56\": \"r35\", \"57\": \"r35\", \"58\": \"r35\" }, { \"23\": \"r36\", \"24\": \"r36\", \"25\": \"r36\", \"26\": \"r36\", \"27\": \"r36\", \"28\": \"r36\", \"29\": \"r36\", \"30\": \"r36\", \"31\": \"r36\", \"32\": \"r36\", \"33\": \"r36\", \"34\": \"r36\", \"35\": \"r36\", \"36\": \"r36\", \"37\": \"r36\", \"38\": \"r36\", \"39\": \"r36\", \"40\": \"r36\", \"41\": \"r36\", \"42\": \"r36\", \"43\": \"r36\", \"44\": \"r36\", \"45\": \"r36\", \"46\": \"r36\", \"47\": \"r36\", \"48\": \"r36\", \"49\": \"r36\", \"50\": \"r36\", \"51\": \"r36\", \"52\": \"r36\", \"53\": \"r36\", \"54\": \"r36\", \"55\": \"r36\", \"56\": \"r36\", \"57\": \"r36\", \"58\": \"r36\" }, { \"10\": 70, \"18\": 65, \"19\": 66, \"21\": 67, \"22\": 69, \"24\": \"s28\", \"28\": \"s71\", \"35\": \"s29\", \"36\": \"s30\", \"37\": \"s31\", \"38\": \"s32\", \"39\": \"s33\", \"40\": \"s34\", \"41\": \"s35\", \"42\": \"s36\", \"43\": \"s37\", \"44\": \"s38\", \"45\": \"s39\", \"56\": \"r54\", \"58\": \"s68\" }, { \"10\": 70, \"18\": 83, \"19\": 66, \"21\": 67, \"22\": 69, \"24\": \"s28\", \"28\": \"s71\", \"35\": \"s29\", \"36\": \"s30\", \"37\": \"s31\", \"38\": \"s32\", \"39\": \"s33\", \"40\": \"s34\", \"41\": \"s35\", \"42\": \"s36\", \"43\": \"s37\", \"44\": \"s38\", \"45\": \"s39\", \"56\": \"r54\", \"58\": \"s68\" }, { \"23\": \"r47\", \"24\": \"r47\", \"25\": \"r47\", \"26\": \"r47\", \"27\": \"r47\", \"28\": \"r47\", \"29\": \"r47\", \"30\": \"r47\", \"31\": \"r47\", \"32\": \"r47\", \"33\": \"r47\", \"34\": \"r47\", \"35\": \"r47\", \"36\": \"r47\", \"37\": \"r47\", \"38\": \"r47\", \"39\": \"r47\", \"40\": \"r47\", \"41\": \"r47\", \"42\": \"r47\", \"43\": \"r47\", \"44\": \"r47\", \"45\": \"r47\", \"46\": \"r47\", \"47\": \"r47\", \"48\": \"r47\", \"49\": \"r47\", \"50\": \"r47\", \"51\": \"r47\", \"52\": \"r47\", \"53\": \"r47\", \"54\": \"r47\", \"55\": \"r47\", \"57\": \"r47\" }, { \"23\": \"r48\", \"24\": \"r48\", \"25\": \"r48\", \"26\": \"r48\", \"27\": \"r48\", \"28\": \"r48\", \"29\": \"r48\", \"30\": \"r48\", \"31\": \"r48\", \"32\": \"r48\", \"33\": \"r48\", \"34\": \"r48\", \"35\": \"r48\", \"36\": \"r48\", \"37\": \"r48\", \"38\": \"r48\", \"39\": \"r48\", \"40\": \"r48\", \"41\": \"r48\", \"42\": \"r48\", \"43\": \"r48\", \"44\": \"r48\", \"45\": \"r48\", \"46\": \"r48\", \"47\": \"r48\", \"48\": \"r48\", \"49\": \"r48\", \"50\": \"r48\", \"51\": \"r48\", \"52\": \"r48\", \"53\": \"r48\", \"54\": \"r48\", \"55\": \"r48\", \"57\": \"r48\" }, { \"4\": 85, \"5\": 5, \"6\": 6, \"24\": \"r10\", \"25\": \"r10\", \"26\": \"r10\", \"27\": \"r10\", \"28\": \"r10\", \"29\": \"r10\", \"30\": \"r10\", \"31\": \"r10\", \"32\": \"r10\", \"33\": \"r10\", \"34\": \"r10\", \"35\": \"r10\", \"36\": \"r10\", \"37\": \"r10\", \"38\": \"r10\", \"39\": \"r10\", \"40\": \"r10\", \"41\": \"r10\", \"42\": \"r10\", \"43\": \"r10\", \"44\": \"r10\", \"45\": \"r10\", \"52\": \"r10\", \"53\": \"r10\", \"54\": \"r10\", \"55\": \"r10\", \"57\": \"r10\" }, { \"4\": 87, \"5\": 5, \"6\": 6, \"24\": \"r10\", \"25\": \"r10\", \"26\": \"r10\", \"27\": \"r10\", \"28\": \"r10\", \"29\": \"r10\", \"30\": \"r10\", \"31\": \"r10\", \"32\": \"r10\", \"33\": \"r10\", \"34\": \"r10\", \"35\": \"r10\", \"36\": \"r10\", \"37\": \"r10\", \"38\": \"r10\", \"39\": \"r10\", \"40\": \"r10\", \"41\": \"r10\", \"42\": \"r10\", \"43\": \"r10\", \"44\": \"r10\", \"45\": \"r10\", \"52\": \"r10\", \"53\": \"r10\", \"54\": \"r10\", \"55\": \"r10\", \"57\": \"r10\" }, { \"4\": 89, \"5\": 5, \"6\": 6, \"24\": \"r10\", \"25\": \"r10\", \"26\": \"r10\", \"27\": \"r10\", \"28\": \"r10\", \"29\": \"r10\", \"30\": \"r10\", \"31\": \"r10\", \"32\": \"r10\", \"33\": \"r10\", \"34\": \"r10\", \"35\": \"r10\", \"36\": \"r10\", \"37\": \"r10\", \"38\": \"r10\", \"39\": \"r10\", \"40\": \"r10\", \"41\": \"r10\", \"42\": \"r10\", \"43\": \"r10\", \"44\": \"r10\", \"45\": \"r10\", \"52\": \"r10\", \"53\": \"r10\", \"54\": \"r10\", \"55\": \"r10\", \"57\": \"r10\" }, { \"23\": \"r13\", \"24\": \"r13\", \"25\": \"r13\", \"26\": \"r13\", \"27\": \"r13\", \"28\": \"r13\", \"29\": \"r13\", \"30\": \"r13\", \"31\": \"r13\", \"32\": \"r13\", \"33\": \"r13\", \"34\": \"r13\", \"35\": \"r13\", \"36\": \"r13\", \"37\": \"r13\", \"38\": \"r13\", \"39\": \"r13\", \"40\": \"r13\", \"41\": \"r13\", \"42\": \"r13\", \"43\": \"r13\", \"44\": \"r13\", \"45\": \"r13\", \"52\": \"r13\", \"53\": \"r13\", \"54\": \"r13\", \"55\": \"r13\", \"57\": \"r13\" }, { \"23\": \"r37\", \"24\": \"r37\", \"25\": \"r37\", \"26\": \"r37\", \"27\": \"r37\", \"28\": \"r37\", \"29\": \"r37\", \"30\": \"r37\", \"31\": \"r37\", \"32\": \"r37\", \"33\": \"r37\", \"34\": \"r37\", \"35\": \"r37\", \"36\": \"r37\", \"37\": \"r37\", \"38\": \"r37\", \"39\": \"r37\", \"40\": \"r37\", \"41\": \"r37\", \"42\": \"r37\", \"43\": \"r37\", \"44\": \"r37\", \"45\": \"r37\", \"52\": \"r37\", \"53\": \"r37\", \"54\": \"r37\", \"55\": \"r37\", \"57\": \"r37\" }, { \"23\": \"r39\", \"24\": \"r39\", \"25\": \"r39\", \"26\": \"r39\", \"27\": \"r39\", \"28\": \"r39\", \"29\": \"r39\", \"30\": \"r39\", \"31\": \"r39\", \"32\": \"r39\", \"33\": \"r39\", \"34\": \"r39\", \"35\": \"r39\", \"36\": \"r39\", \"37\": \"r39\", \"38\": \"r39\", \"39\": \"r39\", \"40\": \"r39\", \"41\": \"r39\", \"42\": \"r39\", \"43\": \"r39\", \"44\": \"r39\", \"45\": \"r39\", \"46\": \"s56\", \"52\": \"r39\", \"53\": \"r39\", \"54\": \"r39\", \"55\": \"r39\", \"57\": \"r39\" }, { \"23\": \"r41\", \"24\": \"r41\", \"25\": \"r41\", \"26\": \"r41\", \"27\": \"r41\", \"28\": \"r41\", \"29\": \"r41\", \"30\": \"r41\", \"31\": \"r41\", \"32\": \"r41\", \"33\": \"r41\", \"34\": \"r41\", \"35\": \"r41\", \"36\": \"r41\", \"37\": \"r41\", \"38\": \"r41\", \"39\": \"r41\", \"40\": \"r41\", \"41\": \"r41\", \"42\": \"r41\", \"43\": \"r41\", \"44\": \"r41\", \"45\": \"r41\", \"46\": \"r41\", \"52\": \"r41\", \"53\": \"r41\", \"54\": \"r41\", \"55\": \"r41\", \"57\": \"r41\" }, { \"23\": \"r42\", \"24\": \"r42\", \"25\": \"r42\", \"26\": \"r42\", \"27\": \"r42\", \"28\": \"r42\", \"29\": \"r42\", \"30\": \"r42\", \"31\": \"r42\", \"32\": \"r42\", \"33\": \"r42\", \"34\": \"r42\", \"35\": \"r42\", \"36\": \"r42\", \"37\": \"r42\", \"38\": \"r42\", \"39\": \"r42\", \"40\": \"r42\", \"41\": \"r42\", \"42\": \"r42\", \"43\": \"r42\", \"44\": \"r42\", \"45\": \"r42\", \"46\": \"r42\", \"52\": \"r42\", \"53\": \"r42\", \"54\": \"r42\", \"55\": \"r42\", \"57\": \"r42\" }, { \"23\": \"r43\", \"24\": \"r43\", \"25\": \"r43\", \"26\": \"r43\", \"27\": \"r43\", \"28\": \"r43\", \"29\": \"r43\", \"30\": \"r43\", \"31\": \"r43\", \"32\": \"r43\", \"33\": \"r43\", \"34\": \"r43\", \"35\": \"r43\", \"36\": \"r43\", \"37\": \"r43\", \"38\": \"r43\", \"39\": \"r43\", \"40\": \"r43\", \"41\": \"r43\", \"42\": \"r43\", \"43\": \"r43\", \"44\": \"r43\", \"45\": \"r43\", \"46\": \"r43\", \"52\": \"r43\", \"53\": \"r43\", \"54\": \"r43\", \"55\": \"r43\", \"57\": \"r43\" }, { \"23\": \"r44\", \"24\": \"r44\", \"25\": \"r44\", \"26\": \"r44\", \"27\": \"r44\", \"28\": \"r44\", \"29\": \"r44\", \"30\": \"r44\", \"31\": \"r44\", \"32\": \"r44\", \"33\": \"r44\", \"34\": \"r44\", \"35\": \"r44\", \"36\": \"r44\", \"37\": \"r44\", \"38\": \"r44\", \"39\": \"r44\", \"40\": \"r44\", \"41\": \"r44\", \"42\": \"r44\", \"43\": \"r44\", \"44\": \"r44\", \"45\": \"r44\", \"46\": \"r44\", \"52\": \"r44\", \"53\": \"r44\", \"54\": \"r44\", \"55\": \"r44\", \"57\": \"r44\" }, { \"23\": \"r45\", \"24\": \"r45\", \"25\": \"r45\", \"26\": \"r45\", \"27\": \"r45\", \"28\": \"r45\", \"29\": \"r45\", \"30\": \"r45\", \"31\": \"r45\", \"32\": \"r45\", \"33\": \"r45\", \"34\": \"r45\", \"35\": \"r45\", \"36\": \"r45\", \"37\": \"r45\", \"38\": \"r45\", \"39\": \"r45\", \"40\": \"r45\", \"41\": \"r45\", \"42\": \"r45\", \"43\": \"r45\", \"44\": \"r45\", \"45\": \"r45\", \"46\": \"r45\", \"52\": \"r45\", \"53\": \"r45\", \"54\": \"r45\", \"55\": \"r45\", \"57\": \"r45\" }, { \"23\": \"r46\", \"24\": \"r46\", \"25\": \"r46\", \"26\": \"r46\", \"27\": \"r46\", \"28\": \"r46\", \"29\": \"r46\", \"30\": \"r46\", \"31\": \"r46\", \"32\": \"r46\", \"33\": \"r46\", \"34\": \"r46\", \"35\": \"r46\", \"36\": \"r46\", \"37\": \"r46\", \"38\": \"r46\", \"39\": \"r46\", \"40\": \"r46\", \"41\": \"r46\", \"42\": \"r46\", \"43\": \"r46\", \"44\": \"r46\", \"45\": \"r46\", \"46\": \"r46\", \"52\": \"r46\", \"53\": \"r46\", \"54\": \"r46\", \"55\": \"r46\", \"57\": \"r46\" }, { \"23\": \"r40\", \"24\": \"r40\", \"25\": \"r40\", \"26\": \"r40\", \"27\": \"r40\", \"28\": \"r40\", \"29\": \"r40\", \"30\": \"r40\", \"31\": \"r40\", \"32\": \"r40\", \"33\": \"r40\", \"34\": \"r40\", \"35\": \"r40\", \"36\": \"r40\", \"37\": \"r40\", \"38\": \"r40\", \"39\": \"r40\", \"40\": \"r40\", \"41\": \"r40\", \"42\": \"r40\", \"43\": \"r40\", \"44\": \"r40\", \"45\": \"r40\", \"52\": \"r40\", \"53\": \"r40\", \"54\": \"r40\", \"55\": \"r40\", \"57\": \"r40\" }, { \"25\": \"s12\", \"31\": \"s58\" }, { \"23\": \"r18\", \"24\": \"r18\", \"25\": \"r18\", \"26\": \"r18\", \"27\": \"r18\", \"28\": \"r18\", \"29\": \"r18\", \"30\": \"r18\", \"31\": \"r18\", \"32\": \"r18\", \"33\": \"r18\", \"34\": \"r18\", \"35\": \"r18\", \"36\": \"r18\", \"37\": \"r18\", \"38\": \"r18\", \"39\": \"r18\", \"40\": \"r18\", \"41\": \"r18\", \"42\": \"r18\", \"43\": \"r18\", \"44\": \"r18\", \"45\": \"r18\", \"52\": \"r18\", \"53\": \"r18\", \"54\": \"r18\", \"55\": \"r18\", \"57\": \"r18\" }, { \"25\": \"s12\", \"31\": \"s60\" }, { \"23\": \"r19\", \"24\": \"r19\", \"25\": \"r19\", \"26\": \"r19\", \"27\": \"r19\", \"28\": \"r19\", \"29\": \"r19\", \"30\": \"r19\", \"31\": \"r19\", \"32\": \"r19\", \"33\": \"r19\", \"34\": \"r19\", \"35\": \"r19\", \"36\": \"r19\", \"37\": \"r19\", \"38\": \"r19\", \"39\": \"r19\", \"40\": \"r19\", \"41\": \"r19\", \"42\": \"r19\", \"43\": \"r19\", \"44\": \"r19\", \"45\": \"r19\", \"52\": \"r19\", \"53\": \"r19\", \"54\": \"r19\", \"55\": \"r19\", \"57\": \"r19\" }, { \"25\": \"s12\", \"31\": \"s62\" }, { \"23\": \"r20\", \"24\": \"r20\", \"25\": \"r20\", \"26\": \"r20\", \"27\": \"r20\", \"28\": \"r20\", \"29\": \"r20\", \"30\": \"r20\", \"31\": \"r20\", \"32\": \"r20\", \"33\": \"r20\", \"34\": \"r20\", \"35\": \"r20\", \"36\": \"r20\", \"37\": \"r20\", \"38\": \"r20\", \"39\": \"r20\", \"40\": \"r20\", \"41\": \"r20\", \"42\": \"r20\", \"43\": \"r20\", \"44\": \"r20\", \"45\": \"r20\", \"52\": \"r20\", \"53\": \"r20\", \"54\": \"r20\", \"55\": \"r20\", \"57\": \"r20\" }, { \"25\": \"s12\", \"31\": \"s64\" }, { \"23\": \"r21\", \"24\": \"r21\", \"25\": \"r21\", \"26\": \"r21\", \"27\": \"r21\", \"28\": \"r21\", \"29\": \"r21\", \"30\": \"r21\", \"31\": \"r21\", \"32\": \"r21\", \"33\": \"r21\", \"34\": \"r21\", \"35\": \"r21\", \"36\": \"r21\", \"37\": \"r21\", \"38\": \"r21\", \"39\": \"r21\", \"40\": \"r21\", \"41\": \"r21\", \"42\": \"r21\", \"43\": \"r21\", \"44\": \"r21\", \"45\": \"r21\", \"52\": \"r21\", \"53\": \"r21\", \"54\": \"r21\", \"55\": \"r21\", \"57\": \"r21\" }, { \"56\": \"s72\" }, { \"56\": \"r55\" }, { \"10\": 70, \"20\": 73, \"21\": 75, \"22\": 76, \"24\": \"s28\", \"28\": \"s71\", \"35\": \"s29\", \"36\": \"s30\", \"37\": \"s31\", \"38\": \"s32\", \"39\": \"s33\", \"40\": \"s34\", \"41\": \"s35\", \"42\": \"s36\", \"43\": \"s37\", \"44\": \"s38\", \"45\": \"s39\", \"56\": \"r56\", \"58\": \"s74\" }, { \"24\": \"r62\", \"28\": \"r62\", \"35\": \"r62\", \"36\": \"r62\", \"37\": \"r62\", \"38\": \"r62\", \"39\": \"r62\", \"40\": \"r62\", \"41\": \"r62\", \"42\": \"r62\", \"43\": \"r62\", \"44\": \"r62\", \"45\": \"r62\", \"56\": \"r62\", \"58\": \"r62\" }, { \"24\": \"r63\", \"28\": \"r63\", \"35\": \"r63\", \"36\": \"r63\", \"37\": \"r63\", \"38\": \"r63\", \"39\": \"r63\", \"40\": \"r63\", \"41\": \"r63\", \"42\": \"r63\", \"43\": \"r63\", \"44\": \"r63\", \"45\": \"r63\", \"56\": \"r63\", \"58\": \"r63\" }, { \"24\": \"r64\", \"28\": \"r64\", \"35\": \"r64\", \"36\": \"r64\", \"37\": \"r64\", \"38\": \"r64\", \"39\": \"r64\", \"40\": \"r64\", \"41\": \"r64\", \"42\": \"r64\", \"43\": \"r64\", \"44\": \"r64\", \"45\": \"r64\", \"56\": \"r64\", \"58\": \"r64\" }, { \"24\": \"r65\", \"28\": \"r65\", \"35\": \"r65\", \"36\": \"r65\", \"37\": \"r65\", \"38\": \"r65\", \"39\": \"r65\", \"40\": \"r65\", \"41\": \"r65\", \"42\": \"r65\", \"43\": \"r65\", \"44\": \"r65\", \"45\": \"r65\", \"56\": \"r65\", \"58\": \"r65\" }, { \"23\": \"r52\", \"24\": \"r52\", \"25\": \"r52\", \"26\": \"r52\", \"27\": \"r52\", \"28\": \"r52\", \"29\": \"r52\", \"30\": \"r52\", \"31\": \"r52\", \"32\": \"r52\", \"33\": \"r52\", \"34\": \"r52\", \"35\": \"r52\", \"36\": \"r52\", \"37\": \"r52\", \"38\": \"r52\", \"39\": \"r52\", \"40\": \"r52\", \"41\": \"r52\", \"42\": \"r52\", \"43\": \"r52\", \"44\": \"r52\", \"45\": \"r52\", \"46\": \"r52\", \"47\": \"r52\", \"48\": \"r52\", \"49\": \"r52\", \"50\": \"r52\", \"51\": \"r52\", \"52\": \"r52\", \"53\": \"r52\", \"54\": \"r52\", \"55\": \"r52\", \"57\": \"r52\" }, { \"56\": \"r57\" }, { \"10\": 70, \"21\": 77, \"22\": 69, \"24\": \"s28\", \"28\": \"s71\", \"35\": \"s29\", \"36\": \"s30\", \"37\": \"s31\", \"38\": \"s32\", \"39\": \"s33\", \"40\": \"s34\", \"41\": \"s35\", \"42\": \"s36\", \"43\": \"s37\", \"44\": \"s38\", \"45\": \"s39\", \"56\": \"r62\", \"58\": \"s68\" }, { \"56\": \"r59\" }, { \"10\": 70, \"20\": 79, \"21\": 75, \"22\": 76, \"24\": \"s28\", \"28\": \"s71\", \"35\": \"s29\", \"36\": \"s30\", \"37\": \"s31\", \"38\": \"s32\", \"39\": \"s33\", \"40\": \"s34\", \"41\": \"s35\", \"42\": \"s36\", \"43\": \"s37\", \"44\": \"s38\", \"45\": \"s39\", \"56\": \"r63\", \"58\": \"s80\" }, { \"10\": 70, \"18\": 78, \"19\": 66, \"21\": 67, \"22\": 69, \"24\": \"s28\", \"28\": \"s71\", \"35\": \"s29\", \"36\": \"s30\", \"37\": \"s31\", \"38\": \"s32\", \"39\": \"s33\", \"40\": \"s34\", \"41\": \"s35\", \"42\": \"s36\", \"43\": \"s37\", \"44\": \"s38\", \"45\": \"s39\", \"56\": \"r54\", \"58\": \"s68\" }, { \"56\": \"r58\" }, { \"56\": \"r60\" }, { \"10\": 70, \"21\": 81, \"22\": 69, \"24\": \"s28\", \"28\": \"s71\", \"35\": \"s29\", \"36\": \"s30\", \"37\": \"s31\", \"38\": \"s32\", \"39\": \"s33\", \"40\": \"s34\", \"41\": \"s35\", \"42\": \"s36\", \"43\": \"s37\", \"44\": \"s38\", \"45\": \"s39\", \"56\": \"r62\", \"58\": \"s68\" }, { \"10\": 70, \"18\": 82, \"19\": 66, \"21\": 67, \"22\": 69, \"24\": \"s28\", \"28\": \"s71\", \"35\": \"s29\", \"36\": \"s30\", \"37\": \"s31\", \"38\": \"s32\", \"39\": \"s33\", \"40\": \"s34\", \"41\": \"s35\", \"42\": \"s36\", \"43\": \"s37\", \"44\": \"s38\", \"45\": \"s39\", \"56\": \"r54\", \"58\": \"s68\" }, { \"56\": \"r61\" }, { \"56\": \"s84\" }, { \"23\": \"r53\", \"24\": \"r53\", \"25\": \"r53\", \"26\": \"r53\", \"27\": \"r53\", \"28\": \"r53\", \"29\": \"r53\", \"30\": \"r53\", \"31\": \"r53\", \"32\": \"r53\", \"33\": \"r53\", \"34\": \"r53\", \"35\": \"r53\", \"36\": \"r53\", \"37\": \"r53\", \"38\": \"r53\", \"39\": \"r53\", \"40\": \"r53\", \"41\": \"r53\", \"42\": \"r53\", \"43\": \"r53\", \"44\": \"r53\", \"45\": \"r53\", \"46\": \"r53\", \"47\": \"r53\", \"48\": \"r53\", \"49\": \"r53\", \"50\": \"r53\", \"51\": \"r53\", \"52\": \"r53\", \"53\": \"r53\", \"54\": \"r53\", \"55\": \"r53\", \"57\": \"r53\" }, { \"25\": \"s12\", \"31\": \"s86\" }, { \"23\": \"r49\", \"24\": \"r49\", \"25\": \"r49\", \"26\": \"r49\", \"27\": \"r49\", \"28\": \"r49\", \"29\": \"r49\", \"30\": \"r49\", \"31\": \"r49\", \"32\": \"r49\", \"33\": \"r49\", \"34\": \"r49\", \"35\": \"r49\", \"36\": \"r49\", \"37\": \"r49\", \"38\": \"r49\", \"39\": \"r49\", \"40\": \"r49\", \"41\": \"r49\", \"42\": \"r49\", \"43\": \"r49\", \"44\": \"r49\", \"45\": \"r49\", \"46\": \"r49\", \"47\": \"r49\", \"48\": \"r49\", \"49\": \"r49\", \"50\": \"r49\", \"51\": \"r49\", \"52\": \"r49\", \"53\": \"r49\", \"54\": \"r49\", \"55\": \"r49\", \"57\": \"r49\" }, { \"25\": \"s12\", \"31\": \"s88\" }, { \"23\": \"r50\", \"24\": \"r50\", \"25\": \"r50\", \"26\": \"r50\", \"27\": \"r50\", \"28\": \"r50\", \"29\": \"r50\", \"30\": \"r50\", \"31\": \"r50\", \"32\": \"r50\", \"33\": \"r50\", \"34\": \"r50\", \"35\": \"r50\", \"36\": \"r50\", \"37\": \"r50\", \"38\": \"r50\", \"39\": \"r50\", \"40\": \"r50\", \"41\": \"r50\", \"42\": \"r50\", \"43\": \"r50\", \"44\": \"r50\", \"45\": \"r50\", \"46\": \"r50\", \"47\": \"r50\", \"48\": \"r50\", \"49\": \"r50\", \"50\": \"r50\", \"51\": \"r50\", \"52\": \"r50\", \"53\": \"r50\", \"54\": \"r50\", \"55\": \"r50\", \"57\": \"r50\" }, { \"25\": \"s12\", \"31\": \"s90\" }, { \"23\": \"r51\", \"24\": \"r51\", \"25\": \"r51\", \"26\": \"r51\", \"27\": \"r51\", \"28\": \"r51\", \"29\": \"r51\", \"30\": \"r51\", \"31\": \"r51\", \"32\": \"r51\", \"33\": \"r51\", \"34\": \"r51\", \"35\": \"r51\", \"36\": \"r51\", \"37\": \"r51\", \"38\": \"r51\", \"39\": \"r51\", \"40\": \"r51\", \"41\": \"r51\", \"42\": \"r51\", \"43\": \"r51\", \"44\": \"r51\", \"45\": \"r51\", \"46\": \"r51\", \"47\": \"r51\", \"48\": \"r51\", \"49\": \"r51\", \"50\": \"r51\", \"51\": \"r51\", \"52\": \"r51\", \"53\": \"r51\", \"54\": \"r51\", \"55\": \"r51\", \"57\": \"r51\" }];\n\n/**\n * Parsing stack.\n */\nvar stack = [];\n\n/**\n * Tokenizer instance.\n */\nvar tokenizer = void 0;\n/**\n * Generic tokenizer used by the parser in the Syntax tool.\n *\n * https://www.npmjs.com/package/syntax-cli\n *\n * See `--custom-tokinzer` to skip this generation, and use a custom one.\n */\n\nvar lexRules = [[/^#[^\\n]+/, function () {/* skip comments */}], [/^\\s+/, function () {/* skip whitespace */}], [/^-/, function () {\n  return 'DASH';\n}], [/^\\//, function () {\n  return 'CHAR';\n}], [/^#/, function () {\n  return 'CHAR';\n}], [/^\\|/, function () {\n  return 'CHAR';\n}], [/^\\./, function () {\n  return 'CHAR';\n}], [/^\\{/, function () {\n  return 'CHAR';\n}], [/^\\{\\d+\\}/, function () {\n  return 'RANGE_EXACT';\n}], [/^\\{\\d+,\\}/, function () {\n  return 'RANGE_OPEN';\n}], [/^\\{\\d+,\\d+\\}/, function () {\n  return 'RANGE_CLOSED';\n}], [/^\\\\k<(([\\u0041-\\u005a\\u0061-\\u007a\\u00aa\\u00b5\\u00ba\\u00c0-\\u00d6\\u00d8-\\u00f6\\u00f8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376-\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e-\\u066f\\u0671-\\u06d3\\u06d5\\u06e5-\\u06e6\\u06ee-\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4-\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc-\\u09dd\\u09df-\\u09e1\\u09f0-\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0-\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c-\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60-\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0-\\u0ce1\\u0cf1-\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32-\\u0e33\\u0e40-\\u0e46\\u0e81-\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2-\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065-\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae-\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5-\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a-\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7c6\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd-\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5-\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab67\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]|\\ud800[\\udc00-\\udc0b\\udc0d-\\udc26\\udc28-\\udc3a\\udc3c-\\udc3d\\udc3f-\\udc4d\\udc50-\\udc5d\\udc80-\\udcfa\\udd40-\\udd74\\ude80-\\ude9c\\udea0-\\uded0\\udf00-\\udf1f\\udf2d-\\udf4a\\udf50-\\udf75\\udf80-\\udf9d\\udfa0-\\udfc3\\udfc8-\\udfcf\\udfd1-\\udfd5]|\\ud801[\\udc00-\\udc9d\\udcb0-\\udcd3\\udcd8-\\udcfb\\udd00-\\udd27\\udd30-\\udd63\\ude00-\\udf36\\udf40-\\udf55\\udf60-\\udf67]|\\ud802[\\udc00-\\udc05\\udc08\\udc0a-\\udc35\\udc37-\\udc38\\udc3c\\udc3f-\\udc55\\udc60-\\udc76\\udc80-\\udc9e\\udce0-\\udcf2\\udcf4-\\udcf5\\udd00-\\udd15\\udd20-\\udd39\\udd80-\\uddb7\\uddbe-\\uddbf\\ude00\\ude10-\\ude13\\ude15-\\ude17\\ude19-\\ude35\\ude60-\\ude7c\\ude80-\\ude9c\\udec0-\\udec7\\udec9-\\udee4\\udf00-\\udf35\\udf40-\\udf55\\udf60-\\udf72\\udf80-\\udf91]|\\ud803[\\udc00-\\udc48\\udc80-\\udcb2\\udcc0-\\udcf2\\udd00-\\udd23\\udf00-\\udf1c\\udf27\\udf30-\\udf45\\udfe0-\\udff6]|\\ud804[\\udc03-\\udc37\\udc83-\\udcaf\\udcd0-\\udce8\\udd03-\\udd26\\udd44\\udd50-\\udd72\\udd76\\udd83-\\uddb2\\uddc1-\\uddc4\\uddda\\udddc\\ude00-\\ude11\\ude13-\\ude2b\\ude80-\\ude86\\ude88\\ude8a-\\ude8d\\ude8f-\\ude9d\\ude9f-\\udea8\\udeb0-\\udede\\udf05-\\udf0c\\udf0f-\\udf10\\udf13-\\udf28\\udf2a-\\udf30\\udf32-\\udf33\\udf35-\\udf39\\udf3d\\udf50\\udf5d-\\udf61]|\\ud805[\\udc00-\\udc34\\udc47-\\udc4a\\udc5f\\udc80-\\udcaf\\udcc4-\\udcc5\\udcc7\\udd80-\\uddae\\uddd8-\\udddb\\ude00-\\ude2f\\ude44\\ude80-\\udeaa\\udeb8\\udf00-\\udf1a]|\\ud806[\\udc00-\\udc2b\\udca0-\\udcdf\\udcff\\udda0-\\udda7\\uddaa-\\uddd0\\udde1\\udde3\\ude00\\ude0b-\\ude32\\ude3a\\ude50\\ude5c-\\ude89\\ude9d\\udec0-\\udef8]|\\ud807[\\udc00-\\udc08\\udc0a-\\udc2e\\udc40\\udc72-\\udc8f\\udd00-\\udd06\\udd08-\\udd09\\udd0b-\\udd30\\udd46\\udd60-\\udd65\\udd67-\\udd68\\udd6a-\\udd89\\udd98\\udee0-\\udef2]|\\ud808[\\udc00-\\udf99]|\\ud809[\\udc00-\\udc6e\\udc80-\\udd43]|\\ud80c[\\udc00-\\udfff]|\\ud80d[\\udc00-\\udc2e]|\\ud811[\\udc00-\\ude46]|\\ud81a[\\udc00-\\ude38\\ude40-\\ude5e\\uded0-\\udeed\\udf00-\\udf2f\\udf40-\\udf43\\udf63-\\udf77\\udf7d-\\udf8f]|\\ud81b[\\ude40-\\ude7f\\udf00-\\udf4a\\udf50\\udf93-\\udf9f\\udfe0-\\udfe1\\udfe3]|\\ud81c[\\udc00-\\udfff]|\\ud81d[\\udc00-\\udfff]|\\ud81e[\\udc00-\\udfff]|\\ud81f[\\udc00-\\udfff]|\\ud820[\\udc00-\\udfff]|\\ud821[\\udc00-\\udff7]|\\ud822[\\udc00-\\udef2]|\\ud82c[\\udc00-\\udd1e\\udd50-\\udd52\\udd64-\\udd67\\udd70-\\udefb]|\\ud82f[\\udc00-\\udc6a\\udc70-\\udc7c\\udc80-\\udc88\\udc90-\\udc99]|\\ud835[\\udc00-\\udc54\\udc56-\\udc9c\\udc9e-\\udc9f\\udca2\\udca5-\\udca6\\udca9-\\udcac\\udcae-\\udcb9\\udcbb\\udcbd-\\udcc3\\udcc5-\\udd05\\udd07-\\udd0a\\udd0d-\\udd14\\udd16-\\udd1c\\udd1e-\\udd39\\udd3b-\\udd3e\\udd40-\\udd44\\udd46\\udd4a-\\udd50\\udd52-\\udea5\\udea8-\\udec0\\udec2-\\udeda\\udedc-\\udefa\\udefc-\\udf14\\udf16-\\udf34\\udf36-\\udf4e\\udf50-\\udf6e\\udf70-\\udf88\\udf8a-\\udfa8\\udfaa-\\udfc2\\udfc4-\\udfcb]|\\ud838[\\udd00-\\udd2c\\udd37-\\udd3d\\udd4e\\udec0-\\udeeb]|\\ud83a[\\udc00-\\udcc4\\udd00-\\udd43\\udd4b]|\\ud83b[\\ude00-\\ude03\\ude05-\\ude1f\\ude21-\\ude22\\ude24\\ude27\\ude29-\\ude32\\ude34-\\ude37\\ude39\\ude3b\\ude42\\ude47\\ude49\\ude4b\\ude4d-\\ude4f\\ude51-\\ude52\\ude54\\ude57\\ude59\\ude5b\\ude5d\\ude5f\\ude61-\\ude62\\ude64\\ude67-\\ude6a\\ude6c-\\ude72\\ude74-\\ude77\\ude79-\\ude7c\\ude7e\\ude80-\\ude89\\ude8b-\\ude9b\\udea1-\\udea3\\udea5-\\udea9\\udeab-\\udebb]|\\ud840[\\udc00-\\udfff]|\\ud841[\\udc00-\\udfff]|\\ud842[\\udc00-\\udfff]|\\ud843[\\udc00-\\udfff]|\\ud844[\\udc00-\\udfff]|\\ud845[\\udc00-\\udfff]|\\ud846[\\udc00-\\udfff]|\\ud847[\\udc00-\\udfff]|\\ud848[\\udc00-\\udfff]|\\ud849[\\udc00-\\udfff]|\\ud84a[\\udc00-\\udfff]|\\ud84b[\\udc00-\\udfff]|\\ud84c[\\udc00-\\udfff]|\\ud84d[\\udc00-\\udfff]|\\ud84e[\\udc00-\\udfff]|\\ud84f[\\udc00-\\udfff]|\\ud850[\\udc00-\\udfff]|\\ud851[\\udc00-\\udfff]|\\ud852[\\udc00-\\udfff]|\\ud853[\\udc00-\\udfff]|\\ud854[\\udc00-\\udfff]|\\ud855[\\udc00-\\udfff]|\\ud856[\\udc00-\\udfff]|\\ud857[\\udc00-\\udfff]|\\ud858[\\udc00-\\udfff]|\\ud859[\\udc00-\\udfff]|\\ud85a[\\udc00-\\udfff]|\\ud85b[\\udc00-\\udfff]|\\ud85c[\\udc00-\\udfff]|\\ud85d[\\udc00-\\udfff]|\\ud85e[\\udc00-\\udfff]|\\ud85f[\\udc00-\\udfff]|\\ud860[\\udc00-\\udfff]|\\ud861[\\udc00-\\udfff]|\\ud862[\\udc00-\\udfff]|\\ud863[\\udc00-\\udfff]|\\ud864[\\udc00-\\udfff]|\\ud865[\\udc00-\\udfff]|\\ud866[\\udc00-\\udfff]|\\ud867[\\udc00-\\udfff]|\\ud868[\\udc00-\\udfff]|\\ud869[\\udc00-\\uded6\\udf00-\\udfff]|\\ud86a[\\udc00-\\udfff]|\\ud86b[\\udc00-\\udfff]|\\ud86c[\\udc00-\\udfff]|\\ud86d[\\udc00-\\udf34\\udf40-\\udfff]|\\ud86e[\\udc00-\\udc1d\\udc20-\\udfff]|\\ud86f[\\udc00-\\udfff]|\\ud870[\\udc00-\\udfff]|\\ud871[\\udc00-\\udfff]|\\ud872[\\udc00-\\udfff]|\\ud873[\\udc00-\\udea1\\udeb0-\\udfff]|\\ud874[\\udc00-\\udfff]|\\ud875[\\udc00-\\udfff]|\\ud876[\\udc00-\\udfff]|\\ud877[\\udc00-\\udfff]|\\ud878[\\udc00-\\udfff]|\\ud879[\\udc00-\\udfff]|\\ud87a[\\udc00-\\udfe0]|\\ud87e[\\udc00-\\ude1d])|[$_]|(\\\\u[0-9a-fA-F]{4}|\\\\u\\{[0-9a-fA-F]{1,}\\}))(([\\u0030-\\u0039\\u0041-\\u005a\\u005f\\u0061-\\u007a\\u00aa\\u00b5\\u00b7\\u00ba\\u00c0-\\u00d6\\u00d8-\\u00f6\\u00f8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0300-\\u0374\\u0376-\\u0377\\u037a-\\u037d\\u037f\\u0386-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u0483-\\u0487\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u0591-\\u05bd\\u05bf\\u05c1-\\u05c2\\u05c4-\\u05c5\\u05c7\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0610-\\u061a\\u0620-\\u0669\\u066e-\\u06d3\\u06d5-\\u06dc\\u06df-\\u06e8\\u06ea-\\u06fc\\u06ff\\u0710-\\u074a\\u074d-\\u07b1\\u07c0-\\u07f5\\u07fa\\u07fd\\u0800-\\u082d\\u0840-\\u085b\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u08d3-\\u08e1\\u08e3-\\u0963\\u0966-\\u096f\\u0971-\\u0983\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bc-\\u09c4\\u09c7-\\u09c8\\u09cb-\\u09ce\\u09d7\\u09dc-\\u09dd\\u09df-\\u09e3\\u09e6-\\u09f1\\u09fc\\u09fe\\u0a01-\\u0a03\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a3c\\u0a3e-\\u0a42\\u0a47-\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a59-\\u0a5c\\u0a5e\\u0a66-\\u0a75\\u0a81-\\u0a83\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abc-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ad0\\u0ae0-\\u0ae3\\u0ae6-\\u0aef\\u0af9-\\u0aff\\u0b01-\\u0b03\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3c-\\u0b44\\u0b47-\\u0b48\\u0b4b-\\u0b4d\\u0b56-\\u0b57\\u0b5c-\\u0b5d\\u0b5f-\\u0b63\\u0b66-\\u0b6f\\u0b71\\u0b82-\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd0\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55-\\u0c56\\u0c58-\\u0c5a\\u0c60-\\u0c63\\u0c66-\\u0c6f\\u0c80-\\u0c83\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbc-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5-\\u0cd6\\u0cde\\u0ce0-\\u0ce3\\u0ce6-\\u0cef\\u0cf1-\\u0cf2\\u0d00-\\u0d03\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4e\\u0d54-\\u0d57\\u0d5f-\\u0d63\\u0d66-\\u0d6f\\u0d7a-\\u0d7f\\u0d82-\\u0d83\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2-\\u0df3\\u0e01-\\u0e3a\\u0e40-\\u0e4e\\u0e50-\\u0e59\\u0e81-\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0edc-\\u0edf\\u0f00\\u0f18-\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e-\\u0f47\\u0f49-\\u0f6c\\u0f71-\\u0f84\\u0f86-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1049\\u1050-\\u109d\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u135d-\\u135f\\u1369-\\u1371\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176c\\u176e-\\u1770\\u1772-\\u1773\\u1780-\\u17d3\\u17d7\\u17dc-\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u19d0-\\u19da\\u1a00-\\u1a1b\\u1a20-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1aa7\\u1ab0-\\u1abd\\u1b00-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1bf3\\u1c00-\\u1c37\\u1c40-\\u1c49\\u1c4d-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1cd0-\\u1cd2\\u1cd4-\\u1cfa\\u1d00-\\u1df9\\u1dfb-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u203f-\\u2040\\u2054\\u2071\\u207f\\u2090-\\u209c\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d7f-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2de0-\\u2dff\\u3005-\\u3007\\u3021-\\u302f\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u3099-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua62b\\ua640-\\ua66f\\ua674-\\ua67d\\ua67f-\\ua6f1\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7c6\\ua7f7-\\ua827\\ua840-\\ua873\\ua880-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f7\\ua8fb\\ua8fd-\\ua92d\\ua930-\\ua953\\ua960-\\ua97c\\ua980-\\ua9c0\\ua9cf-\\ua9d9\\ua9e0-\\ua9fe\\uaa00-\\uaa36\\uaa40-\\uaa4d\\uaa50-\\uaa59\\uaa60-\\uaa76\\uaa7a-\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaef\\uaaf2-\\uaaf6\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab67\\uab70-\\uabea\\uabec-\\uabed\\uabf0-\\uabf9\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33-\\ufe34\\ufe4d-\\ufe4f\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff10-\\uff19\\uff21-\\uff3a\\uff3f\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]|\\ud800[\\udc00-\\udc0b\\udc0d-\\udc26\\udc28-\\udc3a\\udc3c-\\udc3d\\udc3f-\\udc4d\\udc50-\\udc5d\\udc80-\\udcfa\\udd40-\\udd74\\uddfd\\ude80-\\ude9c\\udea0-\\uded0\\udee0\\udf00-\\udf1f\\udf2d-\\udf4a\\udf50-\\udf7a\\udf80-\\udf9d\\udfa0-\\udfc3\\udfc8-\\udfcf\\udfd1-\\udfd5]|\\ud801[\\udc00-\\udc9d\\udca0-\\udca9\\udcb0-\\udcd3\\udcd8-\\udcfb\\udd00-\\udd27\\udd30-\\udd63\\ude00-\\udf36\\udf40-\\udf55\\udf60-\\udf67]|\\ud802[\\udc00-\\udc05\\udc08\\udc0a-\\udc35\\udc37-\\udc38\\udc3c\\udc3f-\\udc55\\udc60-\\udc76\\udc80-\\udc9e\\udce0-\\udcf2\\udcf4-\\udcf5\\udd00-\\udd15\\udd20-\\udd39\\udd80-\\uddb7\\uddbe-\\uddbf\\ude00-\\ude03\\ude05-\\ude06\\ude0c-\\ude13\\ude15-\\ude17\\ude19-\\ude35\\ude38-\\ude3a\\ude3f\\ude60-\\ude7c\\ude80-\\ude9c\\udec0-\\udec7\\udec9-\\udee6\\udf00-\\udf35\\udf40-\\udf55\\udf60-\\udf72\\udf80-\\udf91]|\\ud803[\\udc00-\\udc48\\udc80-\\udcb2\\udcc0-\\udcf2\\udd00-\\udd27\\udd30-\\udd39\\udf00-\\udf1c\\udf27\\udf30-\\udf50\\udfe0-\\udff6]|\\ud804[\\udc00-\\udc46\\udc66-\\udc6f\\udc7f-\\udcba\\udcd0-\\udce8\\udcf0-\\udcf9\\udd00-\\udd34\\udd36-\\udd3f\\udd44-\\udd46\\udd50-\\udd73\\udd76\\udd80-\\uddc4\\uddc9-\\uddcc\\uddd0-\\uddda\\udddc\\ude00-\\ude11\\ude13-\\ude37\\ude3e\\ude80-\\ude86\\ude88\\ude8a-\\ude8d\\ude8f-\\ude9d\\ude9f-\\udea8\\udeb0-\\udeea\\udef0-\\udef9\\udf00-\\udf03\\udf05-\\udf0c\\udf0f-\\udf10\\udf13-\\udf28\\udf2a-\\udf30\\udf32-\\udf33\\udf35-\\udf39\\udf3b-\\udf44\\udf47-\\udf48\\udf4b-\\udf4d\\udf50\\udf57\\udf5d-\\udf63\\udf66-\\udf6c\\udf70-\\udf74]|\\ud805[\\udc00-\\udc4a\\udc50-\\udc59\\udc5e-\\udc5f\\udc80-\\udcc5\\udcc7\\udcd0-\\udcd9\\udd80-\\uddb5\\uddb8-\\uddc0\\uddd8-\\udddd\\ude00-\\ude40\\ude44\\ude50-\\ude59\\ude80-\\udeb8\\udec0-\\udec9\\udf00-\\udf1a\\udf1d-\\udf2b\\udf30-\\udf39]|\\ud806[\\udc00-\\udc3a\\udca0-\\udce9\\udcff\\udda0-\\udda7\\uddaa-\\uddd7\\uddda-\\udde1\\udde3-\\udde4\\ude00-\\ude3e\\ude47\\ude50-\\ude99\\ude9d\\udec0-\\udef8]|\\ud807[\\udc00-\\udc08\\udc0a-\\udc36\\udc38-\\udc40\\udc50-\\udc59\\udc72-\\udc8f\\udc92-\\udca7\\udca9-\\udcb6\\udd00-\\udd06\\udd08-\\udd09\\udd0b-\\udd36\\udd3a\\udd3c-\\udd3d\\udd3f-\\udd47\\udd50-\\udd59\\udd60-\\udd65\\udd67-\\udd68\\udd6a-\\udd8e\\udd90-\\udd91\\udd93-\\udd98\\udda0-\\udda9\\udee0-\\udef6]|\\ud808[\\udc00-\\udf99]|\\ud809[\\udc00-\\udc6e\\udc80-\\udd43]|\\ud80c[\\udc00-\\udfff]|\\ud80d[\\udc00-\\udc2e]|\\ud811[\\udc00-\\ude46]|\\ud81a[\\udc00-\\ude38\\ude40-\\ude5e\\ude60-\\ude69\\uded0-\\udeed\\udef0-\\udef4\\udf00-\\udf36\\udf40-\\udf43\\udf50-\\udf59\\udf63-\\udf77\\udf7d-\\udf8f]|\\ud81b[\\ude40-\\ude7f\\udf00-\\udf4a\\udf4f-\\udf87\\udf8f-\\udf9f\\udfe0-\\udfe1\\udfe3]|\\ud81c[\\udc00-\\udfff]|\\ud81d[\\udc00-\\udfff]|\\ud81e[\\udc00-\\udfff]|\\ud81f[\\udc00-\\udfff]|\\ud820[\\udc00-\\udfff]|\\ud821[\\udc00-\\udff7]|\\ud822[\\udc00-\\udef2]|\\ud82c[\\udc00-\\udd1e\\udd50-\\udd52\\udd64-\\udd67\\udd70-\\udefb]|\\ud82f[\\udc00-\\udc6a\\udc70-\\udc7c\\udc80-\\udc88\\udc90-\\udc99\\udc9d-\\udc9e]|\\ud834[\\udd65-\\udd69\\udd6d-\\udd72\\udd7b-\\udd82\\udd85-\\udd8b\\uddaa-\\uddad\\ude42-\\ude44]|\\ud835[\\udc00-\\udc54\\udc56-\\udc9c\\udc9e-\\udc9f\\udca2\\udca5-\\udca6\\udca9-\\udcac\\udcae-\\udcb9\\udcbb\\udcbd-\\udcc3\\udcc5-\\udd05\\udd07-\\udd0a\\udd0d-\\udd14\\udd16-\\udd1c\\udd1e-\\udd39\\udd3b-\\udd3e\\udd40-\\udd44\\udd46\\udd4a-\\udd50\\udd52-\\udea5\\udea8-\\udec0\\udec2-\\udeda\\udedc-\\udefa\\udefc-\\udf14\\udf16-\\udf34\\udf36-\\udf4e\\udf50-\\udf6e\\udf70-\\udf88\\udf8a-\\udfa8\\udfaa-\\udfc2\\udfc4-\\udfcb\\udfce-\\udfff]|\\ud836[\\ude00-\\ude36\\ude3b-\\ude6c\\ude75\\ude84\\ude9b-\\ude9f\\udea1-\\udeaf]|\\ud838[\\udc00-\\udc06\\udc08-\\udc18\\udc1b-\\udc21\\udc23-\\udc24\\udc26-\\udc2a\\udd00-\\udd2c\\udd30-\\udd3d\\udd40-\\udd49\\udd4e\\udec0-\\udef9]|\\ud83a[\\udc00-\\udcc4\\udcd0-\\udcd6\\udd00-\\udd4b\\udd50-\\udd59]|\\ud83b[\\ude00-\\ude03\\ude05-\\ude1f\\ude21-\\ude22\\ude24\\ude27\\ude29-\\ude32\\ude34-\\ude37\\ude39\\ude3b\\ude42\\ude47\\ude49\\ude4b\\ude4d-\\ude4f\\ude51-\\ude52\\ude54\\ude57\\ude59\\ude5b\\ude5d\\ude5f\\ude61-\\ude62\\ude64\\ude67-\\ude6a\\ude6c-\\ude72\\ude74-\\ude77\\ude79-\\ude7c\\ude7e\\ude80-\\ude89\\ude8b-\\ude9b\\udea1-\\udea3\\udea5-\\udea9\\udeab-\\udebb]|\\ud840[\\udc00-\\udfff]|\\ud841[\\udc00-\\udfff]|\\ud842[\\udc00-\\udfff]|\\ud843[\\udc00-\\udfff]|\\ud844[\\udc00-\\udfff]|\\ud845[\\udc00-\\udfff]|\\ud846[\\udc00-\\udfff]|\\ud847[\\udc00-\\udfff]|\\ud848[\\udc00-\\udfff]|\\ud849[\\udc00-\\udfff]|\\ud84a[\\udc00-\\udfff]|\\ud84b[\\udc00-\\udfff]|\\ud84c[\\udc00-\\udfff]|\\ud84d[\\udc00-\\udfff]|\\ud84e[\\udc00-\\udfff]|\\ud84f[\\udc00-\\udfff]|\\ud850[\\udc00-\\udfff]|\\ud851[\\udc00-\\udfff]|\\ud852[\\udc00-\\udfff]|\\ud853[\\udc00-\\udfff]|\\ud854[\\udc00-\\udfff]|\\ud855[\\udc00-\\udfff]|\\ud856[\\udc00-\\udfff]|\\ud857[\\udc00-\\udfff]|\\ud858[\\udc00-\\udfff]|\\ud859[\\udc00-\\udfff]|\\ud85a[\\udc00-\\udfff]|\\ud85b[\\udc00-\\udfff]|\\ud85c[\\udc00-\\udfff]|\\ud85d[\\udc00-\\udfff]|\\ud85e[\\udc00-\\udfff]|\\ud85f[\\udc00-\\udfff]|\\ud860[\\udc00-\\udfff]|\\ud861[\\udc00-\\udfff]|\\ud862[\\udc00-\\udfff]|\\ud863[\\udc00-\\udfff]|\\ud864[\\udc00-\\udfff]|\\ud865[\\udc00-\\udfff]|\\ud866[\\udc00-\\udfff]|\\ud867[\\udc00-\\udfff]|\\ud868[\\udc00-\\udfff]|\\ud869[\\udc00-\\uded6\\udf00-\\udfff]|\\ud86a[\\udc00-\\udfff]|\\ud86b[\\udc00-\\udfff]|\\ud86c[\\udc00-\\udfff]|\\ud86d[\\udc00-\\udf34\\udf40-\\udfff]|\\ud86e[\\udc00-\\udc1d\\udc20-\\udfff]|\\ud86f[\\udc00-\\udfff]|\\ud870[\\udc00-\\udfff]|\\ud871[\\udc00-\\udfff]|\\ud872[\\udc00-\\udfff]|\\ud873[\\udc00-\\udea1\\udeb0-\\udfff]|\\ud874[\\udc00-\\udfff]|\\ud875[\\udc00-\\udfff]|\\ud876[\\udc00-\\udfff]|\\ud877[\\udc00-\\udfff]|\\ud878[\\udc00-\\udfff]|\\ud879[\\udc00-\\udfff]|\\ud87a[\\udc00-\\udfe0]|\\ud87e[\\udc00-\\ude1d]|\\udb40[\\udd00-\\uddef])|[$_]|(\\\\u[0-9a-fA-F]{4}|\\\\u\\{[0-9a-fA-F]{1,}\\})|[\\u200c\\u200d])*>/, function () {\n  var groupName = yytext.slice(3, -1);\n  validateUnicodeGroupName(groupName, this.getCurrentState());\n  return 'NAMED_GROUP_REF';\n}], [/^\\\\b/, function () {\n  return 'ESC_b';\n}], [/^\\\\B/, function () {\n  return 'ESC_B';\n}], [/^\\\\c[a-zA-Z]/, function () {\n  return 'CTRL_CH';\n}], [/^\\\\0\\d{1,2}/, function () {\n  return 'OCT_CODE';\n}], [/^\\\\0/, function () {\n  return 'DEC_CODE';\n}], [/^\\\\\\d{1,3}/, function () {\n  return 'DEC_CODE';\n}], [/^\\\\u[dD][89abAB][0-9a-fA-F]{2}\\\\u[dD][c-fC-F][0-9a-fA-F]{2}/, function () {\n  return 'U_CODE_SURROGATE';\n}], [/^\\\\u\\{[0-9a-fA-F]{1,}\\}/, function () {\n  return 'U_CODE';\n}], [/^\\\\u[0-9a-fA-F]{4}/, function () {\n  return 'U_CODE';\n}], [/^\\\\[pP]\\{\\w+(?:=\\w+)?\\}/, function () {\n  return 'U_PROP_VALUE_EXP';\n}], [/^\\\\x[0-9a-fA-F]{2}/, function () {\n  return 'HEX_CODE';\n}], [/^\\\\[tnrdDsSwWvf]/, function () {\n  return 'META_CHAR';\n}], [/^\\\\\\//, function () {\n  return 'ESC_CHAR';\n}], [/^\\\\[ #]/, function () {\n  return 'ESC_CHAR';\n}], [/^\\\\[\\^\\$\\.\\*\\+\\?\\(\\)\\\\\\[\\]\\{\\}\\|\\/]/, function () {\n  return 'ESC_CHAR';\n}], [/^\\\\[^*?+\\[()\\\\|]/, function () {\n  var s = this.getCurrentState();\n  if (s === 'u_class' && yytext === \"\\\\-\") {\n    return 'ESC_CHAR';\n  } else if (s === 'u' || s === 'xu' || s === 'u_class') {\n    throw new SyntaxError('invalid Unicode escape ' + yytext);\n  }\n  return 'ESC_CHAR';\n}], [/^\\(/, function () {\n  return 'CHAR';\n}], [/^\\)/, function () {\n  return 'CHAR';\n}], [/^\\(\\?=/, function () {\n  return 'POS_LA_ASSERT';\n}], [/^\\(\\?!/, function () {\n  return 'NEG_LA_ASSERT';\n}], [/^\\(\\?<=/, function () {\n  return 'POS_LB_ASSERT';\n}], [/^\\(\\?<!/, function () {\n  return 'NEG_LB_ASSERT';\n}], [/^\\(\\?:/, function () {\n  return 'NON_CAPTURE_GROUP';\n}], [/^\\(\\?<(([\\u0041-\\u005a\\u0061-\\u007a\\u00aa\\u00b5\\u00ba\\u00c0-\\u00d6\\u00d8-\\u00f6\\u00f8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376-\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e-\\u066f\\u0671-\\u06d3\\u06d5\\u06e5-\\u06e6\\u06ee-\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4-\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc-\\u09dd\\u09df-\\u09e1\\u09f0-\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0-\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c-\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60-\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0-\\u0ce1\\u0cf1-\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32-\\u0e33\\u0e40-\\u0e46\\u0e81-\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2-\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065-\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae-\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5-\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a-\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7c6\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd-\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5-\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab67\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]|\\ud800[\\udc00-\\udc0b\\udc0d-\\udc26\\udc28-\\udc3a\\udc3c-\\udc3d\\udc3f-\\udc4d\\udc50-\\udc5d\\udc80-\\udcfa\\udd40-\\udd74\\ude80-\\ude9c\\udea0-\\uded0\\udf00-\\udf1f\\udf2d-\\udf4a\\udf50-\\udf75\\udf80-\\udf9d\\udfa0-\\udfc3\\udfc8-\\udfcf\\udfd1-\\udfd5]|\\ud801[\\udc00-\\udc9d\\udcb0-\\udcd3\\udcd8-\\udcfb\\udd00-\\udd27\\udd30-\\udd63\\ude00-\\udf36\\udf40-\\udf55\\udf60-\\udf67]|\\ud802[\\udc00-\\udc05\\udc08\\udc0a-\\udc35\\udc37-\\udc38\\udc3c\\udc3f-\\udc55\\udc60-\\udc76\\udc80-\\udc9e\\udce0-\\udcf2\\udcf4-\\udcf5\\udd00-\\udd15\\udd20-\\udd39\\udd80-\\uddb7\\uddbe-\\uddbf\\ude00\\ude10-\\ude13\\ude15-\\ude17\\ude19-\\ude35\\ude60-\\ude7c\\ude80-\\ude9c\\udec0-\\udec7\\udec9-\\udee4\\udf00-\\udf35\\udf40-\\udf55\\udf60-\\udf72\\udf80-\\udf91]|\\ud803[\\udc00-\\udc48\\udc80-\\udcb2\\udcc0-\\udcf2\\udd00-\\udd23\\udf00-\\udf1c\\udf27\\udf30-\\udf45\\udfe0-\\udff6]|\\ud804[\\udc03-\\udc37\\udc83-\\udcaf\\udcd0-\\udce8\\udd03-\\udd26\\udd44\\udd50-\\udd72\\udd76\\udd83-\\uddb2\\uddc1-\\uddc4\\uddda\\udddc\\ude00-\\ude11\\ude13-\\ude2b\\ude80-\\ude86\\ude88\\ude8a-\\ude8d\\ude8f-\\ude9d\\ude9f-\\udea8\\udeb0-\\udede\\udf05-\\udf0c\\udf0f-\\udf10\\udf13-\\udf28\\udf2a-\\udf30\\udf32-\\udf33\\udf35-\\udf39\\udf3d\\udf50\\udf5d-\\udf61]|\\ud805[\\udc00-\\udc34\\udc47-\\udc4a\\udc5f\\udc80-\\udcaf\\udcc4-\\udcc5\\udcc7\\udd80-\\uddae\\uddd8-\\udddb\\ude00-\\ude2f\\ude44\\ude80-\\udeaa\\udeb8\\udf00-\\udf1a]|\\ud806[\\udc00-\\udc2b\\udca0-\\udcdf\\udcff\\udda0-\\udda7\\uddaa-\\uddd0\\udde1\\udde3\\ude00\\ude0b-\\ude32\\ude3a\\ude50\\ude5c-\\ude89\\ude9d\\udec0-\\udef8]|\\ud807[\\udc00-\\udc08\\udc0a-\\udc2e\\udc40\\udc72-\\udc8f\\udd00-\\udd06\\udd08-\\udd09\\udd0b-\\udd30\\udd46\\udd60-\\udd65\\udd67-\\udd68\\udd6a-\\udd89\\udd98\\udee0-\\udef2]|\\ud808[\\udc00-\\udf99]|\\ud809[\\udc00-\\udc6e\\udc80-\\udd43]|\\ud80c[\\udc00-\\udfff]|\\ud80d[\\udc00-\\udc2e]|\\ud811[\\udc00-\\ude46]|\\ud81a[\\udc00-\\ude38\\ude40-\\ude5e\\uded0-\\udeed\\udf00-\\udf2f\\udf40-\\udf43\\udf63-\\udf77\\udf7d-\\udf8f]|\\ud81b[\\ude40-\\ude7f\\udf00-\\udf4a\\udf50\\udf93-\\udf9f\\udfe0-\\udfe1\\udfe3]|\\ud81c[\\udc00-\\udfff]|\\ud81d[\\udc00-\\udfff]|\\ud81e[\\udc00-\\udfff]|\\ud81f[\\udc00-\\udfff]|\\ud820[\\udc00-\\udfff]|\\ud821[\\udc00-\\udff7]|\\ud822[\\udc00-\\udef2]|\\ud82c[\\udc00-\\udd1e\\udd50-\\udd52\\udd64-\\udd67\\udd70-\\udefb]|\\ud82f[\\udc00-\\udc6a\\udc70-\\udc7c\\udc80-\\udc88\\udc90-\\udc99]|\\ud835[\\udc00-\\udc54\\udc56-\\udc9c\\udc9e-\\udc9f\\udca2\\udca5-\\udca6\\udca9-\\udcac\\udcae-\\udcb9\\udcbb\\udcbd-\\udcc3\\udcc5-\\udd05\\udd07-\\udd0a\\udd0d-\\udd14\\udd16-\\udd1c\\udd1e-\\udd39\\udd3b-\\udd3e\\udd40-\\udd44\\udd46\\udd4a-\\udd50\\udd52-\\udea5\\udea8-\\udec0\\udec2-\\udeda\\udedc-\\udefa\\udefc-\\udf14\\udf16-\\udf34\\udf36-\\udf4e\\udf50-\\udf6e\\udf70-\\udf88\\udf8a-\\udfa8\\udfaa-\\udfc2\\udfc4-\\udfcb]|\\ud838[\\udd00-\\udd2c\\udd37-\\udd3d\\udd4e\\udec0-\\udeeb]|\\ud83a[\\udc00-\\udcc4\\udd00-\\udd43\\udd4b]|\\ud83b[\\ude00-\\ude03\\ude05-\\ude1f\\ude21-\\ude22\\ude24\\ude27\\ude29-\\ude32\\ude34-\\ude37\\ude39\\ude3b\\ude42\\ude47\\ude49\\ude4b\\ude4d-\\ude4f\\ude51-\\ude52\\ude54\\ude57\\ude59\\ude5b\\ude5d\\ude5f\\ude61-\\ude62\\ude64\\ude67-\\ude6a\\ude6c-\\ude72\\ude74-\\ude77\\ude79-\\ude7c\\ude7e\\ude80-\\ude89\\ude8b-\\ude9b\\udea1-\\udea3\\udea5-\\udea9\\udeab-\\udebb]|\\ud840[\\udc00-\\udfff]|\\ud841[\\udc00-\\udfff]|\\ud842[\\udc00-\\udfff]|\\ud843[\\udc00-\\udfff]|\\ud844[\\udc00-\\udfff]|\\ud845[\\udc00-\\udfff]|\\ud846[\\udc00-\\udfff]|\\ud847[\\udc00-\\udfff]|\\ud848[\\udc00-\\udfff]|\\ud849[\\udc00-\\udfff]|\\ud84a[\\udc00-\\udfff]|\\ud84b[\\udc00-\\udfff]|\\ud84c[\\udc00-\\udfff]|\\ud84d[\\udc00-\\udfff]|\\ud84e[\\udc00-\\udfff]|\\ud84f[\\udc00-\\udfff]|\\ud850[\\udc00-\\udfff]|\\ud851[\\udc00-\\udfff]|\\ud852[\\udc00-\\udfff]|\\ud853[\\udc00-\\udfff]|\\ud854[\\udc00-\\udfff]|\\ud855[\\udc00-\\udfff]|\\ud856[\\udc00-\\udfff]|\\ud857[\\udc00-\\udfff]|\\ud858[\\udc00-\\udfff]|\\ud859[\\udc00-\\udfff]|\\ud85a[\\udc00-\\udfff]|\\ud85b[\\udc00-\\udfff]|\\ud85c[\\udc00-\\udfff]|\\ud85d[\\udc00-\\udfff]|\\ud85e[\\udc00-\\udfff]|\\ud85f[\\udc00-\\udfff]|\\ud860[\\udc00-\\udfff]|\\ud861[\\udc00-\\udfff]|\\ud862[\\udc00-\\udfff]|\\ud863[\\udc00-\\udfff]|\\ud864[\\udc00-\\udfff]|\\ud865[\\udc00-\\udfff]|\\ud866[\\udc00-\\udfff]|\\ud867[\\udc00-\\udfff]|\\ud868[\\udc00-\\udfff]|\\ud869[\\udc00-\\uded6\\udf00-\\udfff]|\\ud86a[\\udc00-\\udfff]|\\ud86b[\\udc00-\\udfff]|\\ud86c[\\udc00-\\udfff]|\\ud86d[\\udc00-\\udf34\\udf40-\\udfff]|\\ud86e[\\udc00-\\udc1d\\udc20-\\udfff]|\\ud86f[\\udc00-\\udfff]|\\ud870[\\udc00-\\udfff]|\\ud871[\\udc00-\\udfff]|\\ud872[\\udc00-\\udfff]|\\ud873[\\udc00-\\udea1\\udeb0-\\udfff]|\\ud874[\\udc00-\\udfff]|\\ud875[\\udc00-\\udfff]|\\ud876[\\udc00-\\udfff]|\\ud877[\\udc00-\\udfff]|\\ud878[\\udc00-\\udfff]|\\ud879[\\udc00-\\udfff]|\\ud87a[\\udc00-\\udfe0]|\\ud87e[\\udc00-\\ude1d])|[$_]|(\\\\u[0-9a-fA-F]{4}|\\\\u\\{[0-9a-fA-F]{1,}\\}))(([\\u0030-\\u0039\\u0041-\\u005a\\u005f\\u0061-\\u007a\\u00aa\\u00b5\\u00b7\\u00ba\\u00c0-\\u00d6\\u00d8-\\u00f6\\u00f8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0300-\\u0374\\u0376-\\u0377\\u037a-\\u037d\\u037f\\u0386-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u0483-\\u0487\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u0591-\\u05bd\\u05bf\\u05c1-\\u05c2\\u05c4-\\u05c5\\u05c7\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0610-\\u061a\\u0620-\\u0669\\u066e-\\u06d3\\u06d5-\\u06dc\\u06df-\\u06e8\\u06ea-\\u06fc\\u06ff\\u0710-\\u074a\\u074d-\\u07b1\\u07c0-\\u07f5\\u07fa\\u07fd\\u0800-\\u082d\\u0840-\\u085b\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u08d3-\\u08e1\\u08e3-\\u0963\\u0966-\\u096f\\u0971-\\u0983\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bc-\\u09c4\\u09c7-\\u09c8\\u09cb-\\u09ce\\u09d7\\u09dc-\\u09dd\\u09df-\\u09e3\\u09e6-\\u09f1\\u09fc\\u09fe\\u0a01-\\u0a03\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a3c\\u0a3e-\\u0a42\\u0a47-\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a59-\\u0a5c\\u0a5e\\u0a66-\\u0a75\\u0a81-\\u0a83\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abc-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ad0\\u0ae0-\\u0ae3\\u0ae6-\\u0aef\\u0af9-\\u0aff\\u0b01-\\u0b03\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3c-\\u0b44\\u0b47-\\u0b48\\u0b4b-\\u0b4d\\u0b56-\\u0b57\\u0b5c-\\u0b5d\\u0b5f-\\u0b63\\u0b66-\\u0b6f\\u0b71\\u0b82-\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd0\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55-\\u0c56\\u0c58-\\u0c5a\\u0c60-\\u0c63\\u0c66-\\u0c6f\\u0c80-\\u0c83\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbc-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5-\\u0cd6\\u0cde\\u0ce0-\\u0ce3\\u0ce6-\\u0cef\\u0cf1-\\u0cf2\\u0d00-\\u0d03\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4e\\u0d54-\\u0d57\\u0d5f-\\u0d63\\u0d66-\\u0d6f\\u0d7a-\\u0d7f\\u0d82-\\u0d83\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2-\\u0df3\\u0e01-\\u0e3a\\u0e40-\\u0e4e\\u0e50-\\u0e59\\u0e81-\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0edc-\\u0edf\\u0f00\\u0f18-\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e-\\u0f47\\u0f49-\\u0f6c\\u0f71-\\u0f84\\u0f86-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1049\\u1050-\\u109d\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u135d-\\u135f\\u1369-\\u1371\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176c\\u176e-\\u1770\\u1772-\\u1773\\u1780-\\u17d3\\u17d7\\u17dc-\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u19d0-\\u19da\\u1a00-\\u1a1b\\u1a20-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1aa7\\u1ab0-\\u1abd\\u1b00-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1bf3\\u1c00-\\u1c37\\u1c40-\\u1c49\\u1c4d-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1cd0-\\u1cd2\\u1cd4-\\u1cfa\\u1d00-\\u1df9\\u1dfb-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u203f-\\u2040\\u2054\\u2071\\u207f\\u2090-\\u209c\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d7f-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2de0-\\u2dff\\u3005-\\u3007\\u3021-\\u302f\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u3099-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua62b\\ua640-\\ua66f\\ua674-\\ua67d\\ua67f-\\ua6f1\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7c6\\ua7f7-\\ua827\\ua840-\\ua873\\ua880-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f7\\ua8fb\\ua8fd-\\ua92d\\ua930-\\ua953\\ua960-\\ua97c\\ua980-\\ua9c0\\ua9cf-\\ua9d9\\ua9e0-\\ua9fe\\uaa00-\\uaa36\\uaa40-\\uaa4d\\uaa50-\\uaa59\\uaa60-\\uaa76\\uaa7a-\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaef\\uaaf2-\\uaaf6\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab67\\uab70-\\uabea\\uabec-\\uabed\\uabf0-\\uabf9\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33-\\ufe34\\ufe4d-\\ufe4f\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff10-\\uff19\\uff21-\\uff3a\\uff3f\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]|\\ud800[\\udc00-\\udc0b\\udc0d-\\udc26\\udc28-\\udc3a\\udc3c-\\udc3d\\udc3f-\\udc4d\\udc50-\\udc5d\\udc80-\\udcfa\\udd40-\\udd74\\uddfd\\ude80-\\ude9c\\udea0-\\uded0\\udee0\\udf00-\\udf1f\\udf2d-\\udf4a\\udf50-\\udf7a\\udf80-\\udf9d\\udfa0-\\udfc3\\udfc8-\\udfcf\\udfd1-\\udfd5]|\\ud801[\\udc00-\\udc9d\\udca0-\\udca9\\udcb0-\\udcd3\\udcd8-\\udcfb\\udd00-\\udd27\\udd30-\\udd63\\ude00-\\udf36\\udf40-\\udf55\\udf60-\\udf67]|\\ud802[\\udc00-\\udc05\\udc08\\udc0a-\\udc35\\udc37-\\udc38\\udc3c\\udc3f-\\udc55\\udc60-\\udc76\\udc80-\\udc9e\\udce0-\\udcf2\\udcf4-\\udcf5\\udd00-\\udd15\\udd20-\\udd39\\udd80-\\uddb7\\uddbe-\\uddbf\\ude00-\\ude03\\ude05-\\ude06\\ude0c-\\ude13\\ude15-\\ude17\\ude19-\\ude35\\ude38-\\ude3a\\ude3f\\ude60-\\ude7c\\ude80-\\ude9c\\udec0-\\udec7\\udec9-\\udee6\\udf00-\\udf35\\udf40-\\udf55\\udf60-\\udf72\\udf80-\\udf91]|\\ud803[\\udc00-\\udc48\\udc80-\\udcb2\\udcc0-\\udcf2\\udd00-\\udd27\\udd30-\\udd39\\udf00-\\udf1c\\udf27\\udf30-\\udf50\\udfe0-\\udff6]|\\ud804[\\udc00-\\udc46\\udc66-\\udc6f\\udc7f-\\udcba\\udcd0-\\udce8\\udcf0-\\udcf9\\udd00-\\udd34\\udd36-\\udd3f\\udd44-\\udd46\\udd50-\\udd73\\udd76\\udd80-\\uddc4\\uddc9-\\uddcc\\uddd0-\\uddda\\udddc\\ude00-\\ude11\\ude13-\\ude37\\ude3e\\ude80-\\ude86\\ude88\\ude8a-\\ude8d\\ude8f-\\ude9d\\ude9f-\\udea8\\udeb0-\\udeea\\udef0-\\udef9\\udf00-\\udf03\\udf05-\\udf0c\\udf0f-\\udf10\\udf13-\\udf28\\udf2a-\\udf30\\udf32-\\udf33\\udf35-\\udf39\\udf3b-\\udf44\\udf47-\\udf48\\udf4b-\\udf4d\\udf50\\udf57\\udf5d-\\udf63\\udf66-\\udf6c\\udf70-\\udf74]|\\ud805[\\udc00-\\udc4a\\udc50-\\udc59\\udc5e-\\udc5f\\udc80-\\udcc5\\udcc7\\udcd0-\\udcd9\\udd80-\\uddb5\\uddb8-\\uddc0\\uddd8-\\udddd\\ude00-\\ude40\\ude44\\ude50-\\ude59\\ude80-\\udeb8\\udec0-\\udec9\\udf00-\\udf1a\\udf1d-\\udf2b\\udf30-\\udf39]|\\ud806[\\udc00-\\udc3a\\udca0-\\udce9\\udcff\\udda0-\\udda7\\uddaa-\\uddd7\\uddda-\\udde1\\udde3-\\udde4\\ude00-\\ude3e\\ude47\\ude50-\\ude99\\ude9d\\udec0-\\udef8]|\\ud807[\\udc00-\\udc08\\udc0a-\\udc36\\udc38-\\udc40\\udc50-\\udc59\\udc72-\\udc8f\\udc92-\\udca7\\udca9-\\udcb6\\udd00-\\udd06\\udd08-\\udd09\\udd0b-\\udd36\\udd3a\\udd3c-\\udd3d\\udd3f-\\udd47\\udd50-\\udd59\\udd60-\\udd65\\udd67-\\udd68\\udd6a-\\udd8e\\udd90-\\udd91\\udd93-\\udd98\\udda0-\\udda9\\udee0-\\udef6]|\\ud808[\\udc00-\\udf99]|\\ud809[\\udc00-\\udc6e\\udc80-\\udd43]|\\ud80c[\\udc00-\\udfff]|\\ud80d[\\udc00-\\udc2e]|\\ud811[\\udc00-\\ude46]|\\ud81a[\\udc00-\\ude38\\ude40-\\ude5e\\ude60-\\ude69\\uded0-\\udeed\\udef0-\\udef4\\udf00-\\udf36\\udf40-\\udf43\\udf50-\\udf59\\udf63-\\udf77\\udf7d-\\udf8f]|\\ud81b[\\ude40-\\ude7f\\udf00-\\udf4a\\udf4f-\\udf87\\udf8f-\\udf9f\\udfe0-\\udfe1\\udfe3]|\\ud81c[\\udc00-\\udfff]|\\ud81d[\\udc00-\\udfff]|\\ud81e[\\udc00-\\udfff]|\\ud81f[\\udc00-\\udfff]|\\ud820[\\udc00-\\udfff]|\\ud821[\\udc00-\\udff7]|\\ud822[\\udc00-\\udef2]|\\ud82c[\\udc00-\\udd1e\\udd50-\\udd52\\udd64-\\udd67\\udd70-\\udefb]|\\ud82f[\\udc00-\\udc6a\\udc70-\\udc7c\\udc80-\\udc88\\udc90-\\udc99\\udc9d-\\udc9e]|\\ud834[\\udd65-\\udd69\\udd6d-\\udd72\\udd7b-\\udd82\\udd85-\\udd8b\\uddaa-\\uddad\\ude42-\\ude44]|\\ud835[\\udc00-\\udc54\\udc56-\\udc9c\\udc9e-\\udc9f\\udca2\\udca5-\\udca6\\udca9-\\udcac\\udcae-\\udcb9\\udcbb\\udcbd-\\udcc3\\udcc5-\\udd05\\udd07-\\udd0a\\udd0d-\\udd14\\udd16-\\udd1c\\udd1e-\\udd39\\udd3b-\\udd3e\\udd40-\\udd44\\udd46\\udd4a-\\udd50\\udd52-\\udea5\\udea8-\\udec0\\udec2-\\udeda\\udedc-\\udefa\\udefc-\\udf14\\udf16-\\udf34\\udf36-\\udf4e\\udf50-\\udf6e\\udf70-\\udf88\\udf8a-\\udfa8\\udfaa-\\udfc2\\udfc4-\\udfcb\\udfce-\\udfff]|\\ud836[\\ude00-\\ude36\\ude3b-\\ude6c\\ude75\\ude84\\ude9b-\\ude9f\\udea1-\\udeaf]|\\ud838[\\udc00-\\udc06\\udc08-\\udc18\\udc1b-\\udc21\\udc23-\\udc24\\udc26-\\udc2a\\udd00-\\udd2c\\udd30-\\udd3d\\udd40-\\udd49\\udd4e\\udec0-\\udef9]|\\ud83a[\\udc00-\\udcc4\\udcd0-\\udcd6\\udd00-\\udd4b\\udd50-\\udd59]|\\ud83b[\\ude00-\\ude03\\ude05-\\ude1f\\ude21-\\ude22\\ude24\\ude27\\ude29-\\ude32\\ude34-\\ude37\\ude39\\ude3b\\ude42\\ude47\\ude49\\ude4b\\ude4d-\\ude4f\\ude51-\\ude52\\ude54\\ude57\\ude59\\ude5b\\ude5d\\ude5f\\ude61-\\ude62\\ude64\\ude67-\\ude6a\\ude6c-\\ude72\\ude74-\\ude77\\ude79-\\ude7c\\ude7e\\ude80-\\ude89\\ude8b-\\ude9b\\udea1-\\udea3\\udea5-\\udea9\\udeab-\\udebb]|\\ud840[\\udc00-\\udfff]|\\ud841[\\udc00-\\udfff]|\\ud842[\\udc00-\\udfff]|\\ud843[\\udc00-\\udfff]|\\ud844[\\udc00-\\udfff]|\\ud845[\\udc00-\\udfff]|\\ud846[\\udc00-\\udfff]|\\ud847[\\udc00-\\udfff]|\\ud848[\\udc00-\\udfff]|\\ud849[\\udc00-\\udfff]|\\ud84a[\\udc00-\\udfff]|\\ud84b[\\udc00-\\udfff]|\\ud84c[\\udc00-\\udfff]|\\ud84d[\\udc00-\\udfff]|\\ud84e[\\udc00-\\udfff]|\\ud84f[\\udc00-\\udfff]|\\ud850[\\udc00-\\udfff]|\\ud851[\\udc00-\\udfff]|\\ud852[\\udc00-\\udfff]|\\ud853[\\udc00-\\udfff]|\\ud854[\\udc00-\\udfff]|\\ud855[\\udc00-\\udfff]|\\ud856[\\udc00-\\udfff]|\\ud857[\\udc00-\\udfff]|\\ud858[\\udc00-\\udfff]|\\ud859[\\udc00-\\udfff]|\\ud85a[\\udc00-\\udfff]|\\ud85b[\\udc00-\\udfff]|\\ud85c[\\udc00-\\udfff]|\\ud85d[\\udc00-\\udfff]|\\ud85e[\\udc00-\\udfff]|\\ud85f[\\udc00-\\udfff]|\\ud860[\\udc00-\\udfff]|\\ud861[\\udc00-\\udfff]|\\ud862[\\udc00-\\udfff]|\\ud863[\\udc00-\\udfff]|\\ud864[\\udc00-\\udfff]|\\ud865[\\udc00-\\udfff]|\\ud866[\\udc00-\\udfff]|\\ud867[\\udc00-\\udfff]|\\ud868[\\udc00-\\udfff]|\\ud869[\\udc00-\\uded6\\udf00-\\udfff]|\\ud86a[\\udc00-\\udfff]|\\ud86b[\\udc00-\\udfff]|\\ud86c[\\udc00-\\udfff]|\\ud86d[\\udc00-\\udf34\\udf40-\\udfff]|\\ud86e[\\udc00-\\udc1d\\udc20-\\udfff]|\\ud86f[\\udc00-\\udfff]|\\ud870[\\udc00-\\udfff]|\\ud871[\\udc00-\\udfff]|\\ud872[\\udc00-\\udfff]|\\ud873[\\udc00-\\udea1\\udeb0-\\udfff]|\\ud874[\\udc00-\\udfff]|\\ud875[\\udc00-\\udfff]|\\ud876[\\udc00-\\udfff]|\\ud877[\\udc00-\\udfff]|\\ud878[\\udc00-\\udfff]|\\ud879[\\udc00-\\udfff]|\\ud87a[\\udc00-\\udfe0]|\\ud87e[\\udc00-\\ude1d]|\\udb40[\\udd00-\\uddef])|[$_]|(\\\\u[0-9a-fA-F]{4}|\\\\u\\{[0-9a-fA-F]{1,}\\})|[\\u200c\\u200d])*>/, function () {\n  yytext = yytext.slice(3, -1);\n  validateUnicodeGroupName(yytext, this.getCurrentState());\n  return 'NAMED_CAPTURE_GROUP';\n}], [/^\\(/, function () {\n  return 'L_PAREN';\n}], [/^\\)/, function () {\n  return 'R_PAREN';\n}], [/^[*?+[^$]/, function () {\n  return 'CHAR';\n}], [/^\\\\\\]/, function () {\n  return 'ESC_CHAR';\n}], [/^\\]/, function () {\n  this.popState();return 'R_BRACKET';\n}], [/^\\^/, function () {\n  return 'BOS';\n}], [/^\\$/, function () {\n  return 'EOS';\n}], [/^\\*/, function () {\n  return 'STAR';\n}], [/^\\?/, function () {\n  return 'Q_MARK';\n}], [/^\\+/, function () {\n  return 'PLUS';\n}], [/^\\|/, function () {\n  return 'BAR';\n}], [/^\\./, function () {\n  return 'ANY';\n}], [/^\\//, function () {\n  return 'SLASH';\n}], [/^[^*?+\\[()\\\\|]/, function () {\n  return 'CHAR';\n}], [/^\\[\\^/, function () {\n  var s = this.getCurrentState();this.pushState(s === 'u' || s === 'xu' ? 'u_class' : 'class');return 'NEG_CLASS';\n}], [/^\\[/, function () {\n  var s = this.getCurrentState();this.pushState(s === 'u' || s === 'xu' ? 'u_class' : 'class');return 'L_BRACKET';\n}]];\nvar lexRulesByConditions = { \"INITIAL\": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 22, 23, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], \"u\": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], \"xu\": [0, 1, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], \"x\": [0, 1, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 22, 23, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], \"u_class\": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], \"class\": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51] };\n\nvar EOF_TOKEN = {\n  type: EOF,\n  value: ''\n};\n\ntokenizer = {\n  initString: function initString(string) {\n    this._string = string;\n    this._cursor = 0;\n\n    this._states = ['INITIAL'];\n    this._tokensQueue = [];\n\n    this._currentLine = 1;\n    this._currentColumn = 0;\n    this._currentLineBeginOffset = 0;\n\n    /**\n     * Matched token location data.\n     */\n    this._tokenStartOffset = 0;\n    this._tokenEndOffset = 0;\n    this._tokenStartLine = 1;\n    this._tokenEndLine = 1;\n    this._tokenStartColumn = 0;\n    this._tokenEndColumn = 0;\n\n    return this;\n  },\n\n\n  /**\n   * Returns tokenizer states.\n   */\n  getStates: function getStates() {\n    return this._states;\n  },\n  getCurrentState: function getCurrentState() {\n    return this._states[this._states.length - 1];\n  },\n  pushState: function pushState(state) {\n    this._states.push(state);\n  },\n  begin: function begin(state) {\n    this.pushState(state);\n  },\n  popState: function popState() {\n    if (this._states.length > 1) {\n      return this._states.pop();\n    }\n    return this._states[0];\n  },\n  getNextToken: function getNextToken() {\n    // Something was queued, return it.\n    if (this._tokensQueue.length > 0) {\n      return this.onToken(this._toToken(this._tokensQueue.shift()));\n    }\n\n    if (!this.hasMoreTokens()) {\n      return this.onToken(EOF_TOKEN);\n    }\n\n    var string = this._string.slice(this._cursor);\n    var lexRulesForState = lexRulesByConditions[this.getCurrentState()];\n\n    for (var i = 0; i < lexRulesForState.length; i++) {\n      var lexRuleIndex = lexRulesForState[i];\n      var lexRule = lexRules[lexRuleIndex];\n\n      var matched = this._match(string, lexRule[0]);\n\n      // Manual handling of EOF token (the end of string). Return it\n      // as `EOF` symbol.\n      if (string === '' && matched === '') {\n        this._cursor++;\n      }\n\n      if (matched !== null) {\n        yytext = matched;\n        yyleng = yytext.length;\n        var token = lexRule[1].call(this);\n\n        if (!token) {\n          return this.getNextToken();\n        }\n\n        // If multiple tokens are returned, save them to return\n        // on next `getNextToken` call.\n\n        if (Array.isArray(token)) {\n          var tokensToQueue = token.slice(1);\n          token = token[0];\n          if (tokensToQueue.length > 0) {\n            var _tokensQueue;\n\n            (_tokensQueue = this._tokensQueue).unshift.apply(_tokensQueue, _toConsumableArray(tokensToQueue));\n          }\n        }\n\n        return this.onToken(this._toToken(token, yytext));\n      }\n    }\n\n    if (this.isEOF()) {\n      this._cursor++;\n      return EOF_TOKEN;\n    }\n\n    this.throwUnexpectedToken(string[0], this._currentLine, this._currentColumn);\n  },\n\n\n  /**\n   * Throws default \"Unexpected token\" exception, showing the actual\n   * line from the source, pointing with the ^ marker to the bad token.\n   * In addition, shows `line:column` location.\n   */\n  throwUnexpectedToken: function throwUnexpectedToken(symbol, line, column) {\n    var lineSource = this._string.split('\\n')[line - 1];\n    var lineData = '';\n\n    if (lineSource) {\n      var pad = ' '.repeat(column);\n      lineData = '\\n\\n' + lineSource + '\\n' + pad + '^\\n';\n    }\n\n    throw new SyntaxError(lineData + 'Unexpected token: \"' + symbol + '\" ' + ('at ' + line + ':' + column + '.'));\n  },\n  getCursor: function getCursor() {\n    return this._cursor;\n  },\n  getCurrentLine: function getCurrentLine() {\n    return this._currentLine;\n  },\n  getCurrentColumn: function getCurrentColumn() {\n    return this._currentColumn;\n  },\n  _captureLocation: function _captureLocation(matched) {\n    var nlRe = /\\n/g;\n\n    // Absolute offsets.\n    this._tokenStartOffset = this._cursor;\n\n    // Line-based locations, start.\n    this._tokenStartLine = this._currentLine;\n    this._tokenStartColumn = this._tokenStartOffset - this._currentLineBeginOffset;\n\n    // Extract `\\n` in the matched token.\n    var nlMatch = void 0;\n    while ((nlMatch = nlRe.exec(matched)) !== null) {\n      this._currentLine++;\n      this._currentLineBeginOffset = this._tokenStartOffset + nlMatch.index + 1;\n    }\n\n    this._tokenEndOffset = this._cursor + matched.length;\n\n    // Line-based locations, end.\n    this._tokenEndLine = this._currentLine;\n    this._tokenEndColumn = this._currentColumn = this._tokenEndOffset - this._currentLineBeginOffset;\n  },\n  _toToken: function _toToken(tokenType) {\n    var yytext = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n    return {\n      // Basic data.\n      type: tokenType,\n      value: yytext,\n\n      // Location data.\n      startOffset: this._tokenStartOffset,\n      endOffset: this._tokenEndOffset,\n      startLine: this._tokenStartLine,\n      endLine: this._tokenEndLine,\n      startColumn: this._tokenStartColumn,\n      endColumn: this._tokenEndColumn\n    };\n  },\n  isEOF: function isEOF() {\n    return this._cursor === this._string.length;\n  },\n  hasMoreTokens: function hasMoreTokens() {\n    return this._cursor <= this._string.length;\n  },\n  _match: function _match(string, regexp) {\n    var matched = string.match(regexp);\n    if (matched) {\n      // Handle `\\n` in the matched token to track line numbers.\n      this._captureLocation(matched[0]);\n      this._cursor += matched[0].length;\n      return matched[0];\n    }\n    return null;\n  },\n\n\n  /**\n   * Allows analyzing, and transforming token. Default implementation\n   * just passes the token through.\n   */\n  onToken: function onToken(token) {\n    return token;\n  }\n};\n\n/**\n * Expose tokenizer so it can be accessed in semantic actions.\n */\nyy.lexer = tokenizer;\nyy.tokenizer = tokenizer;\n\n/**\n * Global parsing options. Some options can be shadowed per\n * each `parse` call, if the optations are passed.\n *\n * Initalized to the `captureLocations` which is passed\n * from the generator. Other options can be added at runtime.\n */\nyy.options = {\n  captureLocations: true\n};\n\n/**\n * Parsing module.\n */\nvar yyparse = {\n  /**\n   * Sets global parsing options.\n   */\n  setOptions: function setOptions(options) {\n    yy.options = options;\n    return this;\n  },\n\n\n  /**\n   * Returns parsing options.\n   */\n  getOptions: function getOptions() {\n    return yy.options;\n  },\n\n\n  /**\n   * Parses a string.\n   */\n  parse: function parse(string, parseOptions) {\n    if (!tokenizer) {\n      throw new Error('Tokenizer instance wasn\\'t specified.');\n    }\n\n    tokenizer.initString(string);\n\n    /**\n     * If parse options are passed, override global parse options for\n     * this call, and later restore global options.\n     */\n    var globalOptions = yy.options;\n    if (parseOptions) {\n      yy.options = Object.assign({}, yy.options, parseOptions);\n    }\n\n    /**\n     * Allow callers to do setup work based on the\n     * parsing string, and passed options.\n     */\n    yyparse.onParseBegin(string, tokenizer, yy.options);\n\n    stack.length = 0;\n    stack.push(0);\n\n    var token = tokenizer.getNextToken();\n    var shiftedToken = null;\n\n    do {\n      if (!token) {\n        // Restore options.\n        yy.options = globalOptions;\n        unexpectedEndOfInput();\n      }\n\n      var state = stack[stack.length - 1];\n      var column = tokens[token.type];\n\n      if (!table[state].hasOwnProperty(column)) {\n        yy.options = globalOptions;\n        unexpectedToken(token);\n      }\n\n      var entry = table[state][column];\n\n      // Shift action.\n      if (entry[0] === 's') {\n        var _loc2 = null;\n\n        if (yy.options.captureLocations) {\n          _loc2 = {\n            startOffset: token.startOffset,\n            endOffset: token.endOffset,\n            startLine: token.startLine,\n            endLine: token.endLine,\n            startColumn: token.startColumn,\n            endColumn: token.endColumn\n          };\n        }\n\n        shiftedToken = this.onShift(token);\n\n        stack.push({ symbol: tokens[shiftedToken.type], semanticValue: shiftedToken.value, loc: _loc2 }, Number(entry.slice(1)));\n\n        token = tokenizer.getNextToken();\n      }\n\n      // Reduce action.\n      else if (entry[0] === 'r') {\n          var productionNumber = entry.slice(1);\n          var production = productions[productionNumber];\n          var hasSemanticAction = typeof production[2] === 'function';\n          var semanticValueArgs = hasSemanticAction ? [] : null;\n\n          var locationArgs = hasSemanticAction && yy.options.captureLocations ? [] : null;\n\n          if (production[1] !== 0) {\n            var rhsLength = production[1];\n            while (rhsLength-- > 0) {\n              stack.pop();\n              var stackEntry = stack.pop();\n\n              if (hasSemanticAction) {\n                semanticValueArgs.unshift(stackEntry.semanticValue);\n\n                if (locationArgs) {\n                  locationArgs.unshift(stackEntry.loc);\n                }\n              }\n            }\n          }\n\n          var reduceStackEntry = { symbol: production[0] };\n\n          if (hasSemanticAction) {\n            yytext = shiftedToken ? shiftedToken.value : null;\n            yyleng = shiftedToken ? shiftedToken.value.length : null;\n\n            var semanticActionArgs = locationArgs !== null ? semanticValueArgs.concat(locationArgs) : semanticValueArgs;\n\n            production[2].apply(production, _toConsumableArray(semanticActionArgs));\n\n            reduceStackEntry.semanticValue = __;\n\n            if (locationArgs) {\n              reduceStackEntry.loc = __loc;\n            }\n          }\n\n          var nextState = stack[stack.length - 1];\n          var symbolToReduceWith = production[0];\n\n          stack.push(reduceStackEntry, table[nextState][symbolToReduceWith]);\n        }\n\n        // Accept.\n        else if (entry === 'acc') {\n            stack.pop();\n            var parsed = stack.pop();\n\n            if (stack.length !== 1 || stack[0] !== 0 || tokenizer.hasMoreTokens()) {\n              // Restore options.\n              yy.options = globalOptions;\n              unexpectedToken(token);\n            }\n\n            if (parsed.hasOwnProperty('semanticValue')) {\n              yy.options = globalOptions;\n              yyparse.onParseEnd(parsed.semanticValue);\n              return parsed.semanticValue;\n            }\n\n            yyparse.onParseEnd();\n\n            // Restore options.\n            yy.options = globalOptions;\n            return true;\n          }\n    } while (tokenizer.hasMoreTokens() || stack.length > 1);\n  },\n  setTokenizer: function setTokenizer(customTokenizer) {\n    tokenizer = customTokenizer;\n    return yyparse;\n  },\n  getTokenizer: function getTokenizer() {\n    return tokenizer;\n  },\n  onParseBegin: function onParseBegin(string, tokenizer, options) {},\n  onParseEnd: function onParseEnd(parsed) {},\n\n\n  /**\n   * Allows analyzing, and transforming shifted token. Default implementation\n   * just passes the token through.\n   */\n  onShift: function onShift(token) {\n    return token;\n  }\n};\n\n/**\n * Tracks capturing groups.\n */\nvar capturingGroupsCount = 0;\n\n/**\n * Tracks named groups.\n */\nvar namedGroups = {};\n\n/**\n * Parsing string.\n */\nvar parsingString = '';\n\nyyparse.onParseBegin = function (string, lexer) {\n  parsingString = string;\n  capturingGroupsCount = 0;\n  namedGroups = {};\n\n  var lastSlash = string.lastIndexOf('/');\n  var flags = string.slice(lastSlash);\n\n  if (flags.includes('x') && flags.includes('u')) {\n    lexer.pushState('xu');\n  } else {\n    if (flags.includes('x')) {\n      lexer.pushState('x');\n    }\n    if (flags.includes('u')) {\n      lexer.pushState('u');\n    }\n  }\n};\n\n/**\n * On shifting `(` remember its number to used on reduce.\n */\nyyparse.onShift = function (token) {\n  if (token.type === 'L_PAREN' || token.type === 'NAMED_CAPTURE_GROUP') {\n    token.value = new String(token.value);\n    token.value.groupNumber = ++capturingGroupsCount;\n  }\n  return token;\n};\n\n/**\n * Extracts ranges from the range string.\n */\nfunction getRange(text) {\n  var range = text.match(/\\d+/g).map(Number);\n\n  if (Number.isFinite(range[1]) && range[1] < range[0]) {\n    throw new SyntaxError('Numbers out of order in ' + text + ' quantifier');\n  }\n\n  return range;\n}\n\n/**\n * Checks class range\n */\nfunction checkClassRange(from, to) {\n  if (from.kind === 'control' || to.kind === 'control' || !isNaN(from.codePoint) && !isNaN(to.codePoint) && from.codePoint > to.codePoint) {\n    throw new SyntaxError('Range ' + from.value + '-' + to.value + ' out of order in character class');\n  }\n}\n\n// ---------------------- Unicode property -------------------------------------------\n\nvar unicodeProperties = require('../unicode/parser-unicode-properties.js');\n\n/**\n * Unicode property.\n */\nfunction UnicodeProperty(matched, loc) {\n  var negative = matched[1] === 'P';\n  var separatorIdx = matched.indexOf('=');\n\n  var name = matched.slice(3, separatorIdx !== -1 ? separatorIdx : -1);\n  var value = void 0;\n\n  // General_Category allows using only value as a shorthand.\n  var isShorthand = separatorIdx === -1 && unicodeProperties.isGeneralCategoryValue(name);\n\n  // Binary propery name.\n  var isBinaryProperty = separatorIdx === -1 && unicodeProperties.isBinaryPropertyName(name);\n\n  if (isShorthand) {\n    value = name;\n    name = 'General_Category';\n  } else if (isBinaryProperty) {\n    value = name;\n  } else {\n    if (!unicodeProperties.isValidName(name)) {\n      throw new SyntaxError('Invalid unicode property name: ' + name + '.');\n    }\n\n    value = matched.slice(separatorIdx + 1, -1);\n\n    if (!unicodeProperties.isValidValue(name, value)) {\n      throw new SyntaxError('Invalid ' + name + ' unicode property value: ' + value + '.');\n    }\n  }\n\n  return Node({\n    type: 'UnicodeProperty',\n    name: name,\n    value: value,\n    negative: negative,\n    shorthand: isShorthand,\n    binary: isBinaryProperty,\n    canonicalName: unicodeProperties.getCanonicalName(name) || name,\n    canonicalValue: unicodeProperties.getCanonicalValue(value) || value\n  }, loc);\n}\n\n// ----------------------------------------------------------------------------------\n\n\n/**\n * Creates a character node.\n */\nfunction Char(value, kind, loc) {\n  var symbol = void 0;\n  var codePoint = void 0;\n\n  switch (kind) {\n    case 'decimal':\n      {\n        codePoint = Number(value.slice(1));\n        symbol = String.fromCodePoint(codePoint);\n        break;\n      }\n    case 'oct':\n      {\n        codePoint = parseInt(value.slice(1), 8);\n        symbol = String.fromCodePoint(codePoint);\n        break;\n      }\n    case 'hex':\n    case 'unicode':\n      {\n        if (value.lastIndexOf('\\\\u') > 0) {\n          var _value$split$slice = value.split('\\\\u').slice(1),\n              _value$split$slice2 = _slicedToArray(_value$split$slice, 2),\n              lead = _value$split$slice2[0],\n              trail = _value$split$slice2[1];\n\n          lead = parseInt(lead, 16);\n          trail = parseInt(trail, 16);\n          codePoint = (lead - 0xd800) * 0x400 + (trail - 0xdc00) + 0x10000;\n\n          symbol = String.fromCodePoint(codePoint);\n        } else {\n          var hex = value.slice(2).replace('{', '');\n          codePoint = parseInt(hex, 16);\n          if (codePoint > 0x10ffff) {\n            throw new SyntaxError('Bad character escape sequence: ' + value);\n          }\n\n          symbol = String.fromCodePoint(codePoint);\n        }\n        break;\n      }\n    case 'meta':\n      {\n        switch (value) {\n          case '\\\\t':\n            symbol = '\\t';\n            codePoint = symbol.codePointAt(0);\n            break;\n          case '\\\\n':\n            symbol = '\\n';\n            codePoint = symbol.codePointAt(0);\n            break;\n          case '\\\\r':\n            symbol = '\\r';\n            codePoint = symbol.codePointAt(0);\n            break;\n          case '\\\\v':\n            symbol = '\\v';\n            codePoint = symbol.codePointAt(0);\n            break;\n          case '\\\\f':\n            symbol = '\\f';\n            codePoint = symbol.codePointAt(0);\n            break;\n          case '\\\\b':\n            symbol = '\\b';\n            codePoint = symbol.codePointAt(0);\n          case '\\\\0':\n            symbol = '\\0';\n            codePoint = 0;\n          case '.':\n            symbol = '.';\n            codePoint = NaN;\n            break;\n          default:\n            codePoint = NaN;\n        }\n        break;\n      }\n    case 'simple':\n      {\n        symbol = value;\n        codePoint = symbol.codePointAt(0);\n        break;\n      }\n  }\n\n  return Node({\n    type: 'Char',\n    value: value,\n    kind: kind,\n    symbol: symbol,\n    codePoint: codePoint\n  }, loc);\n}\n\n/**\n * Valid flags per current ECMAScript spec and\n * stage 3+ proposals.\n */\nvar validFlags = 'gimsuxy';\n\n/**\n * Checks the flags are valid, and that\n * we don't duplicate flags.\n */\nfunction checkFlags(flags) {\n  var seen = new Set();\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = flags[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var flag = _step.value;\n\n      if (seen.has(flag) || !validFlags.includes(flag)) {\n        throw new SyntaxError('Invalid flags: ' + flags);\n      }\n      seen.add(flag);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return flags.split('').sort().join('');\n}\n\n/**\n * Parses patterns like \\1, \\2, etc. either as a backreference\n * to a group, or a deciaml char code.\n */\nfunction GroupRefOrDecChar(text, textLoc) {\n  var reference = Number(text.slice(1));\n\n  if (reference > 0 && reference <= capturingGroupsCount) {\n    return Node({\n      type: 'Backreference',\n      kind: 'number',\n      number: reference,\n      reference: reference\n    }, textLoc);\n  }\n\n  return Char(text, 'decimal', textLoc);\n}\n\n/**\n * Unicode names.\n */\nvar uReStart = /^\\\\u[0-9a-fA-F]{4}/; // only matches start of string\nvar ucpReStart = /^\\\\u\\{[0-9a-fA-F]{1,}\\}/; // only matches start of string\nvar ucpReAnywhere = /\\\\u\\{[0-9a-fA-F]{1,}\\}/; // matches anywhere in string\n\n/**\n * Validates Unicode group name.\n */\nfunction validateUnicodeGroupName(name, state) {\n  var isUnicodeName = ucpReAnywhere.test(name);\n  var isUnicodeState = state === 'u' || state === 'xu' || state === 'u_class';\n\n  if (isUnicodeName && !isUnicodeState) {\n    throw new SyntaxError('invalid group Unicode name \"' + name + '\", use `u` flag.');\n  }\n\n  return name;\n}\n\n// Matches the following production: https://tc39.es/ecma262/#prod-RegExpUnicodeEscapeSequence\n//\n//  RegExpUnicodeEscapeSequence ::\n//    `u` LeadSurrogate `\\u` TrailSurrogate   # as 'leadSurrogate', 'trailSurrogate'\n//    `u` LeadSurrogate                       # as 'leadSurrogateOnly'\n//    `u` TrailSurrogate                      # as 'trailSurrogateOnly'\n//    `u` NonSurrogate                        # as 'nonSurrogate'\n//    `u` `{` CodePoint `}`                   # as 'codePoint'\n//\n//  LeadSurrogate ::\n//    Hex4Digits but only if the SV of Hex4Digits is in the inclusive range 0xD800 to 0xDBFF        # [dD][89aAbB][0-9a-fA-F]{2}\n//\n//  TrailSurrogate ::\n//    Hex4Digits but only if the SV of Hex4Digits is in the inclusive range 0xDC00 to 0xDFFF        # [dD][c-fC-F][0-9a-fA-F]{2}\n//\n//  NonSurrogate ::\n//    Hex4Digits but only if the SV of Hex4Digits is not in the inclusive range 0xD800 to 0xDFFF    # [0-9a-ce-fA-CE-F][0-9a-fA-F]{3}|[dD][0-7][0-9a-fA-F]{2}\n//\n//  CodePoint ::\n//    HexDigits but only if MV of HexDigits ≤ 0x10FFFF                                              # 0*(?:[0-9a-fA-F]{1,5}|10[0-9a-fA-F]{4})\n//\nvar uidRe = /\\\\u(?:([dD][89aAbB][0-9a-fA-F]{2})\\\\u([dD][c-fC-F][0-9a-fA-F]{2})|([dD][89aAbB][0-9a-fA-F]{2})|([dD][c-fC-F][0-9a-fA-F]{2})|([0-9a-ce-fA-CE-F][0-9a-fA-F]{3}|[dD][0-7][0-9a-fA-F]{2})|\\{(0*(?:[0-9a-fA-F]{1,5}|10[0-9a-fA-F]{4}))\\})/;\n\nfunction decodeUnicodeGroupName(name) {\n  return name.replace(new RegExp(uidRe, 'g'), function (_, leadSurrogate, trailSurrogate, leadSurrogateOnly, trailSurrogateOnly, nonSurrogate, codePoint) {\n    if (leadSurrogate) {\n      return String.fromCodePoint(parseInt(leadSurrogate, 16), parseInt(trailSurrogate, 16));\n    }\n    if (leadSurrogateOnly) {\n      return String.fromCodePoint(parseInt(leadSurrogateOnly, 16));\n    }\n    if (trailSurrogateOnly) {\n      // TODO: Per the spec: https://tc39.es/ecma262/#prod-RegExpUnicodeEscapeSequence\n      // > Each `\\u` TrailSurrogate for which the choice of associated `u` LeadSurrogate is ambiguous shall be associated with the nearest possible `u` LeadSurrogate that would otherwise have no corresponding `\\u` TrailSurrogate.\n      return String.fromCodePoint(parseInt(trailSurrogateOnly, 16));\n    }\n    if (nonSurrogate) {\n      return String.fromCodePoint(parseInt(nonSurrogate, 16));\n    }\n    if (codePoint) {\n      return String.fromCodePoint(parseInt(codePoint, 16));\n    }\n    return _;\n  });\n}\n\n/**\n * Extracts from `\\k<foo>` pattern either a backreference\n * to a named capturing group (if it presents), or parses it\n * as a list of char: `\\k`, `<`, `f`, etc.\n */\nfunction NamedGroupRefOrChars(text, textLoc) {\n  var referenceRaw = text.slice(3, -1);\n  var reference = decodeUnicodeGroupName(referenceRaw);\n\n  if (namedGroups.hasOwnProperty(reference)) {\n    return Node({\n      type: 'Backreference',\n      kind: 'name',\n      number: namedGroups[reference],\n      reference: reference,\n      referenceRaw: referenceRaw\n    }, textLoc);\n  }\n\n  // Else `\\k<foo>` should be parsed as a list of `Char`s.\n  // This is really a 0.01% edge case, but we should handle it.\n\n  var startOffset = null;\n  var startLine = null;\n  var endLine = null;\n  var startColumn = null;\n\n  if (textLoc) {\n    startOffset = textLoc.startOffset;\n    startLine = textLoc.startLine;\n    endLine = textLoc.endLine;\n    startColumn = textLoc.startColumn;\n  }\n\n  var charRe = /^[\\w$<>]/;\n  var loc = void 0;\n\n  var chars = [\n  // Init to first \\k, taking 2 symbols.\n  Char(text.slice(1, 2), 'simple', startOffset ? {\n    startLine: startLine,\n    endLine: endLine,\n    startColumn: startColumn,\n    startOffset: startOffset,\n    endOffset: startOffset += 2,\n    endColumn: startColumn += 2\n  } : null)];\n\n  // For \\k\n  chars[0].escaped = true;\n\n  // Other symbols.\n  text = text.slice(2);\n\n  while (text.length > 0) {\n    var matched = null;\n\n    // Unicode, \\u003B or \\u{003B}\n    if ((matched = text.match(uReStart)) || (matched = text.match(ucpReStart))) {\n      if (startOffset) {\n        loc = {\n          startLine: startLine,\n          endLine: endLine,\n          startColumn: startColumn,\n          startOffset: startOffset,\n          endOffset: startOffset += matched[0].length,\n          endColumn: startColumn += matched[0].length\n        };\n      }\n      chars.push(Char(matched[0], 'unicode', loc));\n      text = text.slice(matched[0].length);\n    }\n\n    // Simple char.\n    else if (matched = text.match(charRe)) {\n        if (startOffset) {\n          loc = {\n            startLine: startLine,\n            endLine: endLine,\n            startColumn: startColumn,\n            startOffset: startOffset,\n            endOffset: ++startOffset,\n            endColumn: ++startColumn\n          };\n        }\n        chars.push(Char(matched[0], 'simple', loc));\n        text = text.slice(1);\n      }\n  }\n\n  return chars;\n}\n\n/**\n * Creates an AST node with a location.\n */\nfunction Node(node, loc) {\n  if (yy.options.captureLocations) {\n    node.loc = {\n      source: parsingString.slice(loc.startOffset, loc.endOffset),\n      start: {\n        line: loc.startLine,\n        column: loc.startColumn,\n        offset: loc.startOffset\n      },\n      end: {\n        line: loc.endLine,\n        column: loc.endColumn,\n        offset: loc.endOffset\n      }\n    };\n  }\n  return node;\n}\n\n/**\n * Creates location node.\n */\nfunction loc(start, end) {\n  if (!yy.options.captureLocations) {\n    return null;\n  }\n\n  return {\n    startOffset: start.startOffset,\n    endOffset: end.endOffset,\n    startLine: start.startLine,\n    endLine: end.endLine,\n    startColumn: start.startColumn,\n    endColumn: end.endColumn\n  };\n}\n\nfunction unexpectedToken(token) {\n  if (token.type === EOF) {\n    unexpectedEndOfInput();\n  }\n\n  tokenizer.throwUnexpectedToken(token.value, token.startLine, token.startColumn);\n}\n\nfunction unexpectedEndOfInput() {\n  parseError('Unexpected end of input.');\n}\n\nfunction parseError(message) {\n  throw new SyntaxError(message);\n}\n\nmodule.exports = yyparse;","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar regexpTreeParser = require('./generated/regexp-tree');\n\n/**\n * Original parse function.\n */\nvar generatedParseFn = regexpTreeParser.parse.bind(regexpTreeParser);\n\n/**\n * Parses a regular expression.\n *\n * Override original `regexpTreeParser.parse` to convert a value to a string,\n * since in regexp-tree we may pass strings, and RegExp instance.\n */\nregexpTreeParser.parse = function (regexp, options) {\n  return generatedParseFn('' + regexp, options);\n};\n\n// By default do not capture locations; callers may override.\nregexpTreeParser.setOptions({ captureLocations: false });\n\nmodule.exports = regexpTreeParser;","'use strict';\n\n/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\nvar NON_BINARY_PROP_NAMES_TO_ALIASES = {\n  General_Category: 'gc',\n  Script: 'sc',\n  Script_Extensions: 'scx'\n};\n\nvar NON_BINARY_ALIASES_TO_PROP_NAMES = inverseMap(NON_BINARY_PROP_NAMES_TO_ALIASES);\n\nvar BINARY_PROP_NAMES_TO_ALIASES = {\n  ASCII: 'ASCII',\n  ASCII_Hex_Digit: 'AHex',\n  Alphabetic: 'Alpha',\n  Any: 'Any',\n  Assigned: 'Assigned',\n  Bidi_Control: 'Bidi_C',\n  Bidi_Mirrored: 'Bidi_M',\n  Case_Ignorable: 'CI',\n  Cased: 'Cased',\n  Changes_When_Casefolded: 'CWCF',\n  Changes_When_Casemapped: 'CWCM',\n  Changes_When_Lowercased: 'CWL',\n  Changes_When_NFKC_Casefolded: 'CWKCF',\n  Changes_When_Titlecased: 'CWT',\n  Changes_When_Uppercased: 'CWU',\n  Dash: 'Dash',\n  Default_Ignorable_Code_Point: 'DI',\n  Deprecated: 'Dep',\n  Diacritic: 'Dia',\n  Emoji: 'Emoji',\n  Emoji_Component: 'Emoji_Component',\n  Emoji_Modifier: 'Emoji_Modifier',\n  Emoji_Modifier_Base: 'Emoji_Modifier_Base',\n  Emoji_Presentation: 'Emoji_Presentation',\n  Extended_Pictographic: 'Extended_Pictographic',\n  Extender: 'Ext',\n  Grapheme_Base: 'Gr_Base',\n  Grapheme_Extend: 'Gr_Ext',\n  Hex_Digit: 'Hex',\n  IDS_Binary_Operator: 'IDSB',\n  IDS_Trinary_Operator: 'IDST',\n  ID_Continue: 'IDC',\n  ID_Start: 'IDS',\n  Ideographic: 'Ideo',\n  Join_Control: 'Join_C',\n  Logical_Order_Exception: 'LOE',\n  Lowercase: 'Lower',\n  Math: 'Math',\n  Noncharacter_Code_Point: 'NChar',\n  Pattern_Syntax: 'Pat_Syn',\n  Pattern_White_Space: 'Pat_WS',\n  Quotation_Mark: 'QMark',\n  Radical: 'Radical',\n  Regional_Indicator: 'RI',\n  Sentence_Terminal: 'STerm',\n  Soft_Dotted: 'SD',\n  Terminal_Punctuation: 'Term',\n  Unified_Ideograph: 'UIdeo',\n  Uppercase: 'Upper',\n  Variation_Selector: 'VS',\n  White_Space: 'space',\n  XID_Continue: 'XIDC',\n  XID_Start: 'XIDS'\n};\n\nvar BINARY_ALIASES_TO_PROP_NAMES = inverseMap(BINARY_PROP_NAMES_TO_ALIASES);\n\nvar GENERAL_CATEGORY_VALUE_TO_ALIASES = {\n  Cased_Letter: 'LC',\n  Close_Punctuation: 'Pe',\n  Connector_Punctuation: 'Pc',\n  Control: ['Cc', 'cntrl'],\n  Currency_Symbol: 'Sc',\n  Dash_Punctuation: 'Pd',\n  Decimal_Number: ['Nd', 'digit'],\n  Enclosing_Mark: 'Me',\n  Final_Punctuation: 'Pf',\n  Format: 'Cf',\n  Initial_Punctuation: 'Pi',\n  Letter: 'L',\n  Letter_Number: 'Nl',\n  Line_Separator: 'Zl',\n  Lowercase_Letter: 'Ll',\n  Mark: ['M', 'Combining_Mark'],\n  Math_Symbol: 'Sm',\n  Modifier_Letter: 'Lm',\n  Modifier_Symbol: 'Sk',\n  Nonspacing_Mark: 'Mn',\n  Number: 'N',\n  Open_Punctuation: 'Ps',\n  Other: 'C',\n  Other_Letter: 'Lo',\n  Other_Number: 'No',\n  Other_Punctuation: 'Po',\n  Other_Symbol: 'So',\n  Paragraph_Separator: 'Zp',\n  Private_Use: 'Co',\n  Punctuation: ['P', 'punct'],\n  Separator: 'Z',\n  Space_Separator: 'Zs',\n  Spacing_Mark: 'Mc',\n  Surrogate: 'Cs',\n  Symbol: 'S',\n  Titlecase_Letter: 'Lt',\n  Unassigned: 'Cn',\n  Uppercase_Letter: 'Lu'\n};\n\nvar GENERAL_CATEGORY_VALUE_ALIASES_TO_VALUES = inverseMap(GENERAL_CATEGORY_VALUE_TO_ALIASES);\n\nvar SCRIPT_VALUE_TO_ALIASES = {\n  Adlam: 'Adlm',\n  Ahom: 'Ahom',\n  Anatolian_Hieroglyphs: 'Hluw',\n  Arabic: 'Arab',\n  Armenian: 'Armn',\n  Avestan: 'Avst',\n  Balinese: 'Bali',\n  Bamum: 'Bamu',\n  Bassa_Vah: 'Bass',\n  Batak: 'Batk',\n  Bengali: 'Beng',\n  Bhaiksuki: 'Bhks',\n  Bopomofo: 'Bopo',\n  Brahmi: 'Brah',\n  Braille: 'Brai',\n  Buginese: 'Bugi',\n  Buhid: 'Buhd',\n  Canadian_Aboriginal: 'Cans',\n  Carian: 'Cari',\n  Caucasian_Albanian: 'Aghb',\n  Chakma: 'Cakm',\n  Cham: 'Cham',\n  Cherokee: 'Cher',\n  Common: 'Zyyy',\n  Coptic: ['Copt', 'Qaac'],\n  Cuneiform: 'Xsux',\n  Cypriot: 'Cprt',\n  Cyrillic: 'Cyrl',\n  Deseret: 'Dsrt',\n  Devanagari: 'Deva',\n  Dogra: 'Dogr',\n  Duployan: 'Dupl',\n  Egyptian_Hieroglyphs: 'Egyp',\n  Elbasan: 'Elba',\n  Ethiopic: 'Ethi',\n  Georgian: 'Geor',\n  Glagolitic: 'Glag',\n  Gothic: 'Goth',\n  Grantha: 'Gran',\n  Greek: 'Grek',\n  Gujarati: 'Gujr',\n  Gunjala_Gondi: 'Gong',\n  Gurmukhi: 'Guru',\n  Han: 'Hani',\n  Hangul: 'Hang',\n  Hanifi_Rohingya: 'Rohg',\n  Hanunoo: 'Hano',\n  Hatran: 'Hatr',\n  Hebrew: 'Hebr',\n  Hiragana: 'Hira',\n  Imperial_Aramaic: 'Armi',\n  Inherited: ['Zinh', 'Qaai'],\n  Inscriptional_Pahlavi: 'Phli',\n  Inscriptional_Parthian: 'Prti',\n  Javanese: 'Java',\n  Kaithi: 'Kthi',\n  Kannada: 'Knda',\n  Katakana: 'Kana',\n  Kayah_Li: 'Kali',\n  Kharoshthi: 'Khar',\n  Khmer: 'Khmr',\n  Khojki: 'Khoj',\n  Khudawadi: 'Sind',\n  Lao: 'Laoo',\n  Latin: 'Latn',\n  Lepcha: 'Lepc',\n  Limbu: 'Limb',\n  Linear_A: 'Lina',\n  Linear_B: 'Linb',\n  Lisu: 'Lisu',\n  Lycian: 'Lyci',\n  Lydian: 'Lydi',\n  Mahajani: 'Mahj',\n  Makasar: 'Maka',\n  Malayalam: 'Mlym',\n  Mandaic: 'Mand',\n  Manichaean: 'Mani',\n  Marchen: 'Marc',\n  Medefaidrin: 'Medf',\n  Masaram_Gondi: 'Gonm',\n  Meetei_Mayek: 'Mtei',\n  Mende_Kikakui: 'Mend',\n  Meroitic_Cursive: 'Merc',\n  Meroitic_Hieroglyphs: 'Mero',\n  Miao: 'Plrd',\n  Modi: 'Modi',\n  Mongolian: 'Mong',\n  Mro: 'Mroo',\n  Multani: 'Mult',\n  Myanmar: 'Mymr',\n  Nabataean: 'Nbat',\n  New_Tai_Lue: 'Talu',\n  Newa: 'Newa',\n  Nko: 'Nkoo',\n  Nushu: 'Nshu',\n  Ogham: 'Ogam',\n  Ol_Chiki: 'Olck',\n  Old_Hungarian: 'Hung',\n  Old_Italic: 'Ital',\n  Old_North_Arabian: 'Narb',\n  Old_Permic: 'Perm',\n  Old_Persian: 'Xpeo',\n  Old_Sogdian: 'Sogo',\n  Old_South_Arabian: 'Sarb',\n  Old_Turkic: 'Orkh',\n  Oriya: 'Orya',\n  Osage: 'Osge',\n  Osmanya: 'Osma',\n  Pahawh_Hmong: 'Hmng',\n  Palmyrene: 'Palm',\n  Pau_Cin_Hau: 'Pauc',\n  Phags_Pa: 'Phag',\n  Phoenician: 'Phnx',\n  Psalter_Pahlavi: 'Phlp',\n  Rejang: 'Rjng',\n  Runic: 'Runr',\n  Samaritan: 'Samr',\n  Saurashtra: 'Saur',\n  Sharada: 'Shrd',\n  Shavian: 'Shaw',\n  Siddham: 'Sidd',\n  SignWriting: 'Sgnw',\n  Sinhala: 'Sinh',\n  Sogdian: 'Sogd',\n  Sora_Sompeng: 'Sora',\n  Soyombo: 'Soyo',\n  Sundanese: 'Sund',\n  Syloti_Nagri: 'Sylo',\n  Syriac: 'Syrc',\n  Tagalog: 'Tglg',\n  Tagbanwa: 'Tagb',\n  Tai_Le: 'Tale',\n  Tai_Tham: 'Lana',\n  Tai_Viet: 'Tavt',\n  Takri: 'Takr',\n  Tamil: 'Taml',\n  Tangut: 'Tang',\n  Telugu: 'Telu',\n  Thaana: 'Thaa',\n  Thai: 'Thai',\n  Tibetan: 'Tibt',\n  Tifinagh: 'Tfng',\n  Tirhuta: 'Tirh',\n  Ugaritic: 'Ugar',\n  Vai: 'Vaii',\n  Warang_Citi: 'Wara',\n  Yi: 'Yiii',\n  Zanabazar_Square: 'Zanb'\n};\n\nvar SCRIPT_VALUE_ALIASES_TO_VALUE = inverseMap(SCRIPT_VALUE_TO_ALIASES);\n\nfunction inverseMap(data) {\n  var inverse = {};\n\n  for (var name in data) {\n    if (!data.hasOwnProperty(name)) {\n      continue;\n    }\n    var value = data[name];\n    if (Array.isArray(value)) {\n      for (var i = 0; i < value.length; i++) {\n        inverse[value[i]] = name;\n      }\n    } else {\n      inverse[value] = name;\n    }\n  }\n\n  return inverse;\n}\n\nfunction isValidName(name) {\n  return NON_BINARY_PROP_NAMES_TO_ALIASES.hasOwnProperty(name) || NON_BINARY_ALIASES_TO_PROP_NAMES.hasOwnProperty(name) || BINARY_PROP_NAMES_TO_ALIASES.hasOwnProperty(name) || BINARY_ALIASES_TO_PROP_NAMES.hasOwnProperty(name);\n}\n\nfunction isValidValue(name, value) {\n  if (isGeneralCategoryName(name)) {\n    return isGeneralCategoryValue(value);\n  }\n\n  if (isScriptCategoryName(name)) {\n    return isScriptCategoryValue(value);\n  }\n\n  return false;\n}\n\nfunction isAlias(name) {\n  return NON_BINARY_ALIASES_TO_PROP_NAMES.hasOwnProperty(name) || BINARY_ALIASES_TO_PROP_NAMES.hasOwnProperty(name);\n}\n\nfunction isGeneralCategoryName(name) {\n  return name === 'General_Category' || name == 'gc';\n}\n\nfunction isScriptCategoryName(name) {\n  return name === 'Script' || name === 'Script_Extensions' || name === 'sc' || name === 'scx';\n}\n\nfunction isGeneralCategoryValue(value) {\n  return GENERAL_CATEGORY_VALUE_TO_ALIASES.hasOwnProperty(value) || GENERAL_CATEGORY_VALUE_ALIASES_TO_VALUES.hasOwnProperty(value);\n}\n\nfunction isScriptCategoryValue(value) {\n  return SCRIPT_VALUE_TO_ALIASES.hasOwnProperty(value) || SCRIPT_VALUE_ALIASES_TO_VALUE.hasOwnProperty(value);\n}\n\nfunction isBinaryPropertyName(name) {\n  return BINARY_PROP_NAMES_TO_ALIASES.hasOwnProperty(name) || BINARY_ALIASES_TO_PROP_NAMES.hasOwnProperty(name);\n}\n\nfunction getCanonicalName(name) {\n  if (NON_BINARY_ALIASES_TO_PROP_NAMES.hasOwnProperty(name)) {\n    return NON_BINARY_ALIASES_TO_PROP_NAMES[name];\n  }\n\n  if (BINARY_ALIASES_TO_PROP_NAMES.hasOwnProperty(name)) {\n    return BINARY_ALIASES_TO_PROP_NAMES[name];\n  }\n\n  return null;\n}\n\nfunction getCanonicalValue(value) {\n  if (GENERAL_CATEGORY_VALUE_ALIASES_TO_VALUES.hasOwnProperty(value)) {\n    return GENERAL_CATEGORY_VALUE_ALIASES_TO_VALUES[value];\n  }\n\n  if (SCRIPT_VALUE_ALIASES_TO_VALUE.hasOwnProperty(value)) {\n    return SCRIPT_VALUE_ALIASES_TO_VALUE[value];\n  }\n\n  if (BINARY_ALIASES_TO_PROP_NAMES.hasOwnProperty(value)) {\n    return BINARY_ALIASES_TO_PROP_NAMES[value];\n  }\n\n  return null;\n}\n\nmodule.exports = {\n  isAlias: isAlias,\n  isValidName: isValidName,\n  isValidValue: isValidValue,\n  isGeneralCategoryValue: isGeneralCategoryValue,\n  isScriptCategoryValue: isScriptCategoryValue,\n  isBinaryPropertyName: isBinaryPropertyName,\n  getCanonicalName: getCanonicalName,\n  getCanonicalValue: getCanonicalValue,\n\n  NON_BINARY_PROP_NAMES_TO_ALIASES: NON_BINARY_PROP_NAMES_TO_ALIASES,\n  NON_BINARY_ALIASES_TO_PROP_NAMES: NON_BINARY_ALIASES_TO_PROP_NAMES,\n\n  BINARY_PROP_NAMES_TO_ALIASES: BINARY_PROP_NAMES_TO_ALIASES,\n  BINARY_ALIASES_TO_PROP_NAMES: BINARY_ALIASES_TO_PROP_NAMES,\n\n  GENERAL_CATEGORY_VALUE_TO_ALIASES: GENERAL_CATEGORY_VALUE_TO_ALIASES,\n  GENERAL_CATEGORY_VALUE_ALIASES_TO_VALUES: GENERAL_CATEGORY_VALUE_ALIASES_TO_VALUES,\n\n  SCRIPT_VALUE_TO_ALIASES: SCRIPT_VALUE_TO_ALIASES,\n  SCRIPT_VALUE_ALIASES_TO_VALUE: SCRIPT_VALUE_ALIASES_TO_VALUE\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar compatTranspiler = require('./compat-transpiler');\nvar generator = require('./generator');\nvar optimizer = require('./optimizer');\nvar parser = require('./parser');\nvar _transform = require('./transform');\nvar _traverse = require('./traverse');\nvar fa = require('./interpreter/finite-automaton');\n\nvar _require = require('./compat-transpiler/runtime'),\n    RegExpTree = _require.RegExpTree;\n\n/**\n * An API object for RegExp processing (parsing/transform/generation).\n */\n\n\nvar regexpTree = {\n  /**\n   * Parser module exposed.\n   */\n  parser: parser,\n\n  /**\n   * Expose finite-automaton module.\n   */\n  fa: fa,\n\n  /**\n   * `TransformResult` exposed.\n   */\n  TransformResult: _transform.TransformResult,\n\n  /**\n   * Parses a regexp string, producing an AST.\n   *\n   * @param string regexp\n   *\n   *   a regular expression in different formats: string, AST, RegExp.\n   *\n   * @param Object options\n   *\n   *   parsing options for this parse call. Default are:\n   *\n   *     - captureLocations: boolean\n   *     - any other custom options\n   *\n   * @return Object AST\n   */\n  parse: function parse(regexp, options) {\n    return parser.parse('' + regexp, options);\n  },\n\n\n  /**\n   * Traverses a RegExp AST.\n   *\n   * @param Object ast\n   * @param Object | Array<Object> handlers\n   *\n   * Each `handler` is an object containing handler function for needed\n   * node types. Example:\n   *\n   *   regexpTree.traverse(ast, {\n   *     onChar(node) {\n   *       ...\n   *     },\n   *   });\n   *\n   * The value for a node type may also be an object with functions pre and post.\n   * This enables more context-aware analyses, e.g. measuring star height.\n   */\n  traverse: function traverse(ast, handlers, options) {\n    return _traverse.traverse(ast, handlers, options);\n  },\n\n\n  /**\n   * Transforms a regular expression.\n   *\n   * A regexp can be passed in different formats (string, regexp or AST),\n   * applying a set of transformations. It is a convenient wrapper\n   * on top of \"parse-traverse-generate\" tool chain.\n   *\n   * @param string | AST | RegExp regexp - a regular expression;\n   * @param Object | Array<Object> handlers - a list of handlers.\n   *\n   * @return TransformResult - a transformation result.\n   */\n  transform: function transform(regexp, handlers) {\n    return _transform.transform(regexp, handlers);\n  },\n\n\n  /**\n   * Generates a RegExp string from an AST.\n   *\n   * @param Object ast\n   *\n   * Invariant:\n   *\n   *   regexpTree.generate(regexpTree.parse('/[a-z]+/i')); // '/[a-z]+/i'\n   */\n  generate: function generate(ast) {\n    return generator.generate(ast);\n  },\n\n\n  /**\n   * Creates a RegExp object from a regexp string.\n   *\n   * @param string regexp\n   */\n  toRegExp: function toRegExp(regexp) {\n    var compat = this.compatTranspile(regexp);\n    return new RegExp(compat.getSource(), compat.getFlags());\n  },\n\n\n  /**\n   * Optimizes a regular expression by replacing some\n   * sub-expressions with their idiomatic patterns.\n   *\n   * @param string regexp\n   *\n   * @return TransformResult object\n   */\n  optimize: function optimize(regexp, whitelist) {\n    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        blacklist = _ref.blacklist;\n\n    return optimizer.optimize(regexp, { whitelist: whitelist, blacklist: blacklist });\n  },\n\n\n  /**\n   * Translates a regular expression in new syntax or in new format\n   * into equivalent expressions in old syntax.\n   *\n   * @param string regexp\n   *\n   * @return TransformResult object\n   */\n  compatTranspile: function compatTranspile(regexp, whitelist) {\n    return compatTranspiler.transform(regexp, whitelist);\n  },\n\n\n  /**\n   * Executes a regular expression on a string.\n   *\n   * @param RegExp|string re - a regular expression.\n   * @param string string - a testing string.\n   */\n  exec: function exec(re, string) {\n    if (typeof re === 'string') {\n      var compat = this.compatTranspile(re);\n      var extra = compat.getExtra();\n\n      if (extra.namedCapturingGroups) {\n        re = new RegExpTree(compat.toRegExp(), {\n          flags: compat.getFlags(),\n          source: compat.getSource(),\n          groups: extra.namedCapturingGroups\n        });\n      } else {\n        re = compat.toRegExp();\n      }\n    }\n\n    return re.exec(string);\n  }\n};\n\nmodule.exports = regexpTree;","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar generator = require('../generator');\nvar parser = require('../parser');\nvar traverse = require('../traverse');\n\n/**\n * Transform result.\n */\n\nvar TransformResult = function () {\n  /**\n   * Initializes a transform result for an AST.\n   *\n   * @param Object ast - an AST node\n   * @param mixed extra - any extra data a transform may return\n   */\n  function TransformResult(ast) {\n    var extra = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    _classCallCheck(this, TransformResult);\n\n    this._ast = ast;\n    this._source = null;\n    this._string = null;\n    this._regexp = null;\n    this._extra = extra;\n  }\n\n  _createClass(TransformResult, [{\n    key: 'getAST',\n    value: function getAST() {\n      return this._ast;\n    }\n  }, {\n    key: 'setExtra',\n    value: function setExtra(extra) {\n      this._extra = extra;\n    }\n  }, {\n    key: 'getExtra',\n    value: function getExtra() {\n      return this._extra;\n    }\n  }, {\n    key: 'toRegExp',\n    value: function toRegExp() {\n      if (!this._regexp) {\n        this._regexp = new RegExp(this.getSource(), this._ast.flags);\n      }\n      return this._regexp;\n    }\n  }, {\n    key: 'getSource',\n    value: function getSource() {\n      if (!this._source) {\n        this._source = generator.generate(this._ast.body);\n      }\n      return this._source;\n    }\n  }, {\n    key: 'getFlags',\n    value: function getFlags() {\n      return this._ast.flags;\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      if (!this._string) {\n        this._string = generator.generate(this._ast);\n      }\n      return this._string;\n    }\n  }]);\n\n  return TransformResult;\n}();\n\nmodule.exports = {\n  /**\n   * Expose `TransformResult`.\n   */\n  TransformResult: TransformResult,\n\n  /**\n   * Transforms a regular expression applying a set of\n   * transformation handlers.\n   *\n   * @param string | AST | RegExp:\n   *\n   *   a regular expression in different representations: a string,\n   *   a RegExp object, or an AST.\n   *\n   * @param Object | Array<Object>:\n   *\n   *   a handler (or a list of handlers) from `traverse` API.\n   *\n   * @return TransformResult instance.\n   *\n   * Example:\n   *\n   *   transform(/[a-z]/i, {\n   *     onChar(path) {\n   *       const {node} = path;\n   *\n   *       if (...) {\n   *         path.remove();\n   *       }\n   *     }\n   *   });\n   */\n  transform: function transform(regexp, handlers) {\n    var ast = regexp;\n\n    if (regexp instanceof RegExp) {\n      regexp = '' + regexp;\n    }\n\n    if (typeof regexp === 'string') {\n      ast = parser.parse(regexp, {\n        captureLocations: true\n      });\n    }\n\n    traverse.traverse(ast, handlers);\n\n    return new TransformResult(ast);\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * Flattens a nested disjunction node to a list.\n *\n * /a|b|c|d/\n *\n * {{{a, b}, c}, d} -> [a, b, c, d]\n */\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction disjunctionToList(node) {\n  if (node.type !== 'Disjunction') {\n    throw new TypeError('Expected \"Disjunction\" node, got \"' + node.type + '\"');\n  }\n\n  var list = [];\n\n  if (node.left && node.left.type === 'Disjunction') {\n    list.push.apply(list, _toConsumableArray(disjunctionToList(node.left)).concat([node.right]));\n  } else {\n    list.push(node.left, node.right);\n  }\n\n  return list;\n}\n\n/**\n * Builds a nested disjunction node from a list.\n *\n * /a|b|c|d/\n *\n * [a, b, c, d] -> {{{a, b}, c}, d}\n */\nfunction listToDisjunction(list) {\n  return list.reduce(function (left, right) {\n    return {\n      type: 'Disjunction',\n      left: left,\n      right: right\n    };\n  });\n}\n\n/**\n * Increases a quantifier by one.\n * Does not change greediness.\n * * -> +\n * + -> {2,}\n * ? -> {1,2}\n * {2} -> {3}\n * {2,} -> {3,}\n * {2,3} -> {3,4}\n */\nfunction increaseQuantifierByOne(quantifier) {\n  if (quantifier.kind === '*') {\n\n    quantifier.kind = '+';\n  } else if (quantifier.kind === '+') {\n\n    quantifier.kind = 'Range';\n    quantifier.from = 2;\n    delete quantifier.to;\n  } else if (quantifier.kind === '?') {\n\n    quantifier.kind = 'Range';\n    quantifier.from = 1;\n    quantifier.to = 2;\n  } else if (quantifier.kind === 'Range') {\n\n    quantifier.from += 1;\n    if (quantifier.to) {\n      quantifier.to += 1;\n    }\n  }\n}\n\nmodule.exports = {\n  disjunctionToList: disjunctionToList,\n  listToDisjunction: listToDisjunction,\n  increaseQuantifierByOne: increaseQuantifierByOne\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar NodePath = require('./node-path');\n\n/**\n * Does an actual AST traversal, using visitor pattern,\n * and calling set of callbacks.\n *\n * Based on https://github.com/olov/ast-traverse\n *\n * Expects AST in Mozilla Parser API: nodes which are supposed to be\n * handled should have `type` property.\n *\n * @param Object root - a root node to start traversal from.\n *\n * @param Object options - an object with set of callbacks:\n *\n *   - `pre(node, parent, prop, index)` - a hook called on node enter\n *   - `post`(node, parent, prop, index) - a hook called on node exit\n *   - `skipProperty(prop)` - a predicated whether a property should be skipped\n */\nfunction astTraverse(root) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var pre = options.pre;\n  var post = options.post;\n  var skipProperty = options.skipProperty;\n\n  function visit(node, parent, prop, idx) {\n    if (!node || typeof node.type !== 'string') {\n      return;\n    }\n\n    var res = undefined;\n    if (pre) {\n      res = pre(node, parent, prop, idx);\n    }\n\n    if (res !== false) {\n\n      // A node can be replaced during traversal, so we have to\n      // recalculate it from the parent, to avoid traversing \"dead\" nodes.\n      if (parent && parent[prop]) {\n        if (!isNaN(idx)) {\n          node = parent[prop][idx];\n        } else {\n          node = parent[prop];\n        }\n      }\n\n      for (var _prop in node) {\n        if (node.hasOwnProperty(_prop)) {\n          if (skipProperty ? skipProperty(_prop, node) : _prop[0] === '$') {\n            continue;\n          }\n\n          var child = node[_prop];\n\n          // Collection node.\n          //\n          // NOTE: a node (or several nodes) can be removed or inserted\n          // during traversal.\n          //\n          // Current traversing index is stored on top of the\n          // `NodePath.traversingIndexStack`. The stack is used to support\n          // recursive nature of the traversal.\n          //\n          // In this case `NodePath.traversingIndex` (which we use here) is\n          // updated in the NodePath remove/insert methods.\n          //\n          if (Array.isArray(child)) {\n            var index = 0;\n            NodePath.traversingIndexStack.push(index);\n            while (index < child.length) {\n              visit(child[index], node, _prop, index);\n              index = NodePath.updateTraversingIndex(+1);\n            }\n            NodePath.traversingIndexStack.pop();\n          }\n\n          // Simple node.\n          else {\n              visit(child, node, _prop);\n            }\n        }\n      }\n    }\n\n    if (post) {\n      post(node, parent, prop, idx);\n    }\n  }\n\n  visit(root, null);\n}\n\nmodule.exports = {\n  /**\n   * Traverses an AST.\n   *\n   * @param Object ast - an AST node\n   *\n   * @param Object | Array<Object> handlers:\n   *\n   *   an object (or an array of objects)\n   *\n   *   Each such object contains a handler function per node.\n   *   In case of an array of handlers, they are applied in order.\n   *   A handler may return a transformed node (or a different type).\n   *\n   *   The per-node function may instead be an object with functions pre and post.\n   *   pre is called before visiting the node, post after.\n   *   If a handler is a function, it is treated as the pre function, with an empty post.\n   *\n   * @param Object options:\n   *\n   *   a config object, specifying traversal options:\n   *\n   *   `asNodes`: boolean - whether handlers should receives raw AST nodes\n   *   (false by default), instead of a `NodePath` wrapper. Note, by default\n   *   `NodePath` wrapper provides a set of convenient method to manipulate\n   *   a traversing AST, and also has access to all parents list. A raw\n   *   nodes traversal should be used in rare cases, when no `NodePath`\n   *   features are needed.\n   *\n   * Special hooks:\n   *\n   *   - `shouldRun(ast)` - a predicate determining whether the handler\n   *                        should be applied.\n   *\n   * NOTE: Multiple handlers are used as an optimization of applying all of\n   * them in one AST traversal pass.\n   */\n  traverse: function traverse(ast, handlers) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : { asNodes: false };\n\n\n    if (!Array.isArray(handlers)) {\n      handlers = [handlers];\n    }\n\n    // Filter out handlers by result of `shouldRun`, if the method is present.\n    handlers = handlers.filter(function (handler) {\n      if (typeof handler.shouldRun !== 'function') {\n        return true;\n      }\n      return handler.shouldRun(ast);\n    });\n\n    NodePath.initRegistry();\n\n    // Allow handlers to initializer themselves.\n    handlers.forEach(function (handler) {\n      if (typeof handler.init === 'function') {\n        handler.init(ast);\n      }\n    });\n\n    function getPathFor(node, parent, prop, index) {\n      var parentPath = NodePath.getForNode(parent);\n      var nodePath = NodePath.getForNode(node, parentPath, prop, index);\n\n      return nodePath;\n    }\n\n    // Handle actual nodes.\n    astTraverse(ast, {\n      /**\n       * Handler on node enter.\n       */\n      pre: function pre(node, parent, prop, index) {\n        var nodePath = void 0;\n        if (!options.asNodes) {\n          nodePath = getPathFor(node, parent, prop, index);\n        }\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = handlers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var handler = _step.value;\n\n            // \"Catch-all\" `*` handler.\n            if (typeof handler['*'] === 'function') {\n              if (nodePath) {\n                // A path/node can be removed by some previous handler.\n                if (!nodePath.isRemoved()) {\n                  var handlerResult = handler['*'](nodePath);\n                  // Explicitly stop traversal.\n                  if (handlerResult === false) {\n                    return false;\n                  }\n                }\n              } else {\n                handler['*'](node, parent, prop, index);\n              }\n            }\n\n            // Per-node handler.\n            var handlerFuncPre = void 0;\n            if (typeof handler[node.type] === 'function') {\n              handlerFuncPre = handler[node.type];\n            } else if (typeof handler[node.type] === 'object' && typeof handler[node.type].pre === 'function') {\n              handlerFuncPre = handler[node.type].pre;\n            }\n\n            if (handlerFuncPre) {\n              if (nodePath) {\n                // A path/node can be removed by some previous handler.\n                if (!nodePath.isRemoved()) {\n                  var _handlerResult = handlerFuncPre.call(handler, nodePath);\n                  // Explicitly stop traversal.\n                  if (_handlerResult === false) {\n                    return false;\n                  }\n                }\n              } else {\n                handlerFuncPre.call(handler, node, parent, prop, index);\n              }\n            }\n          } // Loop over handlers\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      },\n      // pre func\n\n      /**\n       * Handler on node exit.\n       */\n      post: function post(node, parent, prop, index) {\n        if (!node) {\n          return;\n        }\n\n        var nodePath = void 0;\n        if (!options.asNodes) {\n          nodePath = getPathFor(node, parent, prop, index);\n        }\n\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = handlers[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var handler = _step2.value;\n\n            // Per-node handler.\n            var handlerFuncPost = void 0;\n            if (typeof handler[node.type] === 'object' && typeof handler[node.type].post === 'function') {\n              handlerFuncPost = handler[node.type].post;\n            }\n\n            if (handlerFuncPost) {\n              if (nodePath) {\n                // A path/node can be removed by some previous handler.\n                if (!nodePath.isRemoved()) {\n                  var handlerResult = handlerFuncPost.call(handler, nodePath);\n                  // Explicitly stop traversal.\n                  if (handlerResult === false) {\n                    return false;\n                  }\n                }\n              } else {\n                handlerFuncPost.call(handler, node, parent, prop, index);\n              }\n            }\n          } // Loop over handlers\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      },\n      // post func\n\n      /**\n       * Skip locations by default.\n       */\n      skipProperty: function skipProperty(prop) {\n        return prop === 'loc';\n      }\n    });\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DEFAULT_COLLECTION_PROP = 'expressions';\nvar DEFAULT_SINGLE_PROP = 'expression';\n\n/**\n * NodePath class encapsulates a traversing node,\n * its parent node, property name in the parent node, and\n * an index (in case if a node is part of a collection).\n * It also provides set of methods for AST manipulation.\n */\n\nvar NodePath = function () {\n  /**\n   * NodePath constructor.\n   *\n   * @param Object node - an AST node\n   * @param NodePath parentPath - a nullable parent path\n   * @param string property - property name of the node in the parent\n   * @param number index - index of the node in a collection.\n   */\n  function NodePath(node) {\n    var parentPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var property = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var index = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n    _classCallCheck(this, NodePath);\n\n    this.node = node;\n    this.parentPath = parentPath;\n    this.parent = parentPath ? parentPath.node : null;\n    this.property = property;\n    this.index = index;\n  }\n\n  _createClass(NodePath, [{\n    key: '_enforceProp',\n    value: function _enforceProp(property) {\n      if (!this.node.hasOwnProperty(property)) {\n        throw new Error('Node of type ' + this.node.type + ' doesn\\'t have \"' + property + '\" collection.');\n      }\n    }\n\n    /**\n     * Sets a node into a children collection or the single child.\n     * By default child nodes are supposed to be under `expressions` property.\n     * An explicit property can be passed.\n     *\n     * @param Object node - a node to set into a collection or as single child\n     * @param number index - index at which to set\n     * @param string property - name of the collection or single property\n     */\n\n  }, {\n    key: 'setChild',\n    value: function setChild(node) {\n      var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var property = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n\n      var childPath = void 0;\n      if (index != null) {\n        if (!property) {\n          property = DEFAULT_COLLECTION_PROP;\n        }\n        this._enforceProp(property);\n        this.node[property][index] = node;\n        childPath = NodePath.getForNode(node, this, property, index);\n      } else {\n        if (!property) {\n          property = DEFAULT_SINGLE_PROP;\n        }\n        this._enforceProp(property);\n        this.node[property] = node;\n        childPath = NodePath.getForNode(node, this, property, null);\n      }\n      return childPath;\n    }\n\n    /**\n     * Appends a node to a children collection.\n     * By default child nodes are supposed to be under `expressions` property.\n     * An explicit property can be passed.\n     *\n     * @param Object node - a node to set into a collection or as single child\n     * @param string property - name of the collection or single property\n     */\n\n  }, {\n    key: 'appendChild',\n    value: function appendChild(node) {\n      var property = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\n      if (!property) {\n        property = DEFAULT_COLLECTION_PROP;\n      }\n      this._enforceProp(property);\n      var end = this.node[property].length;\n      return this.setChild(node, end, property);\n    }\n\n    /**\n     * Inserts a node into a collection.\n     * By default child nodes are supposed to be under `expressions` property.\n     * An explicit property can be passed.\n     *\n     * @param Object node - a node to insert into a collection\n     * @param number index - index at which to insert\n     * @param string property - name of the collection property\n     */\n\n  }, {\n    key: 'insertChildAt',\n    value: function insertChildAt(node, index) {\n      var property = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_COLLECTION_PROP;\n\n      this._enforceProp(property);\n\n      this.node[property].splice(index, 0, node);\n\n      // If we inserted a node before the traversing index,\n      // we should increase the later.\n      if (index <= NodePath.getTraversingIndex()) {\n        NodePath.updateTraversingIndex(+1);\n      }\n\n      this._rebuildIndex(this.node, property);\n    }\n\n    /**\n     * Removes a node.\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove() {\n      if (this.isRemoved()) {\n        return;\n      }\n      NodePath.registry.delete(this.node);\n\n      this.node = null;\n\n      if (!this.parent) {\n        return;\n      }\n\n      // A node is in a collection.\n      if (this.index !== null) {\n        this.parent[this.property].splice(this.index, 1);\n\n        // If we remove a node before the traversing index,\n        // we should increase the later.\n        if (this.index <= NodePath.getTraversingIndex()) {\n          NodePath.updateTraversingIndex(-1);\n        }\n\n        // Rebuild index.\n        this._rebuildIndex(this.parent, this.property);\n\n        this.index = null;\n        this.property = null;\n\n        return;\n      }\n\n      // A simple node.\n      delete this.parent[this.property];\n      this.property = null;\n    }\n\n    /**\n     * Rebuilds child nodes index (used on remove/insert).\n     */\n\n  }, {\n    key: '_rebuildIndex',\n    value: function _rebuildIndex(parent, property) {\n      var parentPath = NodePath.getForNode(parent);\n\n      for (var i = 0; i < parent[property].length; i++) {\n        var path = NodePath.getForNode(parent[property][i], parentPath, property, i);\n        path.index = i;\n      }\n    }\n\n    /**\n     * Whether the path was removed.\n     */\n\n  }, {\n    key: 'isRemoved',\n    value: function isRemoved() {\n      return this.node === null;\n    }\n\n    /**\n     * Replaces a node with the passed one.\n     */\n\n  }, {\n    key: 'replace',\n    value: function replace(newNode) {\n      NodePath.registry.delete(this.node);\n\n      this.node = newNode;\n\n      if (!this.parent) {\n        return null;\n      }\n\n      // A node is in a collection.\n      if (this.index !== null) {\n        this.parent[this.property][this.index] = newNode;\n      }\n\n      // A simple node.\n      else {\n          this.parent[this.property] = newNode;\n        }\n\n      // Rebuild the node path for the new node.\n      return NodePath.getForNode(newNode, this.parentPath, this.property, this.index);\n    }\n\n    /**\n     * Updates a node inline.\n     */\n\n  }, {\n    key: 'update',\n    value: function update(nodeProps) {\n      Object.assign(this.node, nodeProps);\n    }\n\n    /**\n     * Returns parent.\n     */\n\n  }, {\n    key: 'getParent',\n    value: function getParent() {\n      return this.parentPath;\n    }\n\n    /**\n     * Returns nth child.\n     */\n\n  }, {\n    key: 'getChild',\n    value: function getChild() {\n      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.node.expressions) {\n        return NodePath.getForNode(this.node.expressions[n], this, DEFAULT_COLLECTION_PROP, n);\n      } else if (this.node.expression && n == 0) {\n        return NodePath.getForNode(this.node.expression, this, DEFAULT_SINGLE_PROP);\n      }\n      return null;\n    }\n\n    /**\n     * Whether a path node is syntactically equal to the passed one.\n     *\n     * NOTE: we don't rely on `source` property from the `loc` data\n     * (which would be the fastest comparison), since it might be unsync\n     * after several modifications. We use here simple `JSON.stringify`\n     * excluding the `loc` data.\n     *\n     * @param NodePath other - path to compare to.\n     * @return boolean\n     */\n\n  }, {\n    key: 'hasEqualSource',\n    value: function hasEqualSource(path) {\n      return JSON.stringify(this.node, jsonSkipLoc) === JSON.stringify(path.node, jsonSkipLoc);\n    }\n\n    /**\n     * JSON-encodes a node skipping location.\n     */\n\n  }, {\n    key: 'jsonEncode',\n    value: function jsonEncode() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          format = _ref.format,\n          useLoc = _ref.useLoc;\n\n      return JSON.stringify(this.node, useLoc ? null : jsonSkipLoc, format);\n    }\n\n    /**\n     * Returns previous sibling.\n     */\n\n  }, {\n    key: 'getPreviousSibling',\n    value: function getPreviousSibling() {\n      if (!this.parent || this.index == null) {\n        return null;\n      }\n      return NodePath.getForNode(this.parent[this.property][this.index - 1], NodePath.getForNode(this.parent), this.property, this.index - 1);\n    }\n\n    /**\n     * Returns next sibling.\n     */\n\n  }, {\n    key: 'getNextSibling',\n    value: function getNextSibling() {\n      if (!this.parent || this.index == null) {\n        return null;\n      }\n      return NodePath.getForNode(this.parent[this.property][this.index + 1], NodePath.getForNode(this.parent), this.property, this.index + 1);\n    }\n\n    /**\n     * Returns a NodePath instance for a node.\n     *\n     * The same NodePath can be reused in several places, e.g.\n     * a parent node passed for all its children.\n     */\n\n  }], [{\n    key: 'getForNode',\n    value: function getForNode(node) {\n      var parentPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var prop = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var index = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -1;\n\n      if (!node) {\n        return null;\n      }\n\n      if (!NodePath.registry.has(node)) {\n        NodePath.registry.set(node, new NodePath(node, parentPath, prop, index == -1 ? null : index));\n      }\n\n      var path = NodePath.registry.get(node);\n\n      if (parentPath !== null) {\n        path.parentPath = parentPath;\n        path.parent = path.parentPath.node;\n      }\n\n      if (prop !== null) {\n        path.property = prop;\n      }\n\n      if (index >= 0) {\n        path.index = index;\n      }\n\n      return path;\n    }\n\n    /**\n     * Initializes the NodePath registry. The registry is a map from\n     * a node to its NodePath instance.\n     */\n\n  }, {\n    key: 'initRegistry',\n    value: function initRegistry() {\n      if (!NodePath.registry) {\n        NodePath.registry = new Map();\n      }\n      NodePath.registry.clear();\n    }\n\n    /**\n     * Updates index of a currently traversing collection.\n     */\n\n  }, {\n    key: 'updateTraversingIndex',\n    value: function updateTraversingIndex(dx) {\n      return NodePath.traversingIndexStack[NodePath.traversingIndexStack.length - 1] += dx;\n    }\n\n    /**\n     * Returns current traversing index.\n     */\n\n  }, {\n    key: 'getTraversingIndex',\n    value: function getTraversingIndex() {\n      return NodePath.traversingIndexStack[NodePath.traversingIndexStack.length - 1];\n    }\n  }]);\n\n  return NodePath;\n}();\n\nNodePath.initRegistry();\n\n/**\n * Index of a currently traversing collection is stored on top of the\n * `NodePath.traversingIndexStack`. Remove/insert methods can adjust\n * this index.\n */\nNodePath.traversingIndexStack = [];\n\n// Helper function used to skip `loc` in JSON operations.\nfunction jsonSkipLoc(prop, value) {\n  if (prop === 'loc') {\n    return undefined;\n  }\n  return value;\n}\n\nmodule.exports = NodePath;","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * Performs a deep copy of an simple object.\n * Only handles scalar values, arrays and objects.\n *\n * @param obj Object\n */\n\nmodule.exports = function clone(obj) {\n  if (obj === null || typeof obj !== 'object') {\n    return obj;\n  }\n  var res = void 0;\n  if (Array.isArray(obj)) {\n    res = [];\n  } else {\n    res = {};\n  }\n  for (var i in obj) {\n    res[i] = clone(obj[i]);\n  }\n  return res;\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nmodule.exports = require('./dist/regexp-tree');","\"use strict\";const s={chrome:{releases:[[\"1\",\"2008-12-11\",\"r\",\"w\",\"528\"],[\"2\",\"2009-05-21\",\"r\",\"w\",\"530\"],[\"3\",\"2009-09-15\",\"r\",\"w\",\"532\"],[\"4\",\"2010-01-25\",\"r\",\"w\",\"532.5\"],[\"5\",\"2010-05-25\",\"r\",\"w\",\"533\"],[\"6\",\"2010-09-02\",\"r\",\"w\",\"534.3\"],[\"7\",\"2010-10-19\",\"r\",\"w\",\"534.7\"],[\"8\",\"2010-12-02\",\"r\",\"w\",\"534.10\"],[\"9\",\"2011-02-03\",\"r\",\"w\",\"534.13\"],[\"10\",\"2011-03-08\",\"r\",\"w\",\"534.16\"],[\"11\",\"2011-04-27\",\"r\",\"w\",\"534.24\"],[\"12\",\"2011-06-07\",\"r\",\"w\",\"534.30\"],[\"13\",\"2011-08-02\",\"r\",\"w\",\"535.1\"],[\"14\",\"2011-09-16\",\"r\",\"w\",\"535.1\"],[\"15\",\"2011-10-25\",\"r\",\"w\",\"535.2\"],[\"16\",\"2011-12-13\",\"r\",\"w\",\"535.7\"],[\"17\",\"2012-02-08\",\"r\",\"w\",\"535.11\"],[\"18\",\"2012-03-28\",\"r\",\"w\",\"535.19\"],[\"19\",\"2012-05-15\",\"r\",\"w\",\"536.5\"],[\"20\",\"2012-06-26\",\"r\",\"w\",\"536.10\"],[\"21\",\"2012-07-31\",\"r\",\"w\",\"537.1\"],[\"22\",\"2012-09-25\",\"r\",\"w\",\"537.4\"],[\"23\",\"2012-11-06\",\"r\",\"w\",\"537.11\"],[\"24\",\"2013-01-10\",\"r\",\"w\",\"537.17\"],[\"25\",\"2013-02-21\",\"r\",\"w\",\"537.22\"],[\"26\",\"2013-03-26\",\"r\",\"w\",\"537.31\"],[\"27\",\"2013-05-21\",\"r\",\"w\",\"537.36\"],[\"28\",\"2013-07-09\",\"r\",\"b\",\"28\"],[\"29\",\"2013-08-20\",\"r\",\"b\",\"29\"],[\"30\",\"2013-10-01\",\"r\",\"b\",\"30\"],[\"31\",\"2013-11-12\",\"r\",\"b\",\"31\"],[\"32\",\"2014-01-14\",\"r\",\"b\",\"32\"],[\"33\",\"2014-02-20\",\"r\",\"b\",\"33\"],[\"34\",\"2014-04-08\",\"r\",\"b\",\"34\"],[\"35\",\"2014-05-20\",\"r\",\"b\",\"35\"],[\"36\",\"2014-07-16\",\"r\",\"b\",\"36\"],[\"37\",\"2014-08-26\",\"r\",\"b\",\"37\"],[\"38\",\"2014-10-07\",\"r\",\"b\",\"38\"],[\"39\",\"2014-11-18\",\"r\",\"b\",\"39\"],[\"40\",\"2015-01-21\",\"r\",\"b\",\"40\"],[\"41\",\"2015-03-03\",\"r\",\"b\",\"41\"],[\"42\",\"2015-04-14\",\"r\",\"b\",\"42\"],[\"43\",\"2015-05-19\",\"r\",\"b\",\"43\"],[\"44\",\"2015-07-21\",\"r\",\"b\",\"44\"],[\"45\",\"2015-09-01\",\"r\",\"b\",\"45\"],[\"46\",\"2015-10-13\",\"r\",\"b\",\"46\"],[\"47\",\"2015-12-01\",\"r\",\"b\",\"47\"],[\"48\",\"2016-01-20\",\"r\",\"b\",\"48\"],[\"49\",\"2016-03-02\",\"r\",\"b\",\"49\"],[\"50\",\"2016-04-13\",\"r\",\"b\",\"50\"],[\"51\",\"2016-05-25\",\"r\",\"b\",\"51\"],[\"52\",\"2016-07-20\",\"r\",\"b\",\"52\"],[\"53\",\"2016-08-31\",\"r\",\"b\",\"53\"],[\"54\",\"2016-10-12\",\"r\",\"b\",\"54\"],[\"55\",\"2016-12-01\",\"r\",\"b\",\"55\"],[\"56\",\"2017-01-25\",\"r\",\"b\",\"56\"],[\"57\",\"2017-03-09\",\"r\",\"b\",\"57\"],[\"58\",\"2017-04-19\",\"r\",\"b\",\"58\"],[\"59\",\"2017-06-05\",\"r\",\"b\",\"59\"],[\"60\",\"2017-07-25\",\"r\",\"b\",\"60\"],[\"61\",\"2017-09-05\",\"r\",\"b\",\"61\"],[\"62\",\"2017-10-17\",\"r\",\"b\",\"62\"],[\"63\",\"2017-12-06\",\"r\",\"b\",\"63\"],[\"64\",\"2018-01-23\",\"r\",\"b\",\"64\"],[\"65\",\"2018-03-06\",\"r\",\"b\",\"65\"],[\"66\",\"2018-04-17\",\"r\",\"b\",\"66\"],[\"67\",\"2018-05-29\",\"r\",\"b\",\"67\"],[\"68\",\"2018-07-24\",\"r\",\"b\",\"68\"],[\"69\",\"2018-09-04\",\"r\",\"b\",\"69\"],[\"70\",\"2018-10-16\",\"r\",\"b\",\"70\"],[\"71\",\"2018-12-04\",\"r\",\"b\",\"71\"],[\"72\",\"2019-01-29\",\"r\",\"b\",\"72\"],[\"73\",\"2019-03-12\",\"r\",\"b\",\"73\"],[\"74\",\"2019-04-23\",\"r\",\"b\",\"74\"],[\"75\",\"2019-06-04\",\"r\",\"b\",\"75\"],[\"76\",\"2019-07-30\",\"r\",\"b\",\"76\"],[\"77\",\"2019-09-10\",\"r\",\"b\",\"77\"],[\"78\",\"2019-10-22\",\"r\",\"b\",\"78\"],[\"79\",\"2019-12-10\",\"r\",\"b\",\"79\"],[\"80\",\"2020-02-04\",\"r\",\"b\",\"80\"],[\"81\",\"2020-04-07\",\"r\",\"b\",\"81\"],[\"83\",\"2020-05-19\",\"r\",\"b\",\"83\"],[\"84\",\"2020-07-27\",\"r\",\"b\",\"84\"],[\"85\",\"2020-08-25\",\"r\",\"b\",\"85\"],[\"86\",\"2020-10-20\",\"r\",\"b\",\"86\"],[\"87\",\"2020-11-17\",\"r\",\"b\",\"87\"],[\"88\",\"2021-01-19\",\"r\",\"b\",\"88\"],[\"89\",\"2021-03-02\",\"r\",\"b\",\"89\"],[\"90\",\"2021-04-13\",\"r\",\"b\",\"90\"],[\"91\",\"2021-05-25\",\"r\",\"b\",\"91\"],[\"92\",\"2021-07-20\",\"r\",\"b\",\"92\"],[\"93\",\"2021-08-31\",\"r\",\"b\",\"93\"],[\"94\",\"2021-09-21\",\"r\",\"b\",\"94\"],[\"95\",\"2021-10-19\",\"r\",\"b\",\"95\"],[\"96\",\"2021-11-15\",\"r\",\"b\",\"96\"],[\"97\",\"2022-01-04\",\"r\",\"b\",\"97\"],[\"98\",\"2022-02-01\",\"r\",\"b\",\"98\"],[\"99\",\"2022-03-01\",\"r\",\"b\",\"99\"],[\"100\",\"2022-03-29\",\"r\",\"b\",\"100\"],[\"101\",\"2022-04-26\",\"r\",\"b\",\"101\"],[\"102\",\"2022-05-24\",\"r\",\"b\",\"102\"],[\"103\",\"2022-06-21\",\"r\",\"b\",\"103\"],[\"104\",\"2022-08-02\",\"r\",\"b\",\"104\"],[\"105\",\"2022-09-02\",\"r\",\"b\",\"105\"],[\"106\",\"2022-09-27\",\"r\",\"b\",\"106\"],[\"107\",\"2022-10-25\",\"r\",\"b\",\"107\"],[\"108\",\"2022-11-29\",\"r\",\"b\",\"108\"],[\"109\",\"2023-01-10\",\"r\",\"b\",\"109\"],[\"110\",\"2023-02-07\",\"r\",\"b\",\"110\"],[\"111\",\"2023-03-07\",\"r\",\"b\",\"111\"],[\"112\",\"2023-04-04\",\"r\",\"b\",\"112\"],[\"113\",\"2023-05-02\",\"r\",\"b\",\"113\"],[\"114\",\"2023-05-30\",\"r\",\"b\",\"114\"],[\"115\",\"2023-07-18\",\"r\",\"b\",\"115\"],[\"116\",\"2023-08-15\",\"r\",\"b\",\"116\"],[\"117\",\"2023-09-12\",\"r\",\"b\",\"117\"],[\"118\",\"2023-10-10\",\"r\",\"b\",\"118\"],[\"119\",\"2023-10-31\",\"r\",\"b\",\"119\"],[\"120\",\"2023-12-05\",\"r\",\"b\",\"120\"],[\"121\",\"2024-01-23\",\"r\",\"b\",\"121\"],[\"122\",\"2024-02-20\",\"r\",\"b\",\"122\"],[\"123\",\"2024-03-19\",\"r\",\"b\",\"123\"],[\"124\",\"2024-04-16\",\"r\",\"b\",\"124\"],[\"125\",\"2024-05-14\",\"r\",\"b\",\"125\"],[\"126\",\"2024-06-11\",\"r\",\"b\",\"126\"],[\"127\",\"2024-07-23\",\"r\",\"b\",\"127\"],[\"128\",\"2024-08-20\",\"r\",\"b\",\"128\"],[\"129\",\"2024-09-17\",\"r\",\"b\",\"129\"],[\"130\",\"2024-10-15\",\"r\",\"b\",\"130\"],[\"131\",\"2024-11-12\",\"r\",\"b\",\"131\"],[\"132\",\"2025-01-14\",\"r\",\"b\",\"132\"],[\"133\",\"2025-02-04\",\"r\",\"b\",\"133\"],[\"134\",\"2025-03-04\",\"r\",\"b\",\"134\"],[\"135\",\"2025-04-01\",\"r\",\"b\",\"135\"],[\"136\",\"2025-04-29\",\"r\",\"b\",\"136\"],[\"137\",\"2025-05-27\",\"r\",\"b\",\"137\"],[\"138\",\"2025-06-24\",\"r\",\"b\",\"138\"],[\"139\",\"2025-08-05\",\"r\",\"b\",\"139\"],[\"140\",\"2025-09-02\",\"c\",\"b\",\"140\"],[\"141\",\"2025-09-30\",\"b\",\"b\",\"141\"],[\"142\",\"2025-10-28\",\"n\",\"b\",\"142\"],[\"143\",null,\"p\",\"b\",\"143\"]]},chrome_android:{releases:[[\"18\",\"2012-06-27\",\"r\",\"w\",\"535.19\"],[\"25\",\"2013-02-27\",\"r\",\"w\",\"537.22\"],[\"26\",\"2013-04-03\",\"r\",\"w\",\"537.31\"],[\"27\",\"2013-05-22\",\"r\",\"w\",\"537.36\"],[\"28\",\"2013-07-10\",\"r\",\"b\",\"28\"],[\"29\",\"2013-08-21\",\"r\",\"b\",\"29\"],[\"30\",\"2013-10-02\",\"r\",\"b\",\"30\"],[\"31\",\"2013-11-14\",\"r\",\"b\",\"31\"],[\"32\",\"2014-01-15\",\"r\",\"b\",\"32\"],[\"33\",\"2014-02-26\",\"r\",\"b\",\"33\"],[\"34\",\"2014-04-02\",\"r\",\"b\",\"34\"],[\"35\",\"2014-05-20\",\"r\",\"b\",\"35\"],[\"36\",\"2014-07-16\",\"r\",\"b\",\"36\"],[\"37\",\"2014-09-03\",\"r\",\"b\",\"37\"],[\"38\",\"2014-10-08\",\"r\",\"b\",\"38\"],[\"39\",\"2014-11-12\",\"r\",\"b\",\"39\"],[\"40\",\"2015-01-21\",\"r\",\"b\",\"40\"],[\"41\",\"2015-03-11\",\"r\",\"b\",\"41\"],[\"42\",\"2015-04-15\",\"r\",\"b\",\"42\"],[\"43\",\"2015-05-27\",\"r\",\"b\",\"43\"],[\"44\",\"2015-07-29\",\"r\",\"b\",\"44\"],[\"45\",\"2015-09-01\",\"r\",\"b\",\"45\"],[\"46\",\"2015-10-14\",\"r\",\"b\",\"46\"],[\"47\",\"2015-12-02\",\"r\",\"b\",\"47\"],[\"48\",\"2016-01-26\",\"r\",\"b\",\"48\"],[\"49\",\"2016-03-09\",\"r\",\"b\",\"49\"],[\"50\",\"2016-04-13\",\"r\",\"b\",\"50\"],[\"51\",\"2016-06-08\",\"r\",\"b\",\"51\"],[\"52\",\"2016-07-27\",\"r\",\"b\",\"52\"],[\"53\",\"2016-09-07\",\"r\",\"b\",\"53\"],[\"54\",\"2016-10-19\",\"r\",\"b\",\"54\"],[\"55\",\"2016-12-06\",\"r\",\"b\",\"55\"],[\"56\",\"2017-02-01\",\"r\",\"b\",\"56\"],[\"57\",\"2017-03-16\",\"r\",\"b\",\"57\"],[\"58\",\"2017-04-25\",\"r\",\"b\",\"58\"],[\"59\",\"2017-06-06\",\"r\",\"b\",\"59\"],[\"60\",\"2017-08-01\",\"r\",\"b\",\"60\"],[\"61\",\"2017-09-05\",\"r\",\"b\",\"61\"],[\"62\",\"2017-10-24\",\"r\",\"b\",\"62\"],[\"63\",\"2017-12-05\",\"r\",\"b\",\"63\"],[\"64\",\"2018-01-23\",\"r\",\"b\",\"64\"],[\"65\",\"2018-03-06\",\"r\",\"b\",\"65\"],[\"66\",\"2018-04-17\",\"r\",\"b\",\"66\"],[\"67\",\"2018-05-31\",\"r\",\"b\",\"67\"],[\"68\",\"2018-07-24\",\"r\",\"b\",\"68\"],[\"69\",\"2018-09-04\",\"r\",\"b\",\"69\"],[\"70\",\"2018-10-17\",\"r\",\"b\",\"70\"],[\"71\",\"2018-12-04\",\"r\",\"b\",\"71\"],[\"72\",\"2019-01-29\",\"r\",\"b\",\"72\"],[\"73\",\"2019-03-12\",\"r\",\"b\",\"73\"],[\"74\",\"2019-04-24\",\"r\",\"b\",\"74\"],[\"75\",\"2019-06-04\",\"r\",\"b\",\"75\"],[\"76\",\"2019-07-30\",\"r\",\"b\",\"76\"],[\"77\",\"2019-09-10\",\"r\",\"b\",\"77\"],[\"78\",\"2019-10-22\",\"r\",\"b\",\"78\"],[\"79\",\"2019-12-17\",\"r\",\"b\",\"79\"],[\"80\",\"2020-02-04\",\"r\",\"b\",\"80\"],[\"81\",\"2020-04-07\",\"r\",\"b\",\"81\"],[\"83\",\"2020-05-19\",\"r\",\"b\",\"83\"],[\"84\",\"2020-07-27\",\"r\",\"b\",\"84\"],[\"85\",\"2020-08-25\",\"r\",\"b\",\"85\"],[\"86\",\"2020-10-20\",\"r\",\"b\",\"86\"],[\"87\",\"2020-11-17\",\"r\",\"b\",\"87\"],[\"88\",\"2021-01-19\",\"r\",\"b\",\"88\"],[\"89\",\"2021-03-02\",\"r\",\"b\",\"89\"],[\"90\",\"2021-04-13\",\"r\",\"b\",\"90\"],[\"91\",\"2021-05-25\",\"r\",\"b\",\"91\"],[\"92\",\"2021-07-20\",\"r\",\"b\",\"92\"],[\"93\",\"2021-08-31\",\"r\",\"b\",\"93\"],[\"94\",\"2021-09-21\",\"r\",\"b\",\"94\"],[\"95\",\"2021-10-19\",\"r\",\"b\",\"95\"],[\"96\",\"2021-11-15\",\"r\",\"b\",\"96\"],[\"97\",\"2022-01-04\",\"r\",\"b\",\"97\"],[\"98\",\"2022-02-01\",\"r\",\"b\",\"98\"],[\"99\",\"2022-03-01\",\"r\",\"b\",\"99\"],[\"100\",\"2022-03-29\",\"r\",\"b\",\"100\"],[\"101\",\"2022-04-26\",\"r\",\"b\",\"101\"],[\"102\",\"2022-05-24\",\"r\",\"b\",\"102\"],[\"103\",\"2022-06-21\",\"r\",\"b\",\"103\"],[\"104\",\"2022-08-02\",\"r\",\"b\",\"104\"],[\"105\",\"2022-09-02\",\"r\",\"b\",\"105\"],[\"106\",\"2022-09-27\",\"r\",\"b\",\"106\"],[\"107\",\"2022-10-25\",\"r\",\"b\",\"107\"],[\"108\",\"2022-11-29\",\"r\",\"b\",\"108\"],[\"109\",\"2023-01-10\",\"r\",\"b\",\"109\"],[\"110\",\"2023-02-07\",\"r\",\"b\",\"110\"],[\"111\",\"2023-03-07\",\"r\",\"b\",\"111\"],[\"112\",\"2023-04-04\",\"r\",\"b\",\"112\"],[\"113\",\"2023-05-02\",\"r\",\"b\",\"113\"],[\"114\",\"2023-05-30\",\"r\",\"b\",\"114\"],[\"115\",\"2023-07-21\",\"r\",\"b\",\"115\"],[\"116\",\"2023-08-15\",\"r\",\"b\",\"116\"],[\"117\",\"2023-09-12\",\"r\",\"b\",\"117\"],[\"118\",\"2023-10-10\",\"r\",\"b\",\"118\"],[\"119\",\"2023-10-31\",\"r\",\"b\",\"119\"],[\"120\",\"2023-12-05\",\"r\",\"b\",\"120\"],[\"121\",\"2024-01-23\",\"r\",\"b\",\"121\"],[\"122\",\"2024-02-20\",\"r\",\"b\",\"122\"],[\"123\",\"2024-03-19\",\"r\",\"b\",\"123\"],[\"124\",\"2024-04-16\",\"r\",\"b\",\"124\"],[\"125\",\"2024-05-14\",\"r\",\"b\",\"125\"],[\"126\",\"2024-06-11\",\"r\",\"b\",\"126\"],[\"127\",\"2024-07-23\",\"r\",\"b\",\"127\"],[\"128\",\"2024-08-20\",\"r\",\"b\",\"128\"],[\"129\",\"2024-09-17\",\"r\",\"b\",\"129\"],[\"130\",\"2024-10-15\",\"r\",\"b\",\"130\"],[\"131\",\"2024-11-12\",\"r\",\"b\",\"131\"],[\"132\",\"2025-01-14\",\"r\",\"b\",\"132\"],[\"133\",\"2025-02-04\",\"r\",\"b\",\"133\"],[\"134\",\"2025-03-04\",\"r\",\"b\",\"134\"],[\"135\",\"2025-04-01\",\"r\",\"b\",\"135\"],[\"136\",\"2025-04-29\",\"r\",\"b\",\"136\"],[\"137\",\"2025-05-27\",\"r\",\"b\",\"137\"],[\"138\",\"2025-06-24\",\"r\",\"b\",\"138\"],[\"139\",\"2025-08-05\",\"r\",\"b\",\"139\"],[\"140\",\"2025-09-02\",\"c\",\"b\",\"140\"],[\"141\",\"2025-09-30\",\"b\",\"b\",\"141\"],[\"142\",\"2025-10-28\",\"n\",\"b\",\"142\"],[\"143\",null,\"p\",\"b\",\"143\"]]},edge:{releases:[[\"12\",\"2015-07-29\",\"r\",null,\"12\"],[\"13\",\"2015-11-12\",\"r\",null,\"13\"],[\"14\",\"2016-08-02\",\"r\",null,\"14\"],[\"15\",\"2017-04-05\",\"r\",null,\"15\"],[\"16\",\"2017-10-17\",\"r\",null,\"16\"],[\"17\",\"2018-04-30\",\"r\",null,\"17\"],[\"18\",\"2018-10-02\",\"r\",null,\"18\"],[\"79\",\"2020-01-15\",\"r\",\"b\",\"79\"],[\"80\",\"2020-02-07\",\"r\",\"b\",\"80\"],[\"81\",\"2020-04-13\",\"r\",\"b\",\"81\"],[\"83\",\"2020-05-21\",\"r\",\"b\",\"83\"],[\"84\",\"2020-07-16\",\"r\",\"b\",\"84\"],[\"85\",\"2020-08-27\",\"r\",\"b\",\"85\"],[\"86\",\"2020-10-09\",\"r\",\"b\",\"86\"],[\"87\",\"2020-11-19\",\"r\",\"b\",\"87\"],[\"88\",\"2021-01-21\",\"r\",\"b\",\"88\"],[\"89\",\"2021-03-04\",\"r\",\"b\",\"89\"],[\"90\",\"2021-04-15\",\"r\",\"b\",\"90\"],[\"91\",\"2021-05-27\",\"r\",\"b\",\"91\"],[\"92\",\"2021-07-22\",\"r\",\"b\",\"92\"],[\"93\",\"2021-09-02\",\"r\",\"b\",\"93\"],[\"94\",\"2021-09-24\",\"r\",\"b\",\"94\"],[\"95\",\"2021-10-21\",\"r\",\"b\",\"95\"],[\"96\",\"2021-11-19\",\"r\",\"b\",\"96\"],[\"97\",\"2022-01-06\",\"r\",\"b\",\"97\"],[\"98\",\"2022-02-03\",\"r\",\"b\",\"98\"],[\"99\",\"2022-03-03\",\"r\",\"b\",\"99\"],[\"100\",\"2022-04-01\",\"r\",\"b\",\"100\"],[\"101\",\"2022-04-28\",\"r\",\"b\",\"101\"],[\"102\",\"2022-05-31\",\"r\",\"b\",\"102\"],[\"103\",\"2022-06-23\",\"r\",\"b\",\"103\"],[\"104\",\"2022-08-05\",\"r\",\"b\",\"104\"],[\"105\",\"2022-09-01\",\"r\",\"b\",\"105\"],[\"106\",\"2022-10-03\",\"r\",\"b\",\"106\"],[\"107\",\"2022-10-27\",\"r\",\"b\",\"107\"],[\"108\",\"2022-12-05\",\"r\",\"b\",\"108\"],[\"109\",\"2023-01-12\",\"r\",\"b\",\"109\"],[\"110\",\"2023-02-09\",\"r\",\"b\",\"110\"],[\"111\",\"2023-03-13\",\"r\",\"b\",\"111\"],[\"112\",\"2023-04-06\",\"r\",\"b\",\"112\"],[\"113\",\"2023-05-05\",\"r\",\"b\",\"113\"],[\"114\",\"2023-06-02\",\"r\",\"b\",\"114\"],[\"115\",\"2023-07-21\",\"r\",\"b\",\"115\"],[\"116\",\"2023-08-21\",\"r\",\"b\",\"116\"],[\"117\",\"2023-09-15\",\"r\",\"b\",\"117\"],[\"118\",\"2023-10-13\",\"r\",\"b\",\"118\"],[\"119\",\"2023-11-02\",\"r\",\"b\",\"119\"],[\"120\",\"2023-12-07\",\"r\",\"b\",\"120\"],[\"121\",\"2024-01-25\",\"r\",\"b\",\"121\"],[\"122\",\"2024-02-23\",\"r\",\"b\",\"122\"],[\"123\",\"2024-03-22\",\"r\",\"b\",\"123\"],[\"124\",\"2024-04-18\",\"r\",\"b\",\"124\"],[\"125\",\"2024-05-17\",\"r\",\"b\",\"125\"],[\"126\",\"2024-06-13\",\"r\",\"b\",\"126\"],[\"127\",\"2024-07-25\",\"r\",\"b\",\"127\"],[\"128\",\"2024-08-22\",\"r\",\"b\",\"128\"],[\"129\",\"2024-09-19\",\"r\",\"b\",\"129\"],[\"130\",\"2024-10-17\",\"r\",\"b\",\"130\"],[\"131\",\"2024-11-14\",\"r\",\"b\",\"131\"],[\"132\",\"2025-01-17\",\"r\",\"b\",\"132\"],[\"133\",\"2025-02-06\",\"r\",\"b\",\"133\"],[\"134\",\"2025-03-06\",\"r\",\"b\",\"134\"],[\"135\",\"2025-04-04\",\"r\",\"b\",\"135\"],[\"136\",\"2025-05-01\",\"r\",\"b\",\"136\"],[\"137\",\"2025-05-29\",\"r\",\"b\",\"137\"],[\"138\",\"2025-06-26\",\"r\",\"b\",\"138\"],[\"139\",\"2025-08-07\",\"r\",\"b\",\"139\"],[\"140\",\"2025-09-05\",\"c\",\"b\",\"140\"],[\"141\",\"2025-10-02\",\"b\",\"b\",\"141\"],[\"142\",\"2025-10-30\",\"n\",\"b\",\"142\"],[\"143\",\"2025-12-04\",\"p\",\"b\",\"143\"]]},firefox:{releases:[[\"1\",\"2004-11-09\",\"r\",\"g\",\"1.7\"],[\"2\",\"2006-10-24\",\"r\",\"g\",\"1.8.1\"],[\"3\",\"2008-06-17\",\"r\",\"g\",\"1.9\"],[\"4\",\"2011-03-22\",\"r\",\"g\",\"2\"],[\"5\",\"2011-06-21\",\"r\",\"g\",\"5\"],[\"6\",\"2011-08-16\",\"r\",\"g\",\"6\"],[\"7\",\"2011-09-27\",\"r\",\"g\",\"7\"],[\"8\",\"2011-11-08\",\"r\",\"g\",\"8\"],[\"9\",\"2011-12-20\",\"r\",\"g\",\"9\"],[\"10\",\"2012-01-31\",\"r\",\"g\",\"10\"],[\"11\",\"2012-03-13\",\"r\",\"g\",\"11\"],[\"12\",\"2012-04-24\",\"r\",\"g\",\"12\"],[\"13\",\"2012-06-05\",\"r\",\"g\",\"13\"],[\"14\",\"2012-07-17\",\"r\",\"g\",\"14\"],[\"15\",\"2012-08-28\",\"r\",\"g\",\"15\"],[\"16\",\"2012-10-09\",\"r\",\"g\",\"16\"],[\"17\",\"2012-11-20\",\"r\",\"g\",\"17\"],[\"18\",\"2013-01-08\",\"r\",\"g\",\"18\"],[\"19\",\"2013-02-19\",\"r\",\"g\",\"19\"],[\"20\",\"2013-04-02\",\"r\",\"g\",\"20\"],[\"21\",\"2013-05-14\",\"r\",\"g\",\"21\"],[\"22\",\"2013-06-25\",\"r\",\"g\",\"22\"],[\"23\",\"2013-08-06\",\"r\",\"g\",\"23\"],[\"24\",\"2013-09-17\",\"r\",\"g\",\"24\"],[\"25\",\"2013-10-29\",\"r\",\"g\",\"25\"],[\"26\",\"2013-12-10\",\"r\",\"g\",\"26\"],[\"27\",\"2014-02-04\",\"r\",\"g\",\"27\"],[\"28\",\"2014-03-18\",\"r\",\"g\",\"28\"],[\"29\",\"2014-04-29\",\"r\",\"g\",\"29\"],[\"30\",\"2014-06-10\",\"r\",\"g\",\"30\"],[\"31\",\"2014-07-22\",\"r\",\"g\",\"31\"],[\"32\",\"2014-09-02\",\"r\",\"g\",\"32\"],[\"33\",\"2014-10-14\",\"r\",\"g\",\"33\"],[\"34\",\"2014-12-01\",\"r\",\"g\",\"34\"],[\"35\",\"2015-01-13\",\"r\",\"g\",\"35\"],[\"36\",\"2015-02-24\",\"r\",\"g\",\"36\"],[\"37\",\"2015-03-31\",\"r\",\"g\",\"37\"],[\"38\",\"2015-05-12\",\"r\",\"g\",\"38\"],[\"39\",\"2015-07-02\",\"r\",\"g\",\"39\"],[\"40\",\"2015-08-11\",\"r\",\"g\",\"40\"],[\"41\",\"2015-09-22\",\"r\",\"g\",\"41\"],[\"42\",\"2015-11-03\",\"r\",\"g\",\"42\"],[\"43\",\"2015-12-15\",\"r\",\"g\",\"43\"],[\"44\",\"2016-01-26\",\"r\",\"g\",\"44\"],[\"45\",\"2016-03-08\",\"r\",\"g\",\"45\"],[\"46\",\"2016-04-26\",\"r\",\"g\",\"46\"],[\"47\",\"2016-06-07\",\"r\",\"g\",\"47\"],[\"48\",\"2016-08-02\",\"r\",\"g\",\"48\"],[\"49\",\"2016-09-20\",\"r\",\"g\",\"49\"],[\"50\",\"2016-11-15\",\"r\",\"g\",\"50\"],[\"51\",\"2017-01-24\",\"r\",\"g\",\"51\"],[\"52\",\"2017-03-07\",\"r\",\"g\",\"52\"],[\"53\",\"2017-04-19\",\"r\",\"g\",\"53\"],[\"54\",\"2017-06-13\",\"r\",\"g\",\"54\"],[\"55\",\"2017-08-08\",\"r\",\"g\",\"55\"],[\"56\",\"2017-09-28\",\"r\",\"g\",\"56\"],[\"57\",\"2017-11-14\",\"r\",\"g\",\"57\"],[\"58\",\"2018-01-23\",\"r\",\"g\",\"58\"],[\"59\",\"2018-03-13\",\"r\",\"g\",\"59\"],[\"60\",\"2018-05-09\",\"r\",\"g\",\"60\"],[\"61\",\"2018-06-26\",\"r\",\"g\",\"61\"],[\"62\",\"2018-09-05\",\"r\",\"g\",\"62\"],[\"63\",\"2018-10-23\",\"r\",\"g\",\"63\"],[\"64\",\"2018-12-11\",\"r\",\"g\",\"64\"],[\"65\",\"2019-01-29\",\"r\",\"g\",\"65\"],[\"66\",\"2019-03-19\",\"r\",\"g\",\"66\"],[\"67\",\"2019-05-21\",\"r\",\"g\",\"67\"],[\"68\",\"2019-07-09\",\"r\",\"g\",\"68\"],[\"69\",\"2019-09-03\",\"r\",\"g\",\"69\"],[\"70\",\"2019-10-22\",\"r\",\"g\",\"70\"],[\"71\",\"2019-12-10\",\"r\",\"g\",\"71\"],[\"72\",\"2020-01-07\",\"r\",\"g\",\"72\"],[\"73\",\"2020-02-11\",\"r\",\"g\",\"73\"],[\"74\",\"2020-03-10\",\"r\",\"g\",\"74\"],[\"75\",\"2020-04-07\",\"r\",\"g\",\"75\"],[\"76\",\"2020-05-05\",\"r\",\"g\",\"76\"],[\"77\",\"2020-06-02\",\"r\",\"g\",\"77\"],[\"78\",\"2020-06-30\",\"r\",\"g\",\"78\"],[\"79\",\"2020-07-28\",\"r\",\"g\",\"79\"],[\"80\",\"2020-08-25\",\"r\",\"g\",\"80\"],[\"81\",\"2020-09-22\",\"r\",\"g\",\"81\"],[\"82\",\"2020-10-20\",\"r\",\"g\",\"82\"],[\"83\",\"2020-11-17\",\"r\",\"g\",\"83\"],[\"84\",\"2020-12-15\",\"r\",\"g\",\"84\"],[\"85\",\"2021-01-26\",\"r\",\"g\",\"85\"],[\"86\",\"2021-02-23\",\"r\",\"g\",\"86\"],[\"87\",\"2021-03-23\",\"r\",\"g\",\"87\"],[\"88\",\"2021-04-19\",\"r\",\"g\",\"88\"],[\"89\",\"2021-06-01\",\"r\",\"g\",\"89\"],[\"90\",\"2021-07-13\",\"r\",\"g\",\"90\"],[\"91\",\"2021-08-10\",\"r\",\"g\",\"91\"],[\"92\",\"2021-09-07\",\"r\",\"g\",\"92\"],[\"93\",\"2021-10-05\",\"r\",\"g\",\"93\"],[\"94\",\"2021-11-02\",\"r\",\"g\",\"94\"],[\"95\",\"2021-12-07\",\"r\",\"g\",\"95\"],[\"96\",\"2022-01-11\",\"r\",\"g\",\"96\"],[\"97\",\"2022-02-08\",\"r\",\"g\",\"97\"],[\"98\",\"2022-03-08\",\"r\",\"g\",\"98\"],[\"99\",\"2022-04-05\",\"r\",\"g\",\"99\"],[\"100\",\"2022-05-03\",\"r\",\"g\",\"100\"],[\"101\",\"2022-05-31\",\"r\",\"g\",\"101\"],[\"102\",\"2022-06-28\",\"r\",\"g\",\"102\"],[\"103\",\"2022-07-26\",\"r\",\"g\",\"103\"],[\"104\",\"2022-08-23\",\"r\",\"g\",\"104\"],[\"105\",\"2022-09-20\",\"r\",\"g\",\"105\"],[\"106\",\"2022-10-18\",\"r\",\"g\",\"106\"],[\"107\",\"2022-11-15\",\"r\",\"g\",\"107\"],[\"108\",\"2022-12-13\",\"r\",\"g\",\"108\"],[\"109\",\"2023-01-17\",\"r\",\"g\",\"109\"],[\"110\",\"2023-02-14\",\"r\",\"g\",\"110\"],[\"111\",\"2023-03-14\",\"r\",\"g\",\"111\"],[\"112\",\"2023-04-11\",\"r\",\"g\",\"112\"],[\"113\",\"2023-05-09\",\"r\",\"g\",\"113\"],[\"114\",\"2023-06-06\",\"r\",\"g\",\"114\"],[\"115\",\"2023-07-04\",\"r\",\"g\",\"115\"],[\"116\",\"2023-08-01\",\"r\",\"g\",\"116\"],[\"117\",\"2023-08-29\",\"r\",\"g\",\"117\"],[\"118\",\"2023-09-26\",\"r\",\"g\",\"118\"],[\"119\",\"2023-10-24\",\"r\",\"g\",\"119\"],[\"120\",\"2023-11-21\",\"r\",\"g\",\"120\"],[\"121\",\"2023-12-19\",\"r\",\"g\",\"121\"],[\"122\",\"2024-01-23\",\"r\",\"g\",\"122\"],[\"123\",\"2024-02-20\",\"r\",\"g\",\"123\"],[\"124\",\"2024-03-19\",\"r\",\"g\",\"124\"],[\"125\",\"2024-04-16\",\"r\",\"g\",\"125\"],[\"126\",\"2024-05-14\",\"r\",\"g\",\"126\"],[\"127\",\"2024-06-11\",\"r\",\"g\",\"127\"],[\"128\",\"2024-07-09\",\"r\",\"g\",\"128\"],[\"129\",\"2024-08-06\",\"r\",\"g\",\"129\"],[\"130\",\"2024-09-03\",\"r\",\"g\",\"130\"],[\"131\",\"2024-10-01\",\"r\",\"g\",\"131\"],[\"132\",\"2024-10-29\",\"r\",\"g\",\"132\"],[\"133\",\"2024-11-26\",\"r\",\"g\",\"133\"],[\"134\",\"2025-01-07\",\"r\",\"g\",\"134\"],[\"135\",\"2025-02-04\",\"r\",\"g\",\"135\"],[\"136\",\"2025-03-04\",\"r\",\"g\",\"136\"],[\"137\",\"2025-04-01\",\"r\",\"g\",\"137\"],[\"138\",\"2025-04-29\",\"r\",\"g\",\"138\"],[\"139\",\"2025-05-27\",\"r\",\"g\",\"139\"],[\"140\",\"2025-06-24\",\"e\",\"g\",\"140\"],[\"141\",\"2025-07-22\",\"r\",\"g\",\"141\"],[\"142\",\"2025-08-19\",\"r\",\"g\",\"142\"],[\"143\",\"2025-09-16\",\"c\",\"g\",\"143\"],[\"144\",\"2025-10-14\",\"b\",\"g\",\"144\"],[\"145\",\"2025-11-11\",\"n\",\"g\",\"145\"],[\"146\",\"2025-12-09\",\"p\",\"g\",\"146\"],[\"1.5\",\"2005-11-29\",\"r\",\"g\",\"1.8\"],[\"3.5\",\"2009-06-30\",\"r\",\"g\",\"1.9.1\"],[\"3.6\",\"2010-01-21\",\"r\",\"g\",\"1.9.2\"]]},firefox_android:{releases:[[\"4\",\"2011-03-29\",\"r\",\"g\",\"2\"],[\"5\",\"2011-06-21\",\"r\",\"g\",\"5\"],[\"6\",\"2011-08-16\",\"r\",\"g\",\"6\"],[\"7\",\"2011-09-27\",\"r\",\"g\",\"7\"],[\"8\",\"2011-11-08\",\"r\",\"g\",\"8\"],[\"9\",\"2011-12-21\",\"r\",\"g\",\"9\"],[\"10\",\"2012-01-31\",\"r\",\"g\",\"10\"],[\"14\",\"2012-06-26\",\"r\",\"g\",\"14\"],[\"15\",\"2012-08-28\",\"r\",\"g\",\"15\"],[\"16\",\"2012-10-09\",\"r\",\"g\",\"16\"],[\"17\",\"2012-11-20\",\"r\",\"g\",\"17\"],[\"18\",\"2013-01-08\",\"r\",\"g\",\"18\"],[\"19\",\"2013-02-19\",\"r\",\"g\",\"19\"],[\"20\",\"2013-04-02\",\"r\",\"g\",\"20\"],[\"21\",\"2013-05-14\",\"r\",\"g\",\"21\"],[\"22\",\"2013-06-25\",\"r\",\"g\",\"22\"],[\"23\",\"2013-08-06\",\"r\",\"g\",\"23\"],[\"24\",\"2013-09-17\",\"r\",\"g\",\"24\"],[\"25\",\"2013-10-29\",\"r\",\"g\",\"25\"],[\"26\",\"2013-12-10\",\"r\",\"g\",\"26\"],[\"27\",\"2014-02-04\",\"r\",\"g\",\"27\"],[\"28\",\"2014-03-18\",\"r\",\"g\",\"28\"],[\"29\",\"2014-04-29\",\"r\",\"g\",\"29\"],[\"30\",\"2014-06-10\",\"r\",\"g\",\"30\"],[\"31\",\"2014-07-22\",\"r\",\"g\",\"31\"],[\"32\",\"2014-09-02\",\"r\",\"g\",\"32\"],[\"33\",\"2014-10-14\",\"r\",\"g\",\"33\"],[\"34\",\"2014-12-01\",\"r\",\"g\",\"34\"],[\"35\",\"2015-01-13\",\"r\",\"g\",\"35\"],[\"36\",\"2015-02-27\",\"r\",\"g\",\"36\"],[\"37\",\"2015-03-31\",\"r\",\"g\",\"37\"],[\"38\",\"2015-05-12\",\"r\",\"g\",\"38\"],[\"39\",\"2015-07-02\",\"r\",\"g\",\"39\"],[\"40\",\"2015-08-11\",\"r\",\"g\",\"40\"],[\"41\",\"2015-09-22\",\"r\",\"g\",\"41\"],[\"42\",\"2015-11-03\",\"r\",\"g\",\"42\"],[\"43\",\"2015-12-15\",\"r\",\"g\",\"43\"],[\"44\",\"2016-01-26\",\"r\",\"g\",\"44\"],[\"45\",\"2016-03-08\",\"r\",\"g\",\"45\"],[\"46\",\"2016-04-26\",\"r\",\"g\",\"46\"],[\"47\",\"2016-06-07\",\"r\",\"g\",\"47\"],[\"48\",\"2016-08-02\",\"r\",\"g\",\"48\"],[\"49\",\"2016-09-20\",\"r\",\"g\",\"49\"],[\"50\",\"2016-11-15\",\"r\",\"g\",\"50\"],[\"51\",\"2017-01-24\",\"r\",\"g\",\"51\"],[\"52\",\"2017-03-07\",\"r\",\"g\",\"52\"],[\"53\",\"2017-04-19\",\"r\",\"g\",\"53\"],[\"54\",\"2017-06-13\",\"r\",\"g\",\"54\"],[\"55\",\"2017-08-08\",\"r\",\"g\",\"55\"],[\"56\",\"2017-09-28\",\"r\",\"g\",\"56\"],[\"57\",\"2017-11-28\",\"r\",\"g\",\"57\"],[\"58\",\"2018-01-22\",\"r\",\"g\",\"58\"],[\"59\",\"2018-03-13\",\"r\",\"g\",\"59\"],[\"60\",\"2018-05-09\",\"r\",\"g\",\"60\"],[\"61\",\"2018-06-26\",\"r\",\"g\",\"61\"],[\"62\",\"2018-09-05\",\"r\",\"g\",\"62\"],[\"63\",\"2018-10-23\",\"r\",\"g\",\"63\"],[\"64\",\"2018-12-11\",\"r\",\"g\",\"64\"],[\"65\",\"2019-01-29\",\"r\",\"g\",\"65\"],[\"66\",\"2019-03-19\",\"r\",\"g\",\"66\"],[\"67\",\"2019-05-21\",\"r\",\"g\",\"67\"],[\"68\",\"2019-07-09\",\"r\",\"g\",\"68\"],[\"79\",\"2020-07-28\",\"r\",\"g\",\"79\"],[\"80\",\"2020-08-31\",\"r\",\"g\",\"80\"],[\"81\",\"2020-09-22\",\"r\",\"g\",\"81\"],[\"82\",\"2020-10-20\",\"r\",\"g\",\"82\"],[\"83\",\"2020-11-17\",\"r\",\"g\",\"83\"],[\"84\",\"2020-12-15\",\"r\",\"g\",\"84\"],[\"85\",\"2021-01-26\",\"r\",\"g\",\"85\"],[\"86\",\"2021-02-23\",\"r\",\"g\",\"86\"],[\"87\",\"2021-03-23\",\"r\",\"g\",\"87\"],[\"88\",\"2021-04-19\",\"r\",\"g\",\"88\"],[\"89\",\"2021-06-01\",\"r\",\"g\",\"89\"],[\"90\",\"2021-07-13\",\"r\",\"g\",\"90\"],[\"91\",\"2021-08-10\",\"r\",\"g\",\"91\"],[\"92\",\"2021-09-07\",\"r\",\"g\",\"92\"],[\"93\",\"2021-10-05\",\"r\",\"g\",\"93\"],[\"94\",\"2021-11-02\",\"r\",\"g\",\"94\"],[\"95\",\"2021-12-07\",\"r\",\"g\",\"95\"],[\"96\",\"2022-01-11\",\"r\",\"g\",\"96\"],[\"97\",\"2022-02-08\",\"r\",\"g\",\"97\"],[\"98\",\"2022-03-08\",\"r\",\"g\",\"98\"],[\"99\",\"2022-04-05\",\"r\",\"g\",\"99\"],[\"100\",\"2022-05-03\",\"r\",\"g\",\"100\"],[\"101\",\"2022-05-31\",\"r\",\"g\",\"101\"],[\"102\",\"2022-06-28\",\"r\",\"g\",\"102\"],[\"103\",\"2022-07-26\",\"r\",\"g\",\"103\"],[\"104\",\"2022-08-23\",\"r\",\"g\",\"104\"],[\"105\",\"2022-09-20\",\"r\",\"g\",\"105\"],[\"106\",\"2022-10-18\",\"r\",\"g\",\"106\"],[\"107\",\"2022-11-15\",\"r\",\"g\",\"107\"],[\"108\",\"2022-12-13\",\"r\",\"g\",\"108\"],[\"109\",\"2023-01-17\",\"r\",\"g\",\"109\"],[\"110\",\"2023-02-14\",\"r\",\"g\",\"110\"],[\"111\",\"2023-03-14\",\"r\",\"g\",\"111\"],[\"112\",\"2023-04-11\",\"r\",\"g\",\"112\"],[\"113\",\"2023-05-09\",\"r\",\"g\",\"113\"],[\"114\",\"2023-06-06\",\"r\",\"g\",\"114\"],[\"115\",\"2023-07-04\",\"r\",\"g\",\"115\"],[\"116\",\"2023-08-01\",\"r\",\"g\",\"116\"],[\"117\",\"2023-08-29\",\"r\",\"g\",\"117\"],[\"118\",\"2023-09-26\",\"r\",\"g\",\"118\"],[\"119\",\"2023-10-24\",\"r\",\"g\",\"119\"],[\"120\",\"2023-11-21\",\"r\",\"g\",\"120\"],[\"121\",\"2023-12-19\",\"r\",\"g\",\"121\"],[\"122\",\"2024-01-23\",\"r\",\"g\",\"122\"],[\"123\",\"2024-02-20\",\"r\",\"g\",\"123\"],[\"124\",\"2024-03-19\",\"r\",\"g\",\"124\"],[\"125\",\"2024-04-16\",\"r\",\"g\",\"125\"],[\"126\",\"2024-05-14\",\"r\",\"g\",\"126\"],[\"127\",\"2024-06-11\",\"r\",\"g\",\"127\"],[\"128\",\"2024-07-09\",\"r\",\"g\",\"128\"],[\"129\",\"2024-08-06\",\"r\",\"g\",\"129\"],[\"130\",\"2024-09-03\",\"r\",\"g\",\"130\"],[\"131\",\"2024-10-01\",\"r\",\"g\",\"131\"],[\"132\",\"2024-10-29\",\"r\",\"g\",\"132\"],[\"133\",\"2024-11-26\",\"r\",\"g\",\"133\"],[\"134\",\"2025-01-07\",\"r\",\"g\",\"134\"],[\"135\",\"2025-02-04\",\"r\",\"g\",\"135\"],[\"136\",\"2025-03-04\",\"r\",\"g\",\"136\"],[\"137\",\"2025-04-01\",\"r\",\"g\",\"137\"],[\"138\",\"2025-04-29\",\"r\",\"g\",\"138\"],[\"139\",\"2025-05-27\",\"r\",\"g\",\"139\"],[\"140\",\"2025-06-24\",\"e\",\"g\",\"140\"],[\"141\",\"2025-07-22\",\"r\",\"g\",\"141\"],[\"142\",\"2025-08-19\",\"r\",\"g\",\"142\"],[\"143\",\"2025-09-16\",\"c\",\"g\",\"143\"],[\"144\",\"2025-10-14\",\"b\",\"g\",\"144\"],[\"145\",\"2025-11-11\",\"n\",\"g\",\"145\"],[\"146\",\"2025-12-09\",\"p\",\"g\",\"146\"]]},opera:{releases:[[\"2\",\"1996-07-14\",\"r\",null,null],[\"3\",\"1997-12-01\",\"r\",null,null],[\"4\",\"2000-06-28\",\"r\",null,null],[\"5\",\"2000-12-06\",\"r\",null,null],[\"6\",\"2001-12-18\",\"r\",null,null],[\"7\",\"2003-01-28\",\"r\",\"p\",\"1\"],[\"8\",\"2005-04-19\",\"r\",\"p\",\"1\"],[\"9\",\"2006-06-20\",\"r\",\"p\",\"2\"],[\"10\",\"2009-09-01\",\"r\",\"p\",\"2.2\"],[\"11\",\"2010-12-16\",\"r\",\"p\",\"2.7\"],[\"12\",\"2012-06-14\",\"r\",\"p\",\"2.10\"],[\"15\",\"2013-07-02\",\"r\",\"b\",\"28\"],[\"16\",\"2013-08-27\",\"r\",\"b\",\"29\"],[\"17\",\"2013-10-08\",\"r\",\"b\",\"30\"],[\"18\",\"2013-11-19\",\"r\",\"b\",\"31\"],[\"19\",\"2014-01-28\",\"r\",\"b\",\"32\"],[\"20\",\"2014-03-04\",\"r\",\"b\",\"33\"],[\"21\",\"2014-05-06\",\"r\",\"b\",\"34\"],[\"22\",\"2014-06-03\",\"r\",\"b\",\"35\"],[\"23\",\"2014-07-22\",\"r\",\"b\",\"36\"],[\"24\",\"2014-09-02\",\"r\",\"b\",\"37\"],[\"25\",\"2014-10-15\",\"r\",\"b\",\"38\"],[\"26\",\"2014-12-03\",\"r\",\"b\",\"39\"],[\"27\",\"2015-01-27\",\"r\",\"b\",\"40\"],[\"28\",\"2015-03-10\",\"r\",\"b\",\"41\"],[\"29\",\"2015-04-28\",\"r\",\"b\",\"42\"],[\"30\",\"2015-06-09\",\"r\",\"b\",\"43\"],[\"31\",\"2015-08-04\",\"r\",\"b\",\"44\"],[\"32\",\"2015-09-15\",\"r\",\"b\",\"45\"],[\"33\",\"2015-10-27\",\"r\",\"b\",\"46\"],[\"34\",\"2015-12-08\",\"r\",\"b\",\"47\"],[\"35\",\"2016-02-02\",\"r\",\"b\",\"48\"],[\"36\",\"2016-03-15\",\"r\",\"b\",\"49\"],[\"37\",\"2016-05-04\",\"r\",\"b\",\"50\"],[\"38\",\"2016-06-08\",\"r\",\"b\",\"51\"],[\"39\",\"2016-08-02\",\"r\",\"b\",\"52\"],[\"40\",\"2016-09-20\",\"r\",\"b\",\"53\"],[\"41\",\"2016-10-25\",\"r\",\"b\",\"54\"],[\"42\",\"2016-12-13\",\"r\",\"b\",\"55\"],[\"43\",\"2017-02-07\",\"r\",\"b\",\"56\"],[\"44\",\"2017-03-21\",\"r\",\"b\",\"57\"],[\"45\",\"2017-05-10\",\"r\",\"b\",\"58\"],[\"46\",\"2017-06-22\",\"r\",\"b\",\"59\"],[\"47\",\"2017-08-09\",\"r\",\"b\",\"60\"],[\"48\",\"2017-09-27\",\"r\",\"b\",\"61\"],[\"49\",\"2017-11-08\",\"r\",\"b\",\"62\"],[\"50\",\"2018-01-04\",\"r\",\"b\",\"63\"],[\"51\",\"2018-02-07\",\"r\",\"b\",\"64\"],[\"52\",\"2018-03-22\",\"r\",\"b\",\"65\"],[\"53\",\"2018-05-10\",\"r\",\"b\",\"66\"],[\"54\",\"2018-06-28\",\"r\",\"b\",\"67\"],[\"55\",\"2018-08-16\",\"r\",\"b\",\"68\"],[\"56\",\"2018-09-25\",\"r\",\"b\",\"69\"],[\"57\",\"2018-11-28\",\"r\",\"b\",\"70\"],[\"58\",\"2019-01-23\",\"r\",\"b\",\"71\"],[\"60\",\"2019-04-09\",\"r\",\"b\",\"73\"],[\"62\",\"2019-06-27\",\"r\",\"b\",\"75\"],[\"63\",\"2019-08-20\",\"r\",\"b\",\"76\"],[\"64\",\"2019-10-07\",\"r\",\"b\",\"77\"],[\"65\",\"2019-11-13\",\"r\",\"b\",\"78\"],[\"66\",\"2020-01-07\",\"r\",\"b\",\"79\"],[\"67\",\"2020-03-03\",\"r\",\"b\",\"80\"],[\"68\",\"2020-04-22\",\"r\",\"b\",\"81\"],[\"69\",\"2020-06-24\",\"r\",\"b\",\"83\"],[\"70\",\"2020-07-27\",\"r\",\"b\",\"84\"],[\"71\",\"2020-09-15\",\"r\",\"b\",\"85\"],[\"72\",\"2020-10-21\",\"r\",\"b\",\"86\"],[\"73\",\"2020-12-09\",\"r\",\"b\",\"87\"],[\"74\",\"2021-02-02\",\"r\",\"b\",\"88\"],[\"75\",\"2021-03-24\",\"r\",\"b\",\"89\"],[\"76\",\"2021-04-28\",\"r\",\"b\",\"90\"],[\"77\",\"2021-06-09\",\"r\",\"b\",\"91\"],[\"78\",\"2021-08-03\",\"r\",\"b\",\"92\"],[\"79\",\"2021-09-14\",\"r\",\"b\",\"93\"],[\"80\",\"2021-10-05\",\"r\",\"b\",\"94\"],[\"81\",\"2021-11-04\",\"r\",\"b\",\"95\"],[\"82\",\"2021-12-02\",\"r\",\"b\",\"96\"],[\"83\",\"2022-01-19\",\"r\",\"b\",\"97\"],[\"84\",\"2022-02-16\",\"r\",\"b\",\"98\"],[\"85\",\"2022-03-23\",\"r\",\"b\",\"99\"],[\"86\",\"2022-04-20\",\"r\",\"b\",\"100\"],[\"87\",\"2022-05-17\",\"r\",\"b\",\"101\"],[\"88\",\"2022-06-08\",\"r\",\"b\",\"102\"],[\"89\",\"2022-07-07\",\"r\",\"b\",\"103\"],[\"90\",\"2022-08-18\",\"r\",\"b\",\"104\"],[\"91\",\"2022-09-14\",\"r\",\"b\",\"105\"],[\"92\",\"2022-10-19\",\"r\",\"b\",\"106\"],[\"93\",\"2022-11-17\",\"r\",\"b\",\"107\"],[\"94\",\"2022-12-15\",\"r\",\"b\",\"108\"],[\"95\",\"2023-02-01\",\"r\",\"b\",\"109\"],[\"96\",\"2023-02-22\",\"r\",\"b\",\"110\"],[\"97\",\"2023-03-22\",\"r\",\"b\",\"111\"],[\"98\",\"2023-04-20\",\"r\",\"b\",\"112\"],[\"99\",\"2023-05-16\",\"r\",\"b\",\"113\"],[\"100\",\"2023-06-29\",\"r\",\"b\",\"114\"],[\"101\",\"2023-07-26\",\"r\",\"b\",\"115\"],[\"102\",\"2023-08-23\",\"r\",\"b\",\"116\"],[\"103\",\"2023-10-03\",\"r\",\"b\",\"117\"],[\"104\",\"2023-10-23\",\"r\",\"b\",\"118\"],[\"105\",\"2023-11-14\",\"r\",\"b\",\"119\"],[\"106\",\"2023-12-19\",\"r\",\"b\",\"120\"],[\"107\",\"2024-02-07\",\"r\",\"b\",\"121\"],[\"108\",\"2024-03-05\",\"r\",\"b\",\"122\"],[\"109\",\"2024-03-27\",\"r\",\"b\",\"123\"],[\"110\",\"2024-05-14\",\"r\",\"b\",\"124\"],[\"111\",\"2024-06-12\",\"r\",\"b\",\"125\"],[\"112\",\"2024-07-11\",\"r\",\"b\",\"126\"],[\"113\",\"2024-08-22\",\"r\",\"b\",\"127\"],[\"114\",\"2024-09-25\",\"r\",\"b\",\"128\"],[\"115\",\"2024-11-27\",\"r\",\"b\",\"130\"],[\"116\",\"2025-01-08\",\"r\",\"b\",\"131\"],[\"117\",\"2025-02-13\",\"r\",\"b\",\"132\"],[\"118\",\"2025-04-15\",\"r\",\"b\",\"133\"],[\"119\",\"2025-05-13\",\"r\",\"b\",\"134\"],[\"120\",\"2025-07-02\",\"r\",\"b\",\"135\"],[\"121\",\"2025-08-27\",\"r\",\"b\",\"137\"],[\"122\",\"2025-09-11\",\"c\",\"b\",\"138\"],[\"123\",null,\"b\",\"b\",\"139\"],[\"124\",null,\"n\",\"b\",\"140\"],[\"10.1\",\"2009-11-23\",\"r\",\"p\",\"2.2\"],[\"10.5\",\"2010-03-02\",\"r\",\"p\",\"2.5\"],[\"10.6\",\"2010-07-01\",\"r\",\"p\",\"2.6\"],[\"11.1\",\"2011-04-12\",\"r\",\"p\",\"2.8\"],[\"11.5\",\"2011-06-28\",\"r\",\"p\",\"2.9\"],[\"11.6\",\"2011-12-06\",\"r\",\"p\",\"2.10\"],[\"12.1\",\"2012-11-20\",\"r\",\"p\",\"2.12\"],[\"3.5\",\"1998-11-18\",\"r\",null,null],[\"3.6\",\"1999-05-06\",\"r\",null,null],[\"5.1\",\"2001-04-10\",\"r\",null,null],[\"7.1\",\"2003-04-11\",\"r\",\"p\",\"1\"],[\"7.2\",\"2003-09-23\",\"r\",\"p\",\"1\"],[\"7.5\",\"2004-05-12\",\"r\",\"p\",\"1\"],[\"8.5\",\"2005-09-20\",\"r\",\"p\",\"1\"],[\"9.1\",\"2006-12-18\",\"r\",\"p\",\"2\"],[\"9.2\",\"2007-04-11\",\"r\",\"p\",\"2\"],[\"9.5\",\"2008-06-12\",\"r\",\"p\",\"2.1\"],[\"9.6\",\"2008-10-08\",\"r\",\"p\",\"2.1\"]]},opera_android:{releases:[[\"11\",\"2011-03-22\",\"r\",\"p\",\"2.7\"],[\"12\",\"2012-02-25\",\"r\",\"p\",\"2.10\"],[\"14\",\"2013-05-21\",\"r\",\"w\",\"537.31\"],[\"15\",\"2013-07-08\",\"r\",\"b\",\"28\"],[\"16\",\"2013-09-18\",\"r\",\"b\",\"29\"],[\"18\",\"2013-11-20\",\"r\",\"b\",\"31\"],[\"19\",\"2014-01-28\",\"r\",\"b\",\"32\"],[\"20\",\"2014-03-06\",\"r\",\"b\",\"33\"],[\"21\",\"2014-04-22\",\"r\",\"b\",\"34\"],[\"22\",\"2014-06-17\",\"r\",\"b\",\"35\"],[\"24\",\"2014-09-10\",\"r\",\"b\",\"37\"],[\"25\",\"2014-10-16\",\"r\",\"b\",\"38\"],[\"26\",\"2014-12-02\",\"r\",\"b\",\"39\"],[\"27\",\"2015-01-29\",\"r\",\"b\",\"40\"],[\"28\",\"2015-03-10\",\"r\",\"b\",\"41\"],[\"29\",\"2015-04-28\",\"r\",\"b\",\"42\"],[\"30\",\"2015-06-10\",\"r\",\"b\",\"43\"],[\"32\",\"2015-09-23\",\"r\",\"b\",\"45\"],[\"33\",\"2015-11-03\",\"r\",\"b\",\"46\"],[\"34\",\"2015-12-16\",\"r\",\"b\",\"47\"],[\"35\",\"2016-02-04\",\"r\",\"b\",\"48\"],[\"36\",\"2016-03-31\",\"r\",\"b\",\"49\"],[\"37\",\"2016-06-16\",\"r\",\"b\",\"50\"],[\"41\",\"2016-10-25\",\"r\",\"b\",\"54\"],[\"42\",\"2017-01-21\",\"r\",\"b\",\"55\"],[\"43\",\"2017-09-27\",\"r\",\"b\",\"59\"],[\"44\",\"2017-12-11\",\"r\",\"b\",\"60\"],[\"45\",\"2018-02-15\",\"r\",\"b\",\"61\"],[\"46\",\"2018-05-14\",\"r\",\"b\",\"63\"],[\"47\",\"2018-07-23\",\"r\",\"b\",\"66\"],[\"48\",\"2018-11-08\",\"r\",\"b\",\"69\"],[\"49\",\"2018-12-07\",\"r\",\"b\",\"70\"],[\"50\",\"2019-02-18\",\"r\",\"b\",\"71\"],[\"51\",\"2019-03-21\",\"r\",\"b\",\"72\"],[\"52\",\"2019-05-17\",\"r\",\"b\",\"73\"],[\"53\",\"2019-07-11\",\"r\",\"b\",\"74\"],[\"54\",\"2019-10-18\",\"r\",\"b\",\"76\"],[\"55\",\"2019-12-03\",\"r\",\"b\",\"77\"],[\"56\",\"2020-02-06\",\"r\",\"b\",\"78\"],[\"57\",\"2020-03-30\",\"r\",\"b\",\"80\"],[\"58\",\"2020-05-13\",\"r\",\"b\",\"81\"],[\"59\",\"2020-06-30\",\"r\",\"b\",\"83\"],[\"60\",\"2020-09-23\",\"r\",\"b\",\"85\"],[\"61\",\"2020-12-07\",\"r\",\"b\",\"86\"],[\"62\",\"2021-02-16\",\"r\",\"b\",\"87\"],[\"63\",\"2021-04-16\",\"r\",\"b\",\"89\"],[\"64\",\"2021-05-25\",\"r\",\"b\",\"91\"],[\"65\",\"2021-10-20\",\"r\",\"b\",\"92\"],[\"66\",\"2021-12-15\",\"r\",\"b\",\"94\"],[\"67\",\"2022-01-31\",\"r\",\"b\",\"96\"],[\"68\",\"2022-03-30\",\"r\",\"b\",\"99\"],[\"69\",\"2022-05-09\",\"r\",\"b\",\"100\"],[\"70\",\"2022-06-29\",\"r\",\"b\",\"102\"],[\"71\",\"2022-09-16\",\"r\",\"b\",\"104\"],[\"72\",\"2022-10-21\",\"r\",\"b\",\"106\"],[\"73\",\"2023-01-17\",\"r\",\"b\",\"108\"],[\"74\",\"2023-03-13\",\"r\",\"b\",\"110\"],[\"75\",\"2023-05-17\",\"r\",\"b\",\"112\"],[\"76\",\"2023-06-26\",\"r\",\"b\",\"114\"],[\"77\",\"2023-08-31\",\"r\",\"b\",\"115\"],[\"78\",\"2023-10-23\",\"r\",\"b\",\"117\"],[\"79\",\"2023-12-06\",\"r\",\"b\",\"119\"],[\"80\",\"2024-01-25\",\"r\",\"b\",\"120\"],[\"81\",\"2024-03-14\",\"r\",\"b\",\"122\"],[\"82\",\"2024-05-02\",\"r\",\"b\",\"124\"],[\"83\",\"2024-06-25\",\"r\",\"b\",\"126\"],[\"84\",\"2024-08-26\",\"r\",\"b\",\"127\"],[\"85\",\"2024-10-29\",\"r\",\"b\",\"128\"],[\"86\",\"2024-12-02\",\"r\",\"b\",\"130\"],[\"87\",\"2025-01-22\",\"r\",\"b\",\"132\"],[\"88\",\"2025-03-19\",\"r\",\"b\",\"134\"],[\"89\",\"2025-04-29\",\"r\",\"b\",\"135\"],[\"90\",\"2025-06-18\",\"r\",\"b\",\"137\"],[\"91\",\"2025-08-19\",\"c\",\"b\",\"139\"],[\"10.1\",\"2010-11-09\",\"r\",\"p\",\"2.5\"],[\"11.1\",\"2011-06-30\",\"r\",\"p\",\"2.8\"],[\"11.5\",\"2011-10-12\",\"r\",\"p\",\"2.9\"],[\"12.1\",\"2012-10-09\",\"r\",\"p\",\"2.11\"]]},safari:{releases:[[\"1\",\"2003-06-23\",\"r\",\"w\",\"85\"],[\"2\",\"2005-04-29\",\"r\",\"w\",\"412\"],[\"3\",\"2007-10-26\",\"r\",\"w\",\"523.10\"],[\"4\",\"2009-06-08\",\"r\",\"w\",\"530.17\"],[\"5\",\"2010-06-07\",\"r\",\"w\",\"533.16\"],[\"6\",\"2012-07-25\",\"r\",\"w\",\"536.25\"],[\"7\",\"2013-10-22\",\"r\",\"w\",\"537.71\"],[\"8\",\"2014-10-16\",\"r\",\"w\",\"538.35\"],[\"9\",\"2015-09-30\",\"r\",\"w\",\"601.1.56\"],[\"10\",\"2016-09-20\",\"r\",\"w\",\"602.1.50\"],[\"11\",\"2017-09-19\",\"r\",\"w\",\"604.2.4\"],[\"12\",\"2018-09-17\",\"r\",\"w\",\"606.1.36\"],[\"13\",\"2019-09-19\",\"r\",\"w\",\"608.2.11\"],[\"14\",\"2020-09-16\",\"r\",\"w\",\"610.1.28\"],[\"15\",\"2021-09-20\",\"r\",\"w\",\"612.1.27\"],[\"16\",\"2022-09-12\",\"r\",\"w\",\"614.1.25\"],[\"17\",\"2023-09-18\",\"r\",\"w\",\"616.1.27\"],[\"18\",\"2024-09-16\",\"r\",\"w\",\"619.1.26\"],[\"26\",\"2025-09-15\",\"c\",\"w\",\"622.1.22\"],[\"1.1\",\"2003-10-24\",\"r\",\"w\",\"100\"],[\"1.2\",\"2004-02-02\",\"r\",\"w\",\"125\"],[\"1.3\",\"2005-04-15\",\"r\",\"w\",\"312\"],[\"10.1\",\"2017-03-27\",\"r\",\"w\",\"603.2.1\"],[\"11.1\",\"2018-04-12\",\"r\",\"w\",\"605.1.33\"],[\"12.1\",\"2019-03-25\",\"r\",\"w\",\"607.1.40\"],[\"13.1\",\"2020-03-24\",\"r\",\"w\",\"609.1.20\"],[\"14.1\",\"2021-04-26\",\"r\",\"w\",\"611.1.21\"],[\"15.1\",\"2021-10-25\",\"r\",\"w\",\"612.2.9\"],[\"15.2\",\"2021-12-13\",\"r\",\"w\",\"612.3.6\"],[\"15.3\",\"2022-01-26\",\"r\",\"w\",\"612.4.9\"],[\"15.4\",\"2022-03-14\",\"r\",\"w\",\"613.1.17\"],[\"15.5\",\"2022-05-16\",\"r\",\"w\",\"613.2.7\"],[\"15.6\",\"2022-07-20\",\"r\",\"w\",\"613.3.9\"],[\"16.1\",\"2022-10-24\",\"r\",\"w\",\"614.2.9\"],[\"16.2\",\"2022-12-13\",\"r\",\"w\",\"614.3.7\"],[\"16.3\",\"2023-01-23\",\"r\",\"w\",\"614.4.6\"],[\"16.4\",\"2023-03-27\",\"r\",\"w\",\"615.1.26\"],[\"16.5\",\"2023-05-18\",\"r\",\"w\",\"615.2.9\"],[\"16.6\",\"2023-07-24\",\"r\",\"w\",\"615.3.12\"],[\"17.1\",\"2023-10-25\",\"r\",\"w\",\"616.2.9\"],[\"17.2\",\"2023-12-11\",\"r\",\"w\",\"617.1.17\"],[\"17.3\",\"2024-01-22\",\"r\",\"w\",\"617.2.4\"],[\"17.4\",\"2024-03-05\",\"r\",\"w\",\"618.1.15\"],[\"17.5\",\"2024-05-13\",\"r\",\"w\",\"618.2.12\"],[\"17.6\",\"2024-07-29\",\"r\",\"w\",\"618.3.11\"],[\"18.1\",\"2024-10-28\",\"r\",\"w\",\"619.2.8\"],[\"18.2\",\"2024-12-11\",\"r\",\"w\",\"620.1.16\"],[\"18.3\",\"2025-01-27\",\"r\",\"w\",\"620.2.4\"],[\"18.4\",\"2025-03-31\",\"r\",\"w\",\"621.1.15\"],[\"18.5\",\"2025-05-12\",\"r\",\"w\",\"621.2.5\"],[\"18.6\",\"2025-07-29\",\"r\",\"w\",\"621.3.11\"],[\"26.1\",null,\"b\",\"w\",\"622.2.5\"],[\"3.1\",\"2008-03-18\",\"r\",\"w\",\"525.13\"],[\"5.1\",\"2011-07-20\",\"r\",\"w\",\"534.48\"],[\"9.1\",\"2016-03-21\",\"r\",\"w\",\"601.5.17\"]]},safari_ios:{releases:[[\"1\",\"2007-06-29\",\"r\",\"w\",\"522.11\"],[\"2\",\"2008-07-11\",\"r\",\"w\",\"525.18\"],[\"3\",\"2009-06-17\",\"r\",\"w\",\"528.18\"],[\"4\",\"2010-06-21\",\"r\",\"w\",\"532.9\"],[\"5\",\"2011-10-12\",\"r\",\"w\",\"534.46\"],[\"6\",\"2012-09-10\",\"r\",\"w\",\"536.26\"],[\"7\",\"2013-09-18\",\"r\",\"w\",\"537.51\"],[\"8\",\"2014-09-17\",\"r\",\"w\",\"600.1.4\"],[\"9\",\"2015-09-16\",\"r\",\"w\",\"601.1.56\"],[\"10\",\"2016-09-13\",\"r\",\"w\",\"602.1.50\"],[\"11\",\"2017-09-19\",\"r\",\"w\",\"604.2.4\"],[\"12\",\"2018-09-17\",\"r\",\"w\",\"606.1.36\"],[\"13\",\"2019-09-19\",\"r\",\"w\",\"608.2.11\"],[\"14\",\"2020-09-16\",\"r\",\"w\",\"610.1.28\"],[\"15\",\"2021-09-20\",\"r\",\"w\",\"612.1.27\"],[\"16\",\"2022-09-12\",\"r\",\"w\",\"614.1.25\"],[\"17\",\"2023-09-18\",\"r\",\"w\",\"616.1.27\"],[\"18\",\"2024-09-16\",\"r\",\"w\",\"619.1.26\"],[\"26\",\"2025-09-15\",\"c\",\"w\",\"622.1.22\"],[\"10.3\",\"2017-03-27\",\"r\",\"w\",\"603.2.1\"],[\"11.3\",\"2018-03-29\",\"r\",\"w\",\"605.1.33\"],[\"12.2\",\"2019-03-25\",\"r\",\"w\",\"607.1.40\"],[\"13.4\",\"2020-03-24\",\"r\",\"w\",\"609.1.20\"],[\"14.5\",\"2021-04-26\",\"r\",\"w\",\"611.1.21\"],[\"15.1\",\"2021-10-25\",\"r\",\"w\",\"612.2.9\"],[\"15.2\",\"2021-12-13\",\"r\",\"w\",\"612.3.6\"],[\"15.3\",\"2022-01-26\",\"r\",\"w\",\"612.4.9\"],[\"15.4\",\"2022-03-14\",\"r\",\"w\",\"613.1.17\"],[\"15.5\",\"2022-05-16\",\"r\",\"w\",\"613.2.7\"],[\"15.6\",\"2022-07-20\",\"r\",\"w\",\"613.3.9\"],[\"16.1\",\"2022-10-24\",\"r\",\"w\",\"614.2.9\"],[\"16.2\",\"2022-12-13\",\"r\",\"w\",\"614.3.7\"],[\"16.3\",\"2023-01-23\",\"r\",\"w\",\"614.4.6\"],[\"16.4\",\"2023-03-27\",\"r\",\"w\",\"615.1.26\"],[\"16.5\",\"2023-05-18\",\"r\",\"w\",\"615.2.9\"],[\"16.6\",\"2023-07-24\",\"r\",\"w\",\"615.3.12\"],[\"17.1\",\"2023-10-25\",\"r\",\"w\",\"616.2.9\"],[\"17.2\",\"2023-12-11\",\"r\",\"w\",\"617.1.17\"],[\"17.3\",\"2024-01-22\",\"r\",\"w\",\"617.2.4\"],[\"17.4\",\"2024-03-05\",\"r\",\"w\",\"618.1.15\"],[\"17.5\",\"2024-05-13\",\"r\",\"w\",\"618.2.12\"],[\"17.6\",\"2024-07-29\",\"r\",\"w\",\"618.3.11\"],[\"18.1\",\"2024-10-28\",\"r\",\"w\",\"619.2.8\"],[\"18.2\",\"2024-12-11\",\"r\",\"w\",\"620.1.16\"],[\"18.3\",\"2025-01-27\",\"r\",\"w\",\"620.2.4\"],[\"18.4\",\"2025-03-31\",\"r\",\"w\",\"621.1.15\"],[\"18.5\",\"2025-05-12\",\"r\",\"w\",\"621.2.5\"],[\"18.6\",\"2025-07-29\",\"r\",\"w\",\"621.3.11\"],[\"26.1\",null,\"b\",\"w\",\"622.2.5\"],[\"3.2\",\"2010-04-03\",\"r\",\"w\",\"531.21\"],[\"4.2\",\"2010-11-22\",\"r\",\"w\",\"533.17\"],[\"9.3\",\"2016-03-21\",\"r\",\"w\",\"601.5.17\"]]},samsunginternet_android:{releases:[[\"1.0\",\"2013-04-27\",\"r\",\"w\",\"535.19\"],[\"1.5\",\"2013-09-25\",\"r\",\"b\",\"28\"],[\"1.6\",\"2014-04-11\",\"r\",\"b\",\"28\"],[\"10.0\",\"2019-08-22\",\"r\",\"b\",\"71\"],[\"10.2\",\"2019-10-09\",\"r\",\"b\",\"71\"],[\"11.0\",\"2019-12-05\",\"r\",\"b\",\"75\"],[\"11.2\",\"2020-03-22\",\"r\",\"b\",\"75\"],[\"12.0\",\"2020-06-19\",\"r\",\"b\",\"79\"],[\"12.1\",\"2020-07-07\",\"r\",\"b\",\"79\"],[\"13.0\",\"2020-12-02\",\"r\",\"b\",\"83\"],[\"13.2\",\"2021-01-20\",\"r\",\"b\",\"83\"],[\"14.0\",\"2021-04-17\",\"r\",\"b\",\"87\"],[\"14.2\",\"2021-06-25\",\"r\",\"b\",\"87\"],[\"15.0\",\"2021-08-13\",\"r\",\"b\",\"90\"],[\"16.0\",\"2021-11-25\",\"r\",\"b\",\"92\"],[\"16.2\",\"2022-03-06\",\"r\",\"b\",\"92\"],[\"17.0\",\"2022-05-04\",\"r\",\"b\",\"96\"],[\"18.0\",\"2022-08-08\",\"r\",\"b\",\"99\"],[\"18.1\",\"2022-09-09\",\"r\",\"b\",\"99\"],[\"19.0\",\"2022-11-01\",\"r\",\"b\",\"102\"],[\"19.1\",\"2022-11-08\",\"r\",\"b\",\"102\"],[\"2.0\",\"2014-10-17\",\"r\",\"b\",\"34\"],[\"2.1\",\"2015-01-07\",\"r\",\"b\",\"34\"],[\"20.0\",\"2023-02-10\",\"r\",\"b\",\"106\"],[\"21.0\",\"2023-05-19\",\"r\",\"b\",\"110\"],[\"22.0\",\"2023-07-14\",\"r\",\"b\",\"111\"],[\"23.0\",\"2023-10-18\",\"r\",\"b\",\"115\"],[\"24.0\",\"2024-01-25\",\"r\",\"b\",\"117\"],[\"25.0\",\"2024-04-24\",\"r\",\"b\",\"121\"],[\"26.0\",\"2024-06-07\",\"r\",\"b\",\"122\"],[\"27.0\",\"2024-11-06\",\"r\",\"b\",\"125\"],[\"28.0\",\"2025-04-02\",\"c\",\"b\",\"130\"],[\"3.0\",\"2015-04-10\",\"r\",\"b\",\"38\"],[\"3.2\",\"2015-08-24\",\"r\",\"b\",\"38\"],[\"4.0\",\"2016-03-11\",\"r\",\"b\",\"44\"],[\"4.2\",\"2016-08-02\",\"r\",\"b\",\"44\"],[\"5.0\",\"2016-12-15\",\"r\",\"b\",\"51\"],[\"5.2\",\"2017-04-21\",\"r\",\"b\",\"51\"],[\"5.4\",\"2017-05-17\",\"r\",\"b\",\"51\"],[\"6.0\",\"2017-08-23\",\"r\",\"b\",\"56\"],[\"6.2\",\"2017-10-26\",\"r\",\"b\",\"56\"],[\"6.4\",\"2018-02-19\",\"r\",\"b\",\"56\"],[\"7.0\",\"2018-03-16\",\"r\",\"b\",\"59\"],[\"7.2\",\"2018-06-20\",\"r\",\"b\",\"59\"],[\"7.4\",\"2018-09-12\",\"r\",\"b\",\"59\"],[\"8.0\",\"2018-07-18\",\"r\",\"b\",\"63\"],[\"8.2\",\"2018-12-21\",\"r\",\"b\",\"63\"],[\"9.0\",\"2018-09-15\",\"r\",\"b\",\"67\"],[\"9.2\",\"2019-04-02\",\"r\",\"b\",\"67\"],[\"9.4\",\"2019-07-25\",\"r\",\"b\",\"67\"]]},webview_android:{releases:[[\"1\",\"2008-09-23\",\"r\",\"w\",\"523.12\"],[\"2\",\"2009-10-26\",\"r\",\"w\",\"530.17\"],[\"3\",\"2011-02-22\",\"r\",\"w\",\"534.13\"],[\"4\",\"2011-10-18\",\"r\",\"w\",\"534.30\"],[\"37\",\"2014-09-03\",\"r\",\"b\",\"37\"],[\"38\",\"2014-10-08\",\"r\",\"b\",\"38\"],[\"39\",\"2014-11-12\",\"r\",\"b\",\"39\"],[\"40\",\"2015-01-21\",\"r\",\"b\",\"40\"],[\"41\",\"2015-03-11\",\"r\",\"b\",\"41\"],[\"42\",\"2015-04-15\",\"r\",\"b\",\"42\"],[\"43\",\"2015-05-27\",\"r\",\"b\",\"43\"],[\"44\",\"2015-07-29\",\"r\",\"b\",\"44\"],[\"45\",\"2015-09-01\",\"r\",\"b\",\"45\"],[\"46\",\"2015-10-14\",\"r\",\"b\",\"46\"],[\"47\",\"2015-12-02\",\"r\",\"b\",\"47\"],[\"48\",\"2016-01-26\",\"r\",\"b\",\"48\"],[\"49\",\"2016-03-09\",\"r\",\"b\",\"49\"],[\"50\",\"2016-04-13\",\"r\",\"b\",\"50\"],[\"51\",\"2016-06-08\",\"r\",\"b\",\"51\"],[\"52\",\"2016-07-27\",\"r\",\"b\",\"52\"],[\"53\",\"2016-09-07\",\"r\",\"b\",\"53\"],[\"54\",\"2016-10-19\",\"r\",\"b\",\"54\"],[\"55\",\"2016-12-06\",\"r\",\"b\",\"55\"],[\"56\",\"2017-02-01\",\"r\",\"b\",\"56\"],[\"57\",\"2017-03-16\",\"r\",\"b\",\"57\"],[\"58\",\"2017-04-25\",\"r\",\"b\",\"58\"],[\"59\",\"2017-06-06\",\"r\",\"b\",\"59\"],[\"60\",\"2017-08-01\",\"r\",\"b\",\"60\"],[\"61\",\"2017-09-05\",\"r\",\"b\",\"61\"],[\"62\",\"2017-10-24\",\"r\",\"b\",\"62\"],[\"63\",\"2017-12-05\",\"r\",\"b\",\"63\"],[\"64\",\"2018-01-23\",\"r\",\"b\",\"64\"],[\"65\",\"2018-03-06\",\"r\",\"b\",\"65\"],[\"66\",\"2018-04-17\",\"r\",\"b\",\"66\"],[\"67\",\"2018-05-31\",\"r\",\"b\",\"67\"],[\"68\",\"2018-07-24\",\"r\",\"b\",\"68\"],[\"69\",\"2018-09-04\",\"r\",\"b\",\"69\"],[\"70\",\"2018-10-17\",\"r\",\"b\",\"70\"],[\"71\",\"2018-12-04\",\"r\",\"b\",\"71\"],[\"72\",\"2019-01-29\",\"r\",\"b\",\"72\"],[\"73\",\"2019-03-12\",\"r\",\"b\",\"73\"],[\"74\",\"2019-04-24\",\"r\",\"b\",\"74\"],[\"75\",\"2019-06-04\",\"r\",\"b\",\"75\"],[\"76\",\"2019-07-30\",\"r\",\"b\",\"76\"],[\"77\",\"2019-09-10\",\"r\",\"b\",\"77\"],[\"78\",\"2019-10-22\",\"r\",\"b\",\"78\"],[\"79\",\"2019-12-17\",\"r\",\"b\",\"79\"],[\"80\",\"2020-02-04\",\"r\",\"b\",\"80\"],[\"81\",\"2020-04-07\",\"r\",\"b\",\"81\"],[\"83\",\"2020-05-19\",\"r\",\"b\",\"83\"],[\"84\",\"2020-07-27\",\"r\",\"b\",\"84\"],[\"85\",\"2020-08-25\",\"r\",\"b\",\"85\"],[\"86\",\"2020-10-20\",\"r\",\"b\",\"86\"],[\"87\",\"2020-11-17\",\"r\",\"b\",\"87\"],[\"88\",\"2021-01-19\",\"r\",\"b\",\"88\"],[\"89\",\"2021-03-02\",\"r\",\"b\",\"89\"],[\"90\",\"2021-04-13\",\"r\",\"b\",\"90\"],[\"91\",\"2021-05-25\",\"r\",\"b\",\"91\"],[\"92\",\"2021-07-20\",\"r\",\"b\",\"92\"],[\"93\",\"2021-08-31\",\"r\",\"b\",\"93\"],[\"94\",\"2021-09-21\",\"r\",\"b\",\"94\"],[\"95\",\"2021-10-19\",\"r\",\"b\",\"95\"],[\"96\",\"2021-11-15\",\"r\",\"b\",\"96\"],[\"97\",\"2022-01-04\",\"r\",\"b\",\"97\"],[\"98\",\"2022-02-01\",\"r\",\"b\",\"98\"],[\"99\",\"2022-03-01\",\"r\",\"b\",\"99\"],[\"100\",\"2022-03-29\",\"r\",\"b\",\"100\"],[\"101\",\"2022-04-26\",\"r\",\"b\",\"101\"],[\"102\",\"2022-05-24\",\"r\",\"b\",\"102\"],[\"103\",\"2022-06-21\",\"r\",\"b\",\"103\"],[\"104\",\"2022-08-02\",\"r\",\"b\",\"104\"],[\"105\",\"2022-09-02\",\"r\",\"b\",\"105\"],[\"106\",\"2022-09-27\",\"r\",\"b\",\"106\"],[\"107\",\"2022-10-25\",\"r\",\"b\",\"107\"],[\"108\",\"2022-11-29\",\"r\",\"b\",\"108\"],[\"109\",\"2023-01-10\",\"r\",\"b\",\"109\"],[\"110\",\"2023-02-07\",\"r\",\"b\",\"110\"],[\"111\",\"2023-03-01\",\"r\",\"b\",\"111\"],[\"112\",\"2023-04-04\",\"r\",\"b\",\"112\"],[\"113\",\"2023-05-02\",\"r\",\"b\",\"113\"],[\"114\",\"2023-05-30\",\"r\",\"b\",\"114\"],[\"115\",\"2023-07-21\",\"r\",\"b\",\"115\"],[\"116\",\"2023-08-15\",\"r\",\"b\",\"116\"],[\"117\",\"2023-09-12\",\"r\",\"b\",\"117\"],[\"118\",\"2023-10-10\",\"r\",\"b\",\"118\"],[\"119\",\"2023-10-31\",\"r\",\"b\",\"119\"],[\"120\",\"2023-12-05\",\"r\",\"b\",\"120\"],[\"121\",\"2024-01-23\",\"r\",\"b\",\"121\"],[\"122\",\"2024-02-20\",\"r\",\"b\",\"122\"],[\"123\",\"2024-03-19\",\"r\",\"b\",\"123\"],[\"124\",\"2024-04-16\",\"r\",\"b\",\"124\"],[\"125\",\"2024-05-14\",\"r\",\"b\",\"125\"],[\"126\",\"2024-06-11\",\"r\",\"b\",\"126\"],[\"127\",\"2024-07-23\",\"r\",\"b\",\"127\"],[\"128\",\"2024-08-20\",\"r\",\"b\",\"128\"],[\"129\",\"2024-09-17\",\"r\",\"b\",\"129\"],[\"130\",\"2024-10-15\",\"r\",\"b\",\"130\"],[\"131\",\"2024-11-12\",\"r\",\"b\",\"131\"],[\"132\",\"2025-01-14\",\"r\",\"b\",\"132\"],[\"133\",\"2025-02-04\",\"r\",\"b\",\"133\"],[\"134\",\"2025-03-04\",\"r\",\"b\",\"134\"],[\"135\",\"2025-04-01\",\"r\",\"b\",\"135\"],[\"136\",\"2025-04-29\",\"r\",\"b\",\"136\"],[\"137\",\"2025-05-27\",\"r\",\"b\",\"137\"],[\"138\",\"2025-06-24\",\"r\",\"b\",\"138\"],[\"139\",\"2025-08-05\",\"r\",\"b\",\"139\"],[\"140\",\"2025-09-02\",\"c\",\"b\",\"140\"],[\"141\",\"2025-09-30\",\"b\",\"b\",\"141\"],[\"142\",\"2025-10-28\",\"n\",\"b\",\"142\"],[\"143\",null,\"p\",\"b\",\"143\"],[\"1.5\",\"2009-04-27\",\"r\",\"w\",\"525.20\"],[\"2.2\",\"2010-05-20\",\"r\",\"w\",\"533.1\"],[\"4.4\",\"2013-12-09\",\"r\",\"b\",\"30\"],[\"4.4.3\",\"2014-06-02\",\"r\",\"b\",\"33\"]]}},a={ya_android:{releases:[[\"1.0\",\"u\",\"u\",\"b\",\"25\"],[\"1.5\",\"u\",\"u\",\"b\",\"22\"],[\"1.6\",\"u\",\"u\",\"b\",\"25\"],[\"1.7\",\"u\",\"u\",\"b\",\"25\"],[\"1.20\",\"u\",\"u\",\"b\",\"25\"],[\"2.5\",\"u\",\"u\",\"b\",\"25\"],[\"3.2\",\"u\",\"u\",\"b\",\"25\"],[\"4.6\",\"u\",\"u\",\"b\",\"25\"],[\"5.3\",\"u\",\"u\",\"b\",\"25\"],[\"5.4\",\"u\",\"u\",\"b\",\"25\"],[\"7.4\",\"u\",\"u\",\"b\",\"25\"],[\"9.6\",\"u\",\"u\",\"b\",\"25\"],[\"10.5\",\"u\",\"u\",\"b\",\"25\"],[\"11.4\",\"u\",\"u\",\"b\",\"25\"],[\"11.5\",\"u\",\"u\",\"b\",\"25\"],[\"12.7\",\"u\",\"u\",\"b\",\"25\"],[\"13.9\",\"u\",\"u\",\"b\",\"28\"],[\"13.10\",\"u\",\"u\",\"b\",\"28\"],[\"13.11\",\"u\",\"u\",\"b\",\"28\"],[\"13.12\",\"u\",\"u\",\"b\",\"30\"],[\"14.2\",\"u\",\"u\",\"b\",\"32\"],[\"14.4\",\"u\",\"u\",\"b\",\"33\"],[\"14.5\",\"u\",\"u\",\"b\",\"34\"],[\"14.7\",\"u\",\"u\",\"b\",\"35\"],[\"14.8\",\"u\",\"u\",\"b\",\"36\"],[\"14.10\",\"u\",\"u\",\"b\",\"37\"],[\"14.12\",\"u\",\"u\",\"b\",\"38\"],[\"15.2\",\"u\",\"u\",\"b\",\"40\"],[\"15.4\",\"u\",\"u\",\"b\",\"41\"],[\"15.6\",\"u\",\"u\",\"b\",\"42\"],[\"15.7\",\"u\",\"u\",\"b\",\"43\"],[\"15.9\",\"u\",\"u\",\"b\",\"44\"],[\"15.10\",\"u\",\"u\",\"b\",\"45\"],[\"15.12\",\"u\",\"u\",\"b\",\"46\"],[\"16.2\",\"u\",\"u\",\"b\",\"47\"],[\"16.3\",\"u\",\"u\",\"b\",\"47\"],[\"16.4\",\"u\",\"u\",\"b\",\"49\"],[\"16.6\",\"u\",\"u\",\"b\",\"50\"],[\"16.7\",\"u\",\"u\",\"b\",\"51\"],[\"16.9\",\"u\",\"u\",\"b\",\"52\"],[\"16.10\",\"u\",\"u\",\"b\",\"53\"],[\"16.11\",\"u\",\"u\",\"b\",\"54\"],[\"17.1\",\"u\",\"u\",\"b\",\"55\"],[\"17.3\",\"u\",\"u\",\"b\",\"56\"],[\"17.4\",\"u\",\"u\",\"b\",\"57\"],[\"17.6\",\"u\",\"u\",\"b\",\"58\"],[\"17.7\",\"u\",\"u\",\"b\",\"59\"],[\"17.9\",\"u\",\"u\",\"b\",\"60\"],[\"17.10\",\"u\",\"u\",\"b\",\"61\"],[\"17.11\",\"u\",\"u\",\"b\",\"62\"],[\"18.1\",\"u\",\"u\",\"b\",\"63\"],[\"18.2\",\"u\",\"u\",\"b\",\"63\"],[\"18.3\",\"u\",\"u\",\"b\",\"64\"],[\"18.4\",\"u\",\"u\",\"b\",\"65\"],[\"18.6\",\"u\",\"u\",\"b\",\"66\"],[\"18.7\",\"u\",\"u\",\"b\",\"67\"],[\"18.9\",\"u\",\"u\",\"b\",\"68\"],[\"18.10\",\"u\",\"u\",\"b\",\"69\"],[\"18.11\",\"u\",\"u\",\"b\",\"70\"],[\"19.1\",\"u\",\"u\",\"b\",\"71\"],[\"19.3\",\"u\",\"u\",\"b\",\"72\"],[\"19.4\",\"u\",\"u\",\"b\",\"73\"],[\"19.5\",\"u\",\"u\",\"b\",\"75\"],[\"19.6\",\"u\",\"u\",\"b\",\"75\"],[\"19.7\",\"u\",\"u\",\"b\",\"75\"],[\"19.9\",\"u\",\"u\",\"b\",\"76\"],[\"19.10\",\"u\",\"u\",\"b\",\"77\"],[\"19.11\",\"u\",\"u\",\"b\",\"78\"],[\"19.12\",\"u\",\"u\",\"b\",\"78\"],[\"20.2\",\"u\",\"u\",\"b\",\"79\"],[\"20.3\",\"u\",\"u\",\"b\",\"80\"],[\"20.4\",\"u\",\"u\",\"b\",\"81\"],[\"20.6\",\"u\",\"u\",\"b\",\"81\"],[\"20.7\",\"u\",\"u\",\"b\",\"83\"],[\"20.8\",\"2020-09-02\",\"u\",\"b\",\"84\"],[\"20.9\",\"2020-09-27\",\"u\",\"b\",\"85\"],[\"20.11\",\"2020-11-11\",\"u\",\"b\",\"86\"],[\"20.12\",\"2020-12-20\",\"u\",\"b\",\"87\"],[\"21.1\",\"2021-12-31\",\"u\",\"b\",\"88\"],[\"21.2\",\"u\",\"u\",\"b\",\"88\"],[\"21.3\",\"2021-04-04\",\"u\",\"b\",\"89\"],[\"21.5\",\"u\",\"u\",\"b\",\"90\"],[\"21.6\",\"2021-09-28\",\"u\",\"b\",\"91\"],[\"21.8\",\"2021-09-28\",\"u\",\"b\",\"92\"],[\"21.9\",\"2021-09-29\",\"u\",\"b\",\"93\"],[\"21.11\",\"2021-10-29\",\"u\",\"b\",\"94\"],[\"22.1\",\"2021-12-31\",\"u\",\"b\",\"96\"],[\"22.3\",\"2022-03-25\",\"u\",\"b\",\"98\"],[\"22.4\",\"u\",\"u\",\"b\",\"92\"],[\"22.5\",\"2022-05-20\",\"u\",\"b\",\"100\"],[\"22.7\",\"2022-07-07\",\"u\",\"b\",\"102\"],[\"22.8\",\"u\",\"u\",\"b\",\"104\"],[\"22.9\",\"2022-08-27\",\"u\",\"b\",\"104\"],[\"22.11\",\"2022-11-11\",\"u\",\"b\",\"106\"],[\"23.1\",\"2023-01-10\",\"u\",\"b\",\"108\"],[\"23.3\",\"2023-03-26\",\"u\",\"b\",\"110\"],[\"23.5\",\"2023-05-19\",\"u\",\"b\",\"112\"],[\"23.7\",\"2023-07-06\",\"u\",\"b\",\"114\"],[\"23.9\",\"2023-09-13\",\"u\",\"b\",\"116\"],[\"23.11\",\"2023-11-15\",\"u\",\"b\",\"118\"],[\"24.1\",\"2024-01-18\",\"u\",\"b\",\"120\"],[\"24.2\",\"2024-03-25\",\"u\",\"b\",\"120\"],[\"24.4\",\"2024-03-27\",\"u\",\"b\",\"122\"],[\"24.6\",\"2024-06-04\",\"u\",\"b\",\"124\"],[\"24.7\",\"2024-07-18\",\"u\",\"b\",\"126\"],[\"24.9\",\"2024-10-01\",\"u\",\"b\",\"126\"],[\"24.10\",\"2024-10-11\",\"u\",\"b\",\"128\"],[\"24.12\",\"2024-11-30\",\"u\",\"b\",\"130\"],[\"25.2\",\"2025-04-24\",\"u\",\"b\",\"132\"],[\"25.3\",\"2025-04-23\",\"u\",\"b\",\"132\"],[\"25.4\",\"2025-04-23\",\"u\",\"b\",\"134\"],[\"25.6\",\"2025-09-04\",\"u\",\"b\",\"136\"],[\"25.8\",\"2025-08-30\",\"u\",\"b\",\"138\"]]},uc_android:{releases:[[\"10.5\",\"u\",\"u\",\"b\",\"31\"],[\"10.7\",\"u\",\"u\",\"b\",\"31\"],[\"10.8\",\"u\",\"u\",\"b\",\"31\"],[\"10.10\",\"u\",\"u\",\"b\",\"31\"],[\"11.0\",\"u\",\"u\",\"b\",\"31\"],[\"11.1\",\"u\",\"u\",\"b\",\"40\"],[\"11.2\",\"u\",\"u\",\"b\",\"40\"],[\"11.3\",\"u\",\"u\",\"b\",\"40\"],[\"11.4\",\"u\",\"u\",\"b\",\"40\"],[\"11.5\",\"u\",\"u\",\"b\",\"40\"],[\"11.6\",\"u\",\"u\",\"b\",\"57\"],[\"11.8\",\"u\",\"u\",\"b\",\"57\"],[\"11.9\",\"u\",\"u\",\"b\",\"57\"],[\"12.0\",\"u\",\"u\",\"b\",\"57\"],[\"12.1\",\"u\",\"u\",\"b\",\"57\"],[\"12.2\",\"u\",\"u\",\"b\",\"57\"],[\"12.3\",\"u\",\"u\",\"b\",\"57\"],[\"12.4\",\"u\",\"u\",\"b\",\"57\"],[\"12.5\",\"u\",\"u\",\"b\",\"57\"],[\"12.6\",\"u\",\"u\",\"b\",\"57\"],[\"12.7\",\"u\",\"u\",\"b\",\"57\"],[\"12.8\",\"u\",\"u\",\"b\",\"57\"],[\"12.9\",\"u\",\"u\",\"b\",\"57\"],[\"12.10\",\"u\",\"u\",\"b\",\"57\"],[\"12.11\",\"u\",\"u\",\"b\",\"57\"],[\"12.12\",\"u\",\"u\",\"b\",\"57\"],[\"12.13\",\"u\",\"u\",\"b\",\"57\"],[\"12.14\",\"u\",\"u\",\"b\",\"57\"],[\"13.0\",\"u\",\"u\",\"b\",\"57\"],[\"13.1\",\"u\",\"u\",\"b\",\"57\"],[\"13.2\",\"u\",\"u\",\"b\",\"57\"],[\"13.3\",\"2020-09-09\",\"u\",\"b\",\"78\"],[\"13.4\",\"2021-09-28\",\"u\",\"b\",\"78\"],[\"13.5\",\"2023-08-25\",\"u\",\"b\",\"78\"],[\"13.6\",\"2023-12-17\",\"u\",\"b\",\"78\"],[\"13.7\",\"2023-06-24\",\"u\",\"b\",\"78\"],[\"13.8\",\"2022-04-30\",\"u\",\"b\",\"78\"],[\"13.9\",\"2022-05-18\",\"u\",\"b\",\"78\"],[\"15.0\",\"2022-08-24\",\"u\",\"b\",\"78\"],[\"15.1\",\"2022-11-11\",\"u\",\"b\",\"78\"],[\"15.2\",\"2023-04-23\",\"u\",\"b\",\"78\"],[\"15.3\",\"2023-03-17\",\"u\",\"b\",\"100\"],[\"15.4\",\"2023-10-25\",\"u\",\"b\",\"100\"],[\"15.5\",\"2023-08-22\",\"u\",\"b\",\"100\"],[\"16.0\",\"2023-08-24\",\"u\",\"b\",\"100\"],[\"16.1\",\"2023-10-15\",\"u\",\"b\",\"100\"],[\"16.2\",\"2023-12-09\",\"u\",\"b\",\"100\"],[\"16.3\",\"2024-03-08\",\"u\",\"b\",\"100\"],[\"16.4\",\"2024-10-03\",\"u\",\"b\",\"100\"],[\"16.5\",\"2024-05-30\",\"u\",\"b\",\"100\"],[\"16.6\",\"2024-07-23\",\"u\",\"b\",\"100\"],[\"17.0\",\"2024-08-24\",\"u\",\"b\",\"100\"],[\"17.1\",\"2024-09-26\",\"u\",\"b\",\"100\"],[\"17.2\",\"2024-11-29\",\"u\",\"b\",\"100\"],[\"17.3\",\"2025-01-07\",\"u\",\"b\",\"100\"],[\"17.4\",\"2025-02-26\",\"u\",\"b\",\"100\"],[\"17.5\",\"2025-04-08\",\"u\",\"b\",\"100\"],[\"17.6\",\"2025-05-15\",\"u\",\"b\",\"123\"],[\"17.7\",\"2025-06-11\",\"u\",\"b\",\"123\"],[\"17.8\",\"2025-07-30\",\"u\",\"b\",\"123\"],[\"18.0\",\"2025-08-17\",\"u\",\"b\",\"123\"]]},qq_android:{releases:[[\"6.0\",\"u\",\"u\",\"b\",\"37\"],[\"6.1\",\"u\",\"u\",\"b\",\"37\"],[\"6.2\",\"u\",\"u\",\"b\",\"37\"],[\"6.3\",\"u\",\"u\",\"b\",\"37\"],[\"6.4\",\"u\",\"u\",\"b\",\"37\"],[\"6.6\",\"u\",\"u\",\"b\",\"37\"],[\"6.7\",\"u\",\"u\",\"b\",\"37\"],[\"6.8\",\"u\",\"u\",\"b\",\"37\"],[\"6.9\",\"u\",\"u\",\"b\",\"37\"],[\"7.0\",\"u\",\"u\",\"b\",\"37\"],[\"7.1\",\"u\",\"u\",\"b\",\"37\"],[\"7.2\",\"u\",\"u\",\"b\",\"37\"],[\"7.3\",\"u\",\"u\",\"b\",\"37\"],[\"7.4\",\"u\",\"u\",\"b\",\"37\"],[\"7.5\",\"u\",\"u\",\"b\",\"37\"],[\"7.6\",\"u\",\"u\",\"b\",\"37\"],[\"7.7\",\"u\",\"u\",\"b\",\"37\"],[\"7.8\",\"u\",\"u\",\"b\",\"37\"],[\"7.9\",\"u\",\"u\",\"b\",\"37\"],[\"8.0\",\"u\",\"u\",\"b\",\"37\"],[\"8.1\",\"u\",\"u\",\"b\",\"57\"],[\"8.2\",\"u\",\"u\",\"b\",\"57\"],[\"8.3\",\"u\",\"u\",\"b\",\"57\"],[\"8.4\",\"u\",\"u\",\"b\",\"57\"],[\"8.5\",\"u\",\"u\",\"b\",\"57\"],[\"8.6\",\"u\",\"u\",\"b\",\"57\"],[\"8.7\",\"u\",\"u\",\"b\",\"57\"],[\"8.8\",\"u\",\"u\",\"b\",\"57\"],[\"8.9\",\"u\",\"u\",\"b\",\"57\"],[\"9.1\",\"u\",\"u\",\"b\",\"57\"],[\"9.6\",\"u\",\"u\",\"b\",\"66\"],[\"9.7\",\"u\",\"u\",\"b\",\"66\"],[\"9.8\",\"u\",\"u\",\"b\",\"66\"],[\"10.0\",\"u\",\"u\",\"b\",\"66\"],[\"10.1\",\"u\",\"u\",\"b\",\"66\"],[\"10.2\",\"u\",\"u\",\"b\",\"66\"],[\"10.3\",\"u\",\"u\",\"b\",\"66\"],[\"10.4\",\"u\",\"u\",\"b\",\"66\"],[\"10.5\",\"u\",\"u\",\"b\",\"66\"],[\"10.7\",\"2020-09-09\",\"u\",\"b\",\"66\"],[\"10.9\",\"2020-11-22\",\"u\",\"b\",\"77\"],[\"11.0\",\"u\",\"u\",\"b\",\"77\"],[\"11.2\",\"2021-01-30\",\"u\",\"b\",\"77\"],[\"11.3\",\"2021-03-31\",\"u\",\"b\",\"77\"],[\"11.7\",\"2021-11-02\",\"u\",\"b\",\"89\"],[\"11.9\",\"u\",\"u\",\"b\",\"89\"],[\"12.0\",\"2021-11-04\",\"u\",\"b\",\"89\"],[\"12.1\",\"2021-11-05\",\"u\",\"b\",\"89\"],[\"12.2\",\"2021-12-07\",\"u\",\"b\",\"89\"],[\"12.5\",\"2022-04-07\",\"u\",\"b\",\"89\"],[\"12.7\",\"2022-05-21\",\"u\",\"b\",\"89\"],[\"12.8\",\"2022-06-30\",\"u\",\"b\",\"89\"],[\"12.9\",\"2022-07-26\",\"u\",\"b\",\"89\"],[\"13.0\",\"2022-08-15\",\"u\",\"b\",\"89\"],[\"13.1\",\"2022-09-10\",\"u\",\"b\",\"89\"],[\"13.2\",\"2022-10-26\",\"u\",\"b\",\"89\"],[\"13.3\",\"2022-11-09\",\"u\",\"b\",\"89\"],[\"13.4\",\"2023-04-26\",\"u\",\"b\",\"98\"],[\"13.5\",\"2023-02-06\",\"u\",\"b\",\"98\"],[\"13.6\",\"2023-02-09\",\"u\",\"b\",\"98\"],[\"13.7\",\"2023-04-21\",\"u\",\"b\",\"98\"],[\"13.8\",\"2023-04-21\",\"u\",\"b\",\"98\"],[\"14.0\",\"2023-12-12\",\"u\",\"b\",\"98\"],[\"14.1\",\"2023-07-16\",\"u\",\"b\",\"98\"],[\"14.2\",\"2023-10-14\",\"u\",\"b\",\"109\"],[\"14.3\",\"2023-09-13\",\"u\",\"b\",\"109\"],[\"14.4\",\"2023-10-31\",\"u\",\"b\",\"109\"],[\"14.5\",\"2023-11-12\",\"u\",\"b\",\"109\"],[\"14.6\",\"2023-12-24\",\"u\",\"b\",\"109\"],[\"14.7\",\"2024-01-18\",\"u\",\"b\",\"109\"],[\"14.8\",\"2024-03-04\",\"u\",\"b\",\"109\"],[\"14.9\",\"2024-04-09\",\"u\",\"b\",\"109\"],[\"15.0\",\"2024-04-17\",\"u\",\"b\",\"109\"],[\"15.1\",\"2024-05-18\",\"u\",\"b\",\"109\"],[\"15.2\",\"2024-10-24\",\"u\",\"b\",\"109\"],[\"15.3\",\"2024-07-28\",\"u\",\"b\",\"109\"],[\"15.4\",\"2024-09-07\",\"u\",\"b\",\"109\"],[\"15.5\",\"2024-09-24\",\"u\",\"b\",\"109\"],[\"15.6\",\"2024-10-24\",\"u\",\"b\",\"109\"],[\"15.7\",\"2024-12-03\",\"u\",\"b\",\"109\"],[\"15.8\",\"2024-12-11\",\"u\",\"b\",\"109\"],[\"15.9\",\"2025-02-01\",\"u\",\"b\",\"109\"],[\"19.1\",\"2025-07-08\",\"u\",\"b\",\"121\"],[\"19.2\",\"2025-07-15\",\"u\",\"b\",\"121\"],[\"19.3\",\"2025-08-31\",\"u\",\"b\",\"121\"],[\"19.4\",\"2025-09-20\",\"u\",\"b\",\"121\"]]},kai_os:{releases:[[\"1.0\",\"2017-03-01\",\"u\",\"g\",\"37\"],[\"2.0\",\"2017-07-01\",\"u\",\"g\",\"48\"],[\"2.5\",\"2017-07-01\",\"u\",\"g\",\"48\"],[\"3.0\",\"2021-09-01\",\"u\",\"g\",\"84\"],[\"3.1\",\"2022-03-01\",\"u\",\"g\",\"84\"],[\"4.0\",\"2025-05-01\",\"u\",\"g\",\"123\"]]},facebook_android:{releases:[[\"66\",\"u\",\"u\",\"b\",\"48\"],[\"68\",\"u\",\"u\",\"b\",\"48\"],[\"74\",\"u\",\"u\",\"b\",\"50\"],[\"75\",\"u\",\"u\",\"b\",\"50\"],[\"76\",\"u\",\"u\",\"b\",\"50\"],[\"77\",\"u\",\"u\",\"b\",\"50\"],[\"78\",\"u\",\"u\",\"b\",\"50\"],[\"79\",\"u\",\"u\",\"b\",\"50\"],[\"80\",\"u\",\"u\",\"b\",\"51\"],[\"81\",\"u\",\"u\",\"b\",\"51\"],[\"82\",\"u\",\"u\",\"b\",\"51\"],[\"83\",\"u\",\"u\",\"b\",\"51\"],[\"84\",\"u\",\"u\",\"b\",\"51\"],[\"86\",\"u\",\"u\",\"b\",\"51\"],[\"87\",\"u\",\"u\",\"b\",\"52\"],[\"88\",\"u\",\"u\",\"b\",\"52\"],[\"89\",\"u\",\"u\",\"b\",\"52\"],[\"90\",\"u\",\"u\",\"b\",\"52\"],[\"91\",\"u\",\"u\",\"b\",\"52\"],[\"92\",\"u\",\"u\",\"b\",\"52\"],[\"93\",\"u\",\"u\",\"b\",\"52\"],[\"94\",\"u\",\"u\",\"b\",\"52\"],[\"95\",\"u\",\"u\",\"b\",\"53\"],[\"96\",\"u\",\"u\",\"b\",\"53\"],[\"97\",\"u\",\"u\",\"b\",\"53\"],[\"98\",\"u\",\"u\",\"b\",\"53\"],[\"99\",\"u\",\"u\",\"b\",\"53\"],[\"100\",\"u\",\"u\",\"b\",\"54\"],[\"101\",\"u\",\"u\",\"b\",\"54\"],[\"103\",\"u\",\"u\",\"b\",\"54\"],[\"104\",\"u\",\"u\",\"b\",\"54\"],[\"105\",\"u\",\"u\",\"b\",\"54\"],[\"106\",\"u\",\"u\",\"b\",\"55\"],[\"107\",\"u\",\"u\",\"b\",\"55\"],[\"108\",\"u\",\"u\",\"b\",\"55\"],[\"109\",\"u\",\"u\",\"b\",\"55\"],[\"110\",\"u\",\"u\",\"b\",\"55\"],[\"111\",\"u\",\"u\",\"b\",\"55\"],[\"112\",\"u\",\"u\",\"b\",\"56\"],[\"113\",\"u\",\"u\",\"b\",\"56\"],[\"114\",\"u\",\"u\",\"b\",\"56\"],[\"115\",\"u\",\"u\",\"b\",\"56\"],[\"116\",\"u\",\"u\",\"b\",\"56\"],[\"117\",\"u\",\"u\",\"b\",\"57\"],[\"118\",\"u\",\"u\",\"b\",\"57\"],[\"119\",\"u\",\"u\",\"b\",\"57\"],[\"120\",\"u\",\"u\",\"b\",\"57\"],[\"121\",\"u\",\"u\",\"b\",\"57\"],[\"122\",\"u\",\"u\",\"b\",\"58\"],[\"123\",\"u\",\"u\",\"b\",\"58\"],[\"124\",\"u\",\"u\",\"b\",\"58\"],[\"125\",\"u\",\"u\",\"b\",\"58\"],[\"126\",\"u\",\"u\",\"b\",\"58\"],[\"127\",\"u\",\"u\",\"b\",\"58\"],[\"128\",\"u\",\"u\",\"b\",\"58\"],[\"129\",\"u\",\"u\",\"b\",\"58\"],[\"130\",\"u\",\"u\",\"b\",\"59\"],[\"131\",\"u\",\"u\",\"b\",\"59\"],[\"132\",\"u\",\"u\",\"b\",\"59\"],[\"133\",\"u\",\"u\",\"b\",\"59\"],[\"134\",\"u\",\"u\",\"b\",\"59\"],[\"135\",\"u\",\"u\",\"b\",\"59\"],[\"136\",\"u\",\"u\",\"b\",\"59\"],[\"137\",\"u\",\"u\",\"b\",\"59\"],[\"138\",\"u\",\"u\",\"b\",\"60\"],[\"140\",\"u\",\"u\",\"b\",\"60\"],[\"142\",\"u\",\"u\",\"b\",\"61\"],[\"143\",\"u\",\"u\",\"b\",\"61\"],[\"144\",\"u\",\"u\",\"b\",\"61\"],[\"145\",\"u\",\"u\",\"b\",\"61\"],[\"146\",\"u\",\"u\",\"b\",\"61\"],[\"147\",\"u\",\"u\",\"b\",\"61\"],[\"148\",\"u\",\"u\",\"b\",\"61\"],[\"149\",\"u\",\"u\",\"b\",\"62\"],[\"150\",\"u\",\"u\",\"b\",\"62\"],[\"151\",\"u\",\"u\",\"b\",\"62\"],[\"152\",\"u\",\"u\",\"b\",\"62\"],[\"153\",\"u\",\"u\",\"b\",\"63\"],[\"154\",\"u\",\"u\",\"b\",\"63\"],[\"155\",\"u\",\"u\",\"b\",\"63\"],[\"156\",\"u\",\"u\",\"b\",\"63\"],[\"157\",\"u\",\"u\",\"b\",\"64\"],[\"158\",\"u\",\"u\",\"b\",\"64\"],[\"159\",\"u\",\"u\",\"b\",\"64\"],[\"160\",\"u\",\"u\",\"b\",\"64\"],[\"161\",\"u\",\"u\",\"b\",\"64\"],[\"162\",\"u\",\"u\",\"b\",\"64\"],[\"163\",\"u\",\"u\",\"b\",\"65\"],[\"164\",\"u\",\"u\",\"b\",\"65\"],[\"165\",\"u\",\"u\",\"b\",\"65\"],[\"166\",\"u\",\"u\",\"b\",\"65\"],[\"167\",\"u\",\"u\",\"b\",\"65\"],[\"168\",\"u\",\"u\",\"b\",\"65\"],[\"169\",\"u\",\"u\",\"b\",\"66\"],[\"170\",\"u\",\"u\",\"b\",\"66\"],[\"171\",\"u\",\"u\",\"b\",\"66\"],[\"172\",\"u\",\"u\",\"b\",\"66\"],[\"173\",\"u\",\"u\",\"b\",\"66\"],[\"174\",\"u\",\"u\",\"b\",\"66\"],[\"175\",\"u\",\"u\",\"b\",\"67\"],[\"176\",\"u\",\"u\",\"b\",\"67\"],[\"177\",\"u\",\"u\",\"b\",\"67\"],[\"178\",\"u\",\"u\",\"b\",\"67\"],[\"180\",\"u\",\"u\",\"b\",\"67\"],[\"181\",\"u\",\"u\",\"b\",\"67\"],[\"182\",\"u\",\"u\",\"b\",\"67\"],[\"183\",\"u\",\"u\",\"b\",\"68\"],[\"184\",\"u\",\"u\",\"b\",\"68\"],[\"185\",\"u\",\"u\",\"b\",\"68\"],[\"186\",\"u\",\"u\",\"b\",\"68\"],[\"187\",\"u\",\"u\",\"b\",\"68\"],[\"188\",\"u\",\"u\",\"b\",\"68\"],[\"202\",\"u\",\"u\",\"b\",\"71\"],[\"227\",\"u\",\"u\",\"b\",\"75\"],[\"228\",\"u\",\"u\",\"b\",\"75\"],[\"229\",\"u\",\"u\",\"b\",\"75\"],[\"230\",\"u\",\"u\",\"b\",\"75\"],[\"231\",\"u\",\"u\",\"b\",\"75\"],[\"233\",\"u\",\"u\",\"b\",\"76\"],[\"235\",\"u\",\"u\",\"b\",\"76\"],[\"236\",\"u\",\"u\",\"b\",\"76\"],[\"237\",\"u\",\"u\",\"b\",\"76\"],[\"238\",\"u\",\"u\",\"b\",\"76\"],[\"240\",\"u\",\"u\",\"b\",\"77\"],[\"241\",\"u\",\"u\",\"b\",\"77\"],[\"242\",\"u\",\"u\",\"b\",\"77\"],[\"243\",\"u\",\"u\",\"b\",\"77\"],[\"244\",\"u\",\"u\",\"b\",\"78\"],[\"245\",\"u\",\"u\",\"b\",\"78\"],[\"246\",\"u\",\"u\",\"b\",\"78\"],[\"247\",\"u\",\"u\",\"b\",\"78\"],[\"248\",\"u\",\"u\",\"b\",\"78\"],[\"249\",\"u\",\"u\",\"b\",\"78\"],[\"250\",\"u\",\"u\",\"b\",\"78\"],[\"251\",\"u\",\"u\",\"b\",\"79\"],[\"252\",\"u\",\"u\",\"b\",\"79\"],[\"253\",\"u\",\"u\",\"b\",\"79\"],[\"254\",\"u\",\"u\",\"b\",\"79\"],[\"255\",\"u\",\"u\",\"b\",\"79\"],[\"256\",\"u\",\"u\",\"b\",\"80\"],[\"257\",\"u\",\"u\",\"b\",\"80\"],[\"258\",\"u\",\"u\",\"b\",\"80\"],[\"259\",\"u\",\"u\",\"b\",\"80\"],[\"260\",\"u\",\"u\",\"b\",\"80\"],[\"261\",\"u\",\"u\",\"b\",\"80\"],[\"262\",\"u\",\"u\",\"b\",\"80\"],[\"263\",\"u\",\"u\",\"b\",\"80\"],[\"264\",\"u\",\"u\",\"b\",\"80\"],[\"265\",\"u\",\"u\",\"b\",\"80\"],[\"266\",\"u\",\"u\",\"b\",\"81\"],[\"267\",\"u\",\"u\",\"b\",\"81\"],[\"268\",\"u\",\"u\",\"b\",\"81\"],[\"269\",\"u\",\"u\",\"b\",\"81\"],[\"270\",\"u\",\"u\",\"b\",\"81\"],[\"271\",\"u\",\"u\",\"b\",\"81\"],[\"272\",\"u\",\"u\",\"b\",\"83\"],[\"273\",\"u\",\"u\",\"b\",\"83\"],[\"274\",\"u\",\"u\",\"b\",\"83\"],[\"275\",\"u\",\"u\",\"b\",\"83\"],[\"297\",\"2020-12-02\",\"u\",\"b\",\"86\"],[\"348\",\"2021-12-19\",\"u\",\"b\",\"96\"],[\"399\",\"2023-02-04\",\"u\",\"b\",\"109\"],[\"400\",\"2023-02-10\",\"u\",\"b\",\"109\"],[\"420\",\"2023-06-28\",\"u\",\"b\",\"114\"],[\"430\",\"2023-09-03\",\"u\",\"b\",\"116\"],[\"434\",\"2023-10-05\",\"u\",\"b\",\"117\"],[\"436\",\"2023-10-13\",\"u\",\"b\",\"117\"],[\"437\",\"u\",\"u\",\"b\",\"118\"],[\"438\",\"2023-10-28\",\"u\",\"b\",\"118\"],[\"439\",\"2023-11-11\",\"u\",\"b\",\"119\"],[\"440\",\"2023-11-12\",\"u\",\"b\",\"119\"],[\"441\",\"2023-11-20\",\"u\",\"b\",\"119\"],[\"442\",\"2023-11-29\",\"u\",\"b\",\"119\"],[\"443\",\"2023-12-07\",\"u\",\"b\",\"120\"],[\"444\",\"2023-12-13\",\"u\",\"b\",\"120\"],[\"445\",\"2023-12-21\",\"u\",\"b\",\"120\"],[\"446\",\"2024-01-06\",\"u\",\"b\",\"120\"],[\"447\",\"2024-01-12\",\"u\",\"b\",\"120\"],[\"448\",\"2024-01-29\",\"u\",\"b\",\"121\"],[\"449\",\"2024-02-02\",\"u\",\"b\",\"121\"],[\"450\",\"2024-02-05\",\"u\",\"b\",\"121\"],[\"451\",\"2024-02-17\",\"u\",\"b\",\"121\"],[\"452\",\"2024-02-25\",\"u\",\"b\",\"122\"],[\"453\",\"2024-02-28\",\"u\",\"b\",\"122\"],[\"454\",\"2024-03-04\",\"u\",\"b\",\"122\"],[\"465\",\"2024-07-07\",\"u\",\"b\",\"126\"],[\"466\",\"u\",\"u\",\"b\",\"126\"],[\"469\",\"u\",\"u\",\"b\",\"126\"],[\"471\",\"2024-07-10\",\"u\",\"b\",\"126\"],[\"472\",\"2024-07-11\",\"u\",\"b\",\"126\"],[\"474\",\"2024-07-30\",\"u\",\"b\",\"127\"],[\"475\",\"2024-08-01\",\"u\",\"b\",\"127\"],[\"476\",\"2024-08-09\",\"u\",\"b\",\"127\"],[\"477\",\"2024-08-16\",\"u\",\"b\",\"127\"],[\"478\",\"2024-08-21\",\"u\",\"b\",\"128\"],[\"479\",\"2024-08-31\",\"u\",\"b\",\"128\"],[\"480\",\"2024-09-07\",\"u\",\"b\",\"128\"],[\"481\",\"2024-09-14\",\"u\",\"b\",\"128\"],[\"482\",\"2024-09-20\",\"u\",\"b\",\"129\"],[\"483\",\"2024-09-27\",\"u\",\"b\",\"129\"],[\"484\",\"2024-10-04\",\"u\",\"b\",\"129\"],[\"485\",\"2024-10-11\",\"u\",\"b\",\"129\"],[\"486\",\"2024-10-18\",\"u\",\"b\",\"130\"],[\"487\",\"2024-10-26\",\"u\",\"b\",\"130\"],[\"488\",\"2024-11-02\",\"u\",\"b\",\"130\"],[\"489\",\"2024-11-09\",\"u\",\"b\",\"130\"],[\"494\",\"2024-12-26\",\"u\",\"b\",\"131\"],[\"497\",\"2025-01-26\",\"u\",\"b\",\"132\"],[\"503\",\"2025-03-12\",\"u\",\"b\",\"134\"],[\"514\",\"2025-05-28\",\"u\",\"b\",\"136\"],[\"515\",\"2025-05-31\",\"u\",\"b\",\"137\"]]},instagram_android:{releases:[[\"23\",\"u\",\"u\",\"b\",\"62\"],[\"24\",\"u\",\"u\",\"b\",\"62\"],[\"25\",\"u\",\"u\",\"b\",\"62\"],[\"26\",\"u\",\"u\",\"b\",\"63\"],[\"27\",\"u\",\"u\",\"b\",\"63\"],[\"28\",\"u\",\"u\",\"b\",\"63\"],[\"29\",\"u\",\"u\",\"b\",\"63\"],[\"30\",\"u\",\"u\",\"b\",\"63\"],[\"31\",\"u\",\"u\",\"b\",\"64\"],[\"32\",\"u\",\"u\",\"b\",\"64\"],[\"33\",\"u\",\"u\",\"b\",\"64\"],[\"34\",\"u\",\"u\",\"b\",\"64\"],[\"35\",\"u\",\"u\",\"b\",\"65\"],[\"36\",\"u\",\"u\",\"b\",\"65\"],[\"37\",\"u\",\"u\",\"b\",\"65\"],[\"38\",\"u\",\"u\",\"b\",\"65\"],[\"39\",\"u\",\"u\",\"b\",\"65\"],[\"40\",\"u\",\"u\",\"b\",\"65\"],[\"41\",\"u\",\"u\",\"b\",\"65\"],[\"42\",\"u\",\"u\",\"b\",\"66\"],[\"43\",\"u\",\"u\",\"b\",\"66\"],[\"44\",\"u\",\"u\",\"b\",\"66\"],[\"45\",\"u\",\"u\",\"b\",\"66\"],[\"46\",\"u\",\"u\",\"b\",\"66\"],[\"47\",\"u\",\"u\",\"b\",\"66\"],[\"48\",\"u\",\"u\",\"b\",\"67\"],[\"49\",\"u\",\"u\",\"b\",\"67\"],[\"50\",\"u\",\"u\",\"b\",\"67\"],[\"51\",\"u\",\"u\",\"b\",\"67\"],[\"52\",\"u\",\"u\",\"b\",\"67\"],[\"53\",\"u\",\"u\",\"b\",\"67\"],[\"54\",\"u\",\"u\",\"b\",\"67\"],[\"55\",\"u\",\"u\",\"b\",\"67\"],[\"56\",\"u\",\"u\",\"b\",\"68\"],[\"57\",\"u\",\"u\",\"b\",\"68\"],[\"58\",\"u\",\"u\",\"b\",\"68\"],[\"59\",\"u\",\"u\",\"b\",\"68\"],[\"60\",\"u\",\"u\",\"b\",\"68\"],[\"61\",\"u\",\"u\",\"b\",\"68\"],[\"65\",\"u\",\"u\",\"b\",\"69\"],[\"66\",\"u\",\"u\",\"b\",\"69\"],[\"68\",\"u\",\"u\",\"b\",\"69\"],[\"72\",\"u\",\"u\",\"b\",\"70\"],[\"74\",\"u\",\"u\",\"b\",\"71\"],[\"75\",\"u\",\"u\",\"b\",\"71\"],[\"79\",\"u\",\"u\",\"b\",\"71\"],[\"81\",\"u\",\"u\",\"b\",\"72\"],[\"82\",\"u\",\"u\",\"b\",\"72\"],[\"83\",\"u\",\"u\",\"b\",\"72\"],[\"84\",\"u\",\"u\",\"b\",\"73\"],[\"86\",\"u\",\"u\",\"b\",\"73\"],[\"95\",\"u\",\"u\",\"b\",\"74\"],[\"96\",\"u\",\"u\",\"b\",\"80\"],[\"97\",\"u\",\"u\",\"b\",\"80\"],[\"98\",\"u\",\"u\",\"b\",\"80\"],[\"103\",\"u\",\"u\",\"b\",\"80\"],[\"104\",\"u\",\"u\",\"b\",\"80\"],[\"117\",\"u\",\"u\",\"b\",\"80\"],[\"118\",\"u\",\"u\",\"b\",\"80\"],[\"119\",\"u\",\"u\",\"b\",\"80\"],[\"120\",\"u\",\"u\",\"b\",\"80\"],[\"121\",\"u\",\"u\",\"b\",\"80\"],[\"127\",\"u\",\"u\",\"b\",\"80\"],[\"128\",\"u\",\"u\",\"b\",\"80\"],[\"129\",\"u\",\"u\",\"b\",\"80\"],[\"130\",\"u\",\"u\",\"b\",\"80\"],[\"131\",\"u\",\"u\",\"b\",\"80\"],[\"132\",\"u\",\"u\",\"b\",\"80\"],[\"133\",\"u\",\"u\",\"b\",\"80\"],[\"134\",\"u\",\"u\",\"b\",\"80\"],[\"135\",\"u\",\"u\",\"b\",\"80\"],[\"136\",\"u\",\"u\",\"b\",\"80\"],[\"137\",\"u\",\"u\",\"b\",\"81\"],[\"138\",\"u\",\"u\",\"b\",\"81\"],[\"139\",\"u\",\"u\",\"b\",\"81\"],[\"140\",\"u\",\"u\",\"b\",\"81\"],[\"141\",\"u\",\"u\",\"b\",\"81\"],[\"142\",\"u\",\"u\",\"b\",\"81\"],[\"143\",\"u\",\"u\",\"b\",\"83\"],[\"144\",\"u\",\"u\",\"b\",\"83\"],[\"145\",\"u\",\"u\",\"b\",\"83\"],[\"146\",\"u\",\"u\",\"b\",\"83\"],[\"153\",\"u\",\"u\",\"b\",\"84\"],[\"163\",\"u\",\"u\",\"b\",\"92\"],[\"164\",\"u\",\"u\",\"b\",\"92\"],[\"230\",\"u\",\"u\",\"b\",\"92\"],[\"258\",\"2022-11-04\",\"u\",\"b\",\"106\"],[\"259\",\"2022-11-04\",\"u\",\"b\",\"106\"],[\"279\",\"2023-12-31\",\"u\",\"b\",\"109\"],[\"281\",\"u\",\"u\",\"b\",\"109\"],[\"288\",\"u\",\"u\",\"b\",\"114\"],[\"289\",\"2023-12-21\",\"u\",\"b\",\"114\"],[\"290\",\"2023-12-30\",\"u\",\"b\",\"114\"],[\"292\",\"u\",\"u\",\"b\",\"115\"],[\"295\",\"u\",\"u\",\"b\",\"115\"],[\"296\",\"u\",\"u\",\"b\",\"115\"],[\"297\",\"u\",\"u\",\"b\",\"115\"],[\"298\",\"2024-01-11\",\"u\",\"b\",\"115\"],[\"299\",\"u\",\"u\",\"b\",\"115\"],[\"300\",\"u\",\"u\",\"b\",\"116\"],[\"301\",\"2024-01-12\",\"u\",\"b\",\"116\"],[\"302\",\"u\",\"u\",\"b\",\"117\"],[\"303\",\"u\",\"u\",\"b\",\"117\"],[\"304\",\"u\",\"u\",\"b\",\"117\"],[\"305\",\"u\",\"u\",\"b\",\"117\"],[\"306\",\"2024-01-17\",\"u\",\"b\",\"118\"],[\"307\",\"u\",\"u\",\"b\",\"118\"],[\"308\",\"2024-01-19\",\"u\",\"b\",\"118\"],[\"309\",\"u\",\"u\",\"b\",\"119\"],[\"310\",\"u\",\"u\",\"b\",\"119\"],[\"311\",\"u\",\"u\",\"b\",\"120\"],[\"312\",\"u\",\"u\",\"b\",\"120\"],[\"313\",\"u\",\"u\",\"b\",\"120\"],[\"314\",\"u\",\"u\",\"b\",\"120\"],[\"315\",\"2024-01-19\",\"u\",\"b\",\"120\"],[\"316\",\"2024-01-25\",\"u\",\"b\",\"120\"],[\"317\",\"2024-02-03\",\"u\",\"b\",\"121\"],[\"318\",\"2024-02-16\",\"u\",\"b\",\"121\"],[\"320\",\"2024-03-04\",\"u\",\"b\",\"121\"],[\"321\",\"2024-03-07\",\"u\",\"b\",\"122\"],[\"338\",\"2024-07-06\",\"u\",\"b\",\"126\"],[\"346\",\"2024-09-01\",\"u\",\"b\",\"127\"],[\"347\",\"2024-09-11\",\"u\",\"b\",\"127\"],[\"349\",\"2024-09-20\",\"u\",\"b\",\"128\"],[\"355\",\"2024-11-06\",\"u\",\"b\",\"130\"],[\"366\",\"u\",\"u\",\"b\",\"132\"],[\"367\",\"2025-02-15\",\"u\",\"b\",\"132\"],[\"378\",\"2025-05-03\",\"u\",\"b\",\"135\"],[\"381\",\"2025-06-19\",\"u\",\"b\",\"137\"],[\"382\",\"2025-06-19\",\"u\",\"b\",\"137\"],[\"383\",\"2025-06-18\",\"u\",\"b\",\"137\"],[\"384\",\"2025-06-16\",\"u\",\"b\",\"137\"],[\"385\",\"2025-06-27\",\"u\",\"b\",\"137\"],[\"387\",\"2025-07-09\",\"u\",\"b\",\"137\"],[\"390\",\"2025-07-26\",\"u\",\"b\",\"138\"],[\"392\",\"2025-08-12\",\"u\",\"b\",\"138\"],[\"394\",\"2025-08-26\",\"u\",\"b\",\"139\"],[\"395\",\"2025-09-13\",\"u\",\"b\",\"139\"],[\"396\",\"2025-09-20\",\"u\",\"b\",\"139\"],[\"397\",\"2025-09-19\",\"u\",\"b\",\"139\"],[\"399\",\"2025-09-28\",\"u\",\"b\",\"140\"]]}},c=[[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-07-29\",{c:\"2\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"4\",si:\"3.2\"}],[\"2019-03-25\",{c:\"66\",ca:\"66\",e:\"16\",f:\"57\",fa:\"57\",s:\"12.1\",si:\"12.2\"}],[\"2019-03-25\",{c:\"66\",ca:\"66\",e:\"16\",f:\"57\",fa:\"57\",s:\"12.1\",si:\"12.2\"}],[\"2024-03-19\",{c:\"116\",ca:\"116\",e:\"116\",f:\"124\",fa:\"124\",s:\"17.4\",si:\"17.4\"}],[\"2025-06-26\",{c:\"138\",ca:\"138\",e:\"138\",f:\"118\",fa:\"118\",s:\"15.4\",si:\"15.4\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-07-29\",{c:\"17\",ca:\"18\",e:\"12\",f:\"5\",fa:\"5\",s:\"6\",si:\"6\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2024-04-16\",{c:\"123\",ca:\"123\",e:\"123\",f:\"125\",fa:\"125\",s:\"17.4\",si:\"17.4\"}],[\"2020-01-15\",{c:\"37\",ca:\"37\",e:\"79\",f:\"27\",fa:\"27\",s:\"9.1\",si:\"9.3\"}],[\"2024-07-09\",{c:\"77\",ca:\"77\",e:\"79\",f:\"128\",fa:\"128\",s:\"17.4\",si:\"17.4\"}],[\"2016-06-07\",{c:\"32\",ca:\"30\",e:\"12\",f:\"47\",fa:\"47\",s:\"8\",si:\"8\"}],[\"2023-07-04\",{c:\"112\",ca:\"112\",e:\"112\",f:\"115\",fa:\"115\",s:\"16\",si:\"16\"}],[\"2015-09-30\",{c:\"43\",ca:\"43\",e:\"12\",f:\"16\",fa:\"16\",s:\"9\",si:\"9\"}],[\"2022-03-14\",{c:\"84\",ca:\"84\",e:\"84\",f:\"80\",fa:\"80\",s:\"15.4\",si:\"15.4\"}],[\"2023-10-24\",{c:\"103\",ca:\"103\",e:\"103\",f:\"119\",fa:\"119\",s:\"16.4\",si:\"16.4\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2022-03-14\",{c:\"92\",ca:\"92\",e:\"92\",f:\"90\",fa:\"90\",s:\"15.4\",si:\"15.4\"}],[\"2023-07-04\",{c:\"110\",ca:\"110\",e:\"110\",f:\"115\",fa:\"115\",s:\"16\",si:\"16\"}],[\"2016-09-20\",{c:\"45\",ca:\"45\",e:\"12\",f:\"34\",fa:\"34\",s:\"10\",si:\"10\"}],[\"2016-09-20\",{c:\"45\",ca:\"45\",e:\"12\",f:\"37\",fa:\"37\",s:\"10\",si:\"10\"}],[\"2016-09-20\",{c:\"45\",ca:\"45\",e:\"12\",f:\"37\",fa:\"37\",s:\"10\",si:\"10\"}],[\"2022-08-23\",{c:\"97\",ca:\"97\",e:\"97\",f:\"104\",fa:\"104\",s:\"15.4\",si:\"15.4\"}],[\"2020-01-15\",{c:\"69\",ca:\"69\",e:\"79\",f:\"62\",fa:\"62\",s:\"12\",si:\"12\"}],[\"2016-09-20\",{c:\"45\",ca:\"45\",e:\"12\",f:\"38\",fa:\"38\",s:\"10\",si:\"10\"}],[\"2024-01-25\",{c:\"121\",ca:\"121\",e:\"121\",f:\"115\",fa:\"115\",s:\"16.4\",si:\"16.4\"}],[\"2024-03-05\",{c:\"117\",ca:\"117\",e:\"117\",f:\"119\",fa:\"119\",s:\"17.4\",si:\"17.4\"}],[\"2016-09-20\",{c:\"47\",ca:\"47\",e:\"14\",f:\"43\",fa:\"43\",s:\"10\",si:\"10\"}],[\"2015-07-29\",{c:\"4\",ca:\"18\",e:\"12\",f:\"4\",fa:\"4\",s:\"5\",si:\"5\"}],[\"2015-07-29\",{c:\"3\",ca:\"18\",e:\"12\",f:\"3\",fa:\"4\",s:\"4\",si:\"3.2\"}],[\"2018-05-09\",{c:\"66\",ca:\"66\",e:\"14\",f:\"60\",fa:\"60\",s:\"10\",si:\"10\"}],[\"2016-09-20\",{c:\"45\",ca:\"45\",e:\"12\",f:\"38\",fa:\"38\",s:\"10\",si:\"10\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-07-29\",{c:\"5\",ca:\"18\",e:\"12\",f:\"4\",fa:\"4\",s:\"5\",si:\"4.2\"}],[\"2015-07-29\",{c:\"5\",ca:\"18\",e:\"12\",f:\"4\",fa:\"4\",s:\"5\",si:\"4.2\"}],[\"2021-09-20\",{c:\"88\",ca:\"88\",e:\"88\",f:\"89\",fa:\"89\",s:\"15\",si:\"15\"}],[\"2017-04-05\",{c:\"55\",ca:\"55\",e:\"15\",f:\"52\",fa:\"52\",s:\"10.1\",si:\"10.3\"}],[\"2024-06-11\",{c:\"76\",ca:\"76\",e:\"79\",f:\"127\",fa:\"127\",s:\"13.1\",si:\"13.4\"}],[\"2020-01-15\",{c:\"63\",ca:\"63\",e:\"79\",f:\"55\",fa:\"55\",s:\"12\",si:\"12\"}],[\"2020-01-15\",{c:\"63\",ca:\"63\",e:\"79\",f:\"57\",fa:\"57\",s:\"12\",si:\"12\"}],[\"2025-04-01\",{c:\"133\",ca:\"133\",e:\"133\",f:\"137\",fa:\"137\",s:\"18.4\",si:\"18.4\"}],[\"2015-07-29\",{c:\"2\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"3.1\",si:\"2\"}],[\"2015-07-29\",{c:\"3\",ca:\"18\",e:\"12\",f:\"3.5\",fa:\"4\",s:\"3.1\",si:\"3\"}],[\"2021-04-26\",{c:\"66\",ca:\"66\",e:\"79\",f:\"76\",fa:\"79\",s:\"14.1\",si:\"14.5\"}],[\"2023-02-09\",{c:\"110\",ca:\"110\",e:\"110\",f:\"86\",fa:\"86\",s:\"15\",si:\"15\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"4\",si:\"3.2\"}],[\"2020-01-15\",{c:\"54\",ca:\"54\",e:\"79\",f:\"63\",fa:\"63\",s:\"10.1\",si:\"10.3\"}],[\"2024-01-26\",{c:\"85\",ca:\"85\",e:\"121\",f:\"93\",fa:\"93\",s:\"16\",si:\"16\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2022-03-14\",{c:\"37\",ca:\"37\",e:\"79\",f:\"47\",fa:\"47\",s:\"15.4\",si:\"15.4\"}],[\"2024-09-16\",{c:\"76\",ca:\"76\",e:\"79\",f:\"103\",fa:\"103\",s:\"18\",si:\"18\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"3.6\",fa:\"4\",s:\"1.3\",si:\"1\"}],[\"2022-03-14\",{c:\"1\",ca:\"18\",e:\"12\",f:\"25\",fa:\"25\",s:\"15.4\",si:\"15.4\"}],[\"2020-01-15\",{c:\"35\",ca:\"59\",e:\"79\",f:\"30\",fa:\"54\",s:\"8\",si:\"8\"}],[\"2015-07-29\",{c:\"21\",ca:\"25\",e:\"12\",f:\"22\",fa:\"22\",s:\"5.1\",si:\"5\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"3.6\",fa:\"4\",s:\"1.3\",si:\"1\"}],[\"2015-07-29\",{c:\"21\",ca:\"25\",e:\"12\",f:\"22\",fa:\"22\",s:\"5.1\",si:\"4\"}],[\"2015-07-29\",{c:\"25\",ca:\"25\",e:\"12\",f:\"13\",fa:\"14\",s:\"7\",si:\"7\"}],[\"2016-09-20\",{c:\"30\",ca:\"30\",e:\"12\",f:\"49\",fa:\"49\",s:\"8\",si:\"8\"}],[\"2015-07-29\",{c:\"21\",ca:\"25\",e:\"12\",f:\"9\",fa:\"18\",s:\"5.1\",si:\"4.2\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"3\",si:\"1\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"3\",si:\"2\"}],[\"2016-09-20\",{c:\"30\",ca:\"30\",e:\"12\",f:\"4\",fa:\"4\",s:\"10\",si:\"10\"}],[\"2020-01-15\",{c:\"16\",ca:\"18\",e:\"79\",f:\"10\",fa:\"10\",s:\"6\",si:\"6\"}],[\"2015-07-29\",{c:\"≤15\",ca:\"18\",e:\"12\",f:\"10\",fa:\"10\",s:\"≤4\",si:\"≤3.2\"}],[\"2018-04-12\",{c:\"39\",ca:\"42\",e:\"14\",f:\"31\",fa:\"31\",s:\"11.1\",si:\"11.3\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1.5\",fa:\"4\",s:\"4\",si:\"3.2\"}],[\"2020-09-16\",{c:\"67\",ca:\"67\",e:\"79\",f:\"68\",fa:\"68\",s:\"14\",si:\"14\"}],[\"2021-09-20\",{c:\"67\",ca:\"67\",e:\"79\",f:\"68\",fa:\"68\",s:\"15\",si:\"15\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"≤4\",si:\"≤3.2\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"3\",si:\"1\"}],[\"2017-02-01\",{c:\"56\",ca:\"56\",e:\"12\",f:\"50\",fa:\"50\",s:\"9.1\",si:\"9.3\"}],[\"2015-07-29\",{c:\"4\",ca:\"18\",e:\"12\",f:\"4\",fa:\"4\",s:\"5\",si:\"4.2\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"14\",s:\"1\",si:\"3\"}],[\"2015-07-29\",{c:\"10\",ca:\"18\",e:\"12\",f:\"4\",fa:\"4\",s:\"5.1\",si:\"5\"}],[\"2015-07-29\",{c:\"10\",ca:\"18\",e:\"12\",f:\"29\",fa:\"29\",s:\"5.1\",si:\"6\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"3\",si:\"1\"}],[\"2022-03-14\",{c:\"54\",ca:\"54\",e:\"79\",f:\"38\",fa:\"38\",s:\"15.4\",si:\"15.4\"}],[\"2017-09-19\",{c:\"50\",ca:\"51\",e:\"15\",f:\"44\",fa:\"44\",s:\"11\",si:\"11\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-07-29\",{c:\"26\",ca:\"28\",e:\"12\",f:\"16\",fa:\"16\",s:\"7\",si:\"7\"}],[\"2023-06-06\",{c:\"110\",ca:\"110\",e:\"110\",f:\"114\",fa:\"114\",s:\"16\",si:\"16\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1.5\",fa:\"4\",s:\"2\",si:\"1\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1.5\",fa:\"4\",s:\"2\",si:\"1\"}],[\"2024-09-16\",{c:\"99\",ca:\"99\",e:\"99\",f:\"28\",fa:\"28\",s:\"18\",si:\"18\"}],[\"2023-04-11\",{c:\"99\",ca:\"99\",e:\"99\",f:\"112\",fa:\"112\",s:\"16.4\",si:\"16.4\"}],[\"2023-12-11\",{c:\"99\",ca:\"99\",e:\"99\",f:\"113\",fa:\"113\",s:\"17.2\",si:\"17.2\"}],[\"2023-04-11\",{c:\"99\",ca:\"99\",e:\"99\",f:\"112\",fa:\"112\",s:\"16.4\",si:\"16.4\"}],[\"2023-12-11\",{c:\"118\",ca:\"118\",e:\"118\",f:\"97\",fa:\"97\",s:\"17.2\",si:\"17.2\"}],[\"2020-01-15\",{c:\"51\",ca:\"51\",e:\"79\",f:\"43\",fa:\"43\",s:\"11\",si:\"11\"}],[\"2020-01-15\",{c:\"57\",ca:\"57\",e:\"79\",f:\"53\",fa:\"53\",s:\"11.1\",si:\"11.3\"}],[\"2022-03-14\",{c:\"99\",ca:\"99\",e:\"99\",f:\"97\",fa:\"97\",s:\"15.4\",si:\"15.4\"}],[\"2020-01-15\",{c:\"49\",ca:\"49\",e:\"79\",f:\"47\",fa:\"47\",s:\"9\",si:\"9\"}],[\"2015-07-29\",{c:\"27\",ca:\"27\",e:\"12\",f:\"1\",fa:\"4\",s:\"7\",si:\"7\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"3\",si:\"2\"}],[\"2015-09-22\",{c:\"4\",ca:\"18\",e:\"12\",f:\"41\",fa:\"41\",s:\"5\",si:\"4.2\"}],[\"2015-07-29\",{c:\"2\",ca:\"18\",e:\"12\",f:\"1.5\",fa:\"4\",s:\"4\",si:\"4\"}],[\"2024-03-05\",{c:\"105\",ca:\"105\",e:\"105\",f:\"106\",fa:\"106\",s:\"17.4\",si:\"17.4\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"≤4\",si:\"≤3.2\"}],[\"2016-03-08\",{c:\"42\",ca:\"42\",e:\"13\",f:\"45\",fa:\"45\",s:\"9\",si:\"9\"}],[\"2023-09-18\",{c:\"117\",ca:\"117\",e:\"117\",f:\"63\",fa:\"63\",s:\"17\",si:\"17\"}],[\"2021-01-21\",{c:\"88\",ca:\"88\",e:\"88\",f:\"71\",fa:\"79\",s:\"13.1\",si:\"13\"}],[\"2020-01-15\",{c:\"55\",ca:\"55\",e:\"79\",f:\"49\",fa:\"49\",s:\"12.1\",si:\"12.2\"}],[\"2023-11-02\",{c:\"119\",ca:\"119\",e:\"119\",f:\"54\",fa:\"54\",s:\"13.1\",si:\"13.4\"}],[\"2017-03-27\",{c:\"41\",ca:\"41\",e:\"12\",f:\"22\",fa:\"22\",s:\"10.1\",si:\"10.3\"}],[\"2025-03-31\",{c:\"121\",ca:\"121\",e:\"121\",f:\"127\",fa:\"127\",s:\"18.4\",si:\"18.4\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"≤4\",si:\"≤3.2\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2023-05-09\",{c:\"111\",ca:\"111\",e:\"111\",f:\"113\",fa:\"113\",s:\"15\",si:\"15\"}],[\"2023-02-14\",{c:\"58\",ca:\"58\",e:\"79\",f:\"110\",fa:\"110\",s:\"10\",si:\"10\"}],[\"2023-05-09\",{c:\"111\",ca:\"111\",e:\"111\",f:\"113\",fa:\"113\",s:\"16.2\",si:\"16.2\"}],[\"2022-02-03\",{c:\"98\",ca:\"98\",e:\"98\",f:\"96\",fa:\"96\",s:\"13\",si:\"13\"}],[\"2020-01-15\",{c:\"53\",ca:\"53\",e:\"79\",f:\"31\",fa:\"31\",s:\"11.1\",si:\"11.3\"}],[\"2017-03-07\",{c:\"50\",ca:\"50\",e:\"12\",f:\"52\",fa:\"52\",s:\"9\",si:\"9\"}],[\"2020-07-28\",{c:\"50\",ca:\"50\",e:\"12\",f:\"71\",fa:\"79\",s:\"9\",si:\"9\"}],[\"2025-08-19\",{c:\"137\",ca:\"137\",e:\"137\",f:\"142\",fa:\"142\",s:\"17\",si:\"17\"}],[\"2017-04-19\",{c:\"26\",ca:\"26\",e:\"12\",f:\"53\",fa:\"53\",s:\"7\",si:\"7\"}],[\"2023-05-09\",{c:\"80\",ca:\"80\",e:\"80\",f:\"113\",fa:\"113\",s:\"16.4\",si:\"16.4\"}],[\"2020-11-17\",{c:\"69\",ca:\"69\",e:\"79\",f:\"83\",fa:\"83\",s:\"12.1\",si:\"12.2\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"4\",fa:\"4\",s:\"3\",si:\"1\"}],[\"2018-12-11\",{c:\"40\",ca:\"40\",e:\"18\",f:\"51\",fa:\"64\",s:\"10.1\",si:\"10.3\"}],[\"2023-03-27\",{c:\"73\",ca:\"73\",e:\"79\",f:\"101\",fa:\"101\",s:\"16.4\",si:\"16.4\"}],[\"2022-03-14\",{c:\"52\",ca:\"52\",e:\"79\",f:\"69\",fa:\"79\",s:\"15.4\",si:\"15.4\"}],[\"2022-09-12\",{c:\"105\",ca:\"105\",e:\"105\",f:\"101\",fa:\"101\",s:\"16\",si:\"16\"}],[\"2023-09-18\",{c:\"83\",ca:\"83\",e:\"83\",f:\"107\",fa:\"107\",s:\"17\",si:\"17\"}],[\"2022-03-14\",{c:\"52\",ca:\"52\",e:\"79\",f:\"69\",fa:\"79\",s:\"15.4\",si:\"15.4\"}],[\"2022-03-14\",{c:\"52\",ca:\"52\",e:\"79\",f:\"69\",fa:\"79\",s:\"15.4\",si:\"15.4\"}],[\"2022-03-14\",{c:\"52\",ca:\"52\",e:\"79\",f:\"69\",fa:\"79\",s:\"15.4\",si:\"15.4\"}],[\"2022-07-26\",{c:\"52\",ca:\"52\",e:\"79\",f:\"103\",fa:\"103\",s:\"15.4\",si:\"15.4\"}],[\"2023-02-14\",{c:\"105\",ca:\"105\",e:\"105\",f:\"110\",fa:\"110\",s:\"16\",si:\"16\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2025-09-15\",{c:\"108\",ca:\"108\",e:\"108\",f:\"130\",fa:\"130\",s:\"26\",si:\"26\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"4\",fa:\"4\",s:\"≤4\",si:\"≤3.2\"}],[\"2025-03-04\",{c:\"51\",ca:\"51\",e:\"12\",f:\"136\",fa:\"136\",s:\"5.1\",si:\"5\"}],[\"2024-09-16\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"18\",si:\"18\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-07-29\",{c:\"4\",ca:\"18\",e:\"12\",f:\"3.5\",fa:\"4\",s:\"4\",si:\"3.2\"}],[\"2023-12-11\",{c:\"85\",ca:\"85\",e:\"85\",f:\"68\",fa:\"68\",s:\"17.2\",si:\"17.2\"}],[\"2023-09-18\",{c:\"91\",ca:\"91\",e:\"91\",f:\"33\",fa:\"33\",s:\"17\",si:\"17\"}],[\"2015-07-29\",{c:\"2\",ca:\"18\",e:\"12\",f:\"1\",fa:\"25\",s:\"3\",si:\"1\"}],[\"2023-12-11\",{c:\"59\",ca:\"59\",e:\"79\",f:\"98\",fa:\"98\",s:\"17.2\",si:\"17.2\"}],[\"2020-01-15\",{c:\"60\",ca:\"60\",e:\"79\",f:\"60\",fa:\"60\",s:\"13\",si:\"13\"}],[\"2016-08-02\",{c:\"25\",ca:\"25\",e:\"14\",f:\"23\",fa:\"23\",s:\"7\",si:\"7\"}],[\"2020-01-15\",{c:\"46\",ca:\"46\",e:\"79\",f:\"31\",fa:\"31\",s:\"10.1\",si:\"10.3\"}],[\"2015-09-30\",{c:\"28\",ca:\"28\",e:\"12\",f:\"22\",fa:\"22\",s:\"9\",si:\"9\"}],[\"2020-01-15\",{c:\"61\",ca:\"61\",e:\"79\",f:\"55\",fa:\"55\",s:\"11\",si:\"11\"}],[\"2015-07-29\",{c:\"16\",ca:\"18\",e:\"12\",f:\"4\",fa:\"4\",s:\"6\",si:\"6\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1.5\",fa:\"4\",s:\"4\",si:\"3.2\"}],[\"2017-04-05\",{c:\"49\",ca:\"49\",e:\"15\",f:\"31\",fa:\"31\",s:\"9.1\",si:\"9.3\"}],[\"2017-10-24\",{c:\"62\",ca:\"62\",e:\"14\",f:\"22\",fa:\"22\",s:\"10\",si:\"10\"}],[\"2015-07-29\",{c:\"≤4\",ca:\"18\",e:\"12\",f:\"≤2\",fa:\"4\",s:\"≤3.1\",si:\"≤2\"}],[\"2015-07-29\",{c:\"7\",ca:\"18\",e:\"12\",f:\"6\",fa:\"6\",s:\"5.1\",si:\"5\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2024-02-20\",{c:\"111\",ca:\"111\",e:\"111\",f:\"123\",fa:\"123\",s:\"16.4\",si:\"16.4\"}],[\"2015-07-29\",{c:\"4\",ca:\"18\",e:\"12\",f:\"4\",fa:\"4\",s:\"4\",si:\"5\"}],[\"2020-01-15\",{c:\"10\",ca:\"18\",e:\"79\",f:\"4\",fa:\"4\",s:\"5\",si:\"5\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"≤4\",si:\"≤3.2\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"≤4\",si:\"≤3.2\"}],[\"2020-01-15\",{c:\"60\",ca:\"60\",e:\"79\",f:\"55\",fa:\"55\",s:\"11.1\",si:\"11.3\"}],[\"2020-01-15\",{c:\"12\",ca:\"18\",e:\"79\",f:\"49\",fa:\"49\",s:\"6\",si:\"6\"}],[\"2024-09-03\",{c:\"120\",ca:\"120\",e:\"120\",f:\"130\",fa:\"130\",s:\"17.2\",si:\"17.2\"}],[\"2023-09-18\",{c:\"31\",ca:\"31\",e:\"12\",f:\"6\",fa:\"6\",s:\"17\",si:\"4.2\"}],[\"2015-07-29\",{c:\"15\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"6\",si:\"6\"}],[\"2022-03-14\",{c:\"37\",ca:\"37\",e:\"79\",f:\"98\",fa:\"98\",s:\"15.4\",si:\"15.4\"}],[\"2023-12-07\",{c:\"120\",ca:\"120\",e:\"120\",f:\"49\",fa:\"49\",s:\"16.4\",si:\"16.4\"}],[\"2023-08-01\",{c:\"17\",ca:\"18\",e:\"79\",f:\"116\",fa:\"116\",s:\"6\",si:\"6\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2020-01-15\",{c:\"58\",ca:\"58\",e:\"79\",f:\"53\",fa:\"53\",s:\"13\",si:\"13\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"≤2017-04-05\",{c:\"1\",ca:\"18\",e:\"≤15\",f:\"3\",fa:\"4\",s:\"≤4\",si:\"≤3.2\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2020-01-15\",{c:\"61\",ca:\"61\",e:\"79\",f:\"33\",fa:\"33\",s:\"11\",si:\"11\"}],[\"2020-01-15\",{c:\"1\",ca:\"18\",e:\"79\",f:\"1\",fa:\"4\",s:\"4\",si:\"3.2\"}],[\"2016-03-21\",{c:\"31\",ca:\"31\",e:\"12\",f:\"12\",fa:\"14\",s:\"9.1\",si:\"9.3\"}],[\"2019-09-19\",{c:\"14\",ca:\"18\",e:\"18\",f:\"20\",fa:\"20\",s:\"10.1\",si:\"13\"}],[\"2015-07-29\",{c:\"3\",ca:\"18\",e:\"12\",f:\"3.5\",fa:\"4\",s:\"4\",si:\"3.2\"}],[\"2022-05-03\",{c:\"98\",ca:\"98\",e:\"98\",f:\"100\",fa:\"100\",s:\"13.1\",si:\"13.4\"}],[\"2020-01-15\",{c:\"43\",ca:\"43\",e:\"79\",f:\"46\",fa:\"46\",s:\"11.1\",si:\"11.3\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"≤4\",si:\"≤3.2\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2020-01-15\",{c:\"1\",ca:\"18\",e:\"79\",f:\"1.5\",fa:\"4\",s:\"≤4\",si:\"≤3.2\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"3.1\",si:\"2\"}],[\"2019-03-25\",{c:\"42\",ca:\"42\",e:\"13\",f:\"38\",fa:\"38\",s:\"12.1\",si:\"12.2\"}],[\"2021-11-02\",{c:\"77\",ca:\"77\",e:\"79\",f:\"94\",fa:\"94\",s:\"13.1\",si:\"13.4\"}],[\"2021-09-20\",{c:\"93\",ca:\"93\",e:\"93\",f:\"91\",fa:\"91\",s:\"15\",si:\"15\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2023-12-07\",{c:\"120\",ca:\"120\",e:\"120\",f:\"118\",fa:\"118\",s:\"15.4\",si:\"15.4\"}],[\"2017-03-27\",{c:\"52\",ca:\"52\",e:\"14\",f:\"52\",fa:\"52\",s:\"10.1\",si:\"10.3\"}],[\"2018-04-30\",{c:\"38\",ca:\"38\",e:\"17\",f:\"47\",fa:\"35\",s:\"9\",si:\"9\"}],[\"2021-09-20\",{c:\"56\",ca:\"56\",e:\"79\",f:\"51\",fa:\"51\",s:\"15\",si:\"15\"}],[\"2020-09-16\",{c:\"63\",ca:\"63\",e:\"17\",f:\"47\",fa:\"36\",s:\"14\",si:\"14\"}],[\"2020-02-07\",{c:\"40\",ca:\"40\",e:\"80\",f:\"58\",fa:\"28\",s:\"9\",si:\"9\"}],[\"2016-06-07\",{c:\"34\",ca:\"34\",e:\"12\",f:\"47\",fa:\"47\",s:\"9.1\",si:\"9.3\"}],[\"2017-03-27\",{c:\"42\",ca:\"42\",e:\"14\",f:\"39\",fa:\"39\",s:\"10.1\",si:\"10.3\"}],[\"2023-03-27\",{c:\"80\",ca:\"80\",e:\"80\",f:\"90\",fa:\"90\",s:\"16.4\",si:\"16.4\"}],[\"2024-10-29\",{c:\"103\",ca:\"103\",e:\"103\",f:\"132\",fa:\"132\",s:\"17.2\",si:\"17.2\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"≤4\",si:\"≤3.2\"}],[\"2015-07-29\",{c:\"8\",ca:\"18\",e:\"12\",f:\"4\",fa:\"4\",s:\"5.1\",si:\"5\"}],[\"2020-01-15\",{c:\"38\",ca:\"38\",e:\"79\",f:\"28\",fa:\"28\",s:\"10.1\",si:\"10.3\"}],[\"2021-04-26\",{c:\"89\",ca:\"89\",e:\"89\",f:\"82\",fa:\"82\",s:\"14.1\",si:\"14.5\"}],[\"2016-09-07\",{c:\"53\",ca:\"53\",e:\"12\",f:\"35\",fa:\"35\",s:\"9.1\",si:\"9.3\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2021-11-02\",{c:\"46\",ca:\"46\",e:\"79\",f:\"94\",fa:\"94\",s:\"11\",si:\"11\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-09-30\",{c:\"29\",ca:\"29\",e:\"12\",f:\"20\",fa:\"20\",s:\"9\",si:\"9\"}],[\"2021-04-26\",{c:\"84\",ca:\"84\",e:\"84\",f:\"63\",fa:\"63\",s:\"14.1\",si:\"14.5\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2025-04-04\",{c:\"135\",ca:\"135\",e:\"135\",f:\"129\",fa:\"129\",s:\"18.2\",si:\"18.2\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"24\",fa:\"24\",s:\"3.1\",si:\"2\"}],[\"2022-03-14\",{c:\"86\",ca:\"86\",e:\"86\",f:\"85\",fa:\"85\",s:\"15.4\",si:\"15.4\"}],[\"2020-01-15\",{c:\"60\",ca:\"60\",e:\"79\",f:\"52\",fa:\"52\",s:\"10.1\",si:\"10.3\"}],[\"2020-01-15\",{c:\"60\",ca:\"60\",e:\"79\",f:\"58\",fa:\"58\",s:\"11.1\",si:\"11.3\"}],[\"2016-09-20\",{c:\"36\",ca:\"36\",e:\"14\",f:\"39\",fa:\"39\",s:\"10\",si:\"10\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2021-09-07\",{c:\"56\",ca:\"56\",e:\"79\",f:\"92\",fa:\"92\",s:\"11\",si:\"11\"}],[\"2017-04-05\",{c:\"48\",ca:\"48\",e:\"15\",f:\"34\",fa:\"34\",s:\"9.1\",si:\"9.3\"}],[\"2020-01-15\",{c:\"33\",ca:\"33\",e:\"79\",f:\"32\",fa:\"32\",s:\"9\",si:\"9\"}],[\"2020-01-15\",{c:\"35\",ca:\"35\",e:\"79\",f:\"41\",fa:\"41\",s:\"10\",si:\"10\"}],[\"2020-03-24\",{c:\"79\",ca:\"79\",e:\"17\",f:\"62\",fa:\"62\",s:\"13.1\",si:\"13.4\"}],[\"2022-11-15\",{c:\"101\",ca:\"101\",e:\"101\",f:\"107\",fa:\"107\",s:\"15.4\",si:\"15.4\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2024-07-25\",{c:\"127\",ca:\"127\",e:\"127\",f:\"118\",fa:\"118\",s:\"17\",si:\"17\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2022-01-06\",{c:\"97\",ca:\"97\",e:\"97\",f:\"34\",fa:\"34\",s:\"9\",si:\"9\"}],[\"2023-03-27\",{c:\"97\",ca:\"97\",e:\"97\",f:\"111\",fa:\"111\",s:\"16.4\",si:\"16.4\"}],[\"2023-03-27\",{c:\"97\",ca:\"97\",e:\"97\",f:\"111\",fa:\"111\",s:\"16.4\",si:\"16.4\"}],[\"2023-03-27\",{c:\"97\",ca:\"97\",e:\"97\",f:\"111\",fa:\"111\",s:\"16.4\",si:\"16.4\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2023-03-13\",{c:\"111\",ca:\"111\",e:\"111\",f:\"34\",fa:\"34\",s:\"9.1\",si:\"9.3\"}],[\"2020-01-15\",{c:\"52\",ca:\"52\",e:\"79\",f:\"34\",fa:\"34\",s:\"9.1\",si:\"9.3\"}],[\"2020-01-15\",{c:\"63\",ca:\"63\",e:\"79\",f:\"34\",fa:\"34\",s:\"9.1\",si:\"9.3\"}],[\"2020-01-15\",{c:\"34\",ca:\"34\",e:\"79\",f:\"34\",fa:\"34\",s:\"9.1\",si:\"9.3\"}],[\"2020-01-15\",{c:\"52\",ca:\"52\",e:\"79\",f:\"34\",fa:\"34\",s:\"9.1\",si:\"9.3\"}],[\"2018-09-05\",{c:\"62\",ca:\"62\",e:\"17\",f:\"62\",fa:\"62\",s:\"11\",si:\"11\"}],[\"2015-07-29\",{c:\"2\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2022-09-12\",{c:\"89\",ca:\"89\",e:\"79\",f:\"89\",fa:\"89\",s:\"16\",si:\"16\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"3\",si:\"2\"}],[\"2023-03-27\",{c:\"77\",ca:\"77\",e:\"79\",f:\"98\",fa:\"98\",s:\"16.4\",si:\"16.4\"}],[\"2015-07-29\",{c:\"10\",ca:\"18\",e:\"12\",f:\"4\",fa:\"4\",s:\"5\",si:\"5\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2017-03-27\",{c:\"35\",ca:\"35\",e:\"12\",f:\"29\",fa:\"32\",s:\"10.1\",si:\"10.3\"}],[\"2016-09-20\",{c:\"39\",ca:\"39\",e:\"13\",f:\"26\",fa:\"26\",s:\"10\",si:\"10\"}],[\"2015-07-29\",{c:\"5\",ca:\"18\",e:\"12\",f:\"3.5\",fa:\"4\",s:\"5\",si:\"≤3\"}],[\"2015-07-29\",{c:\"11\",ca:\"18\",e:\"12\",f:\"3.5\",fa:\"4\",s:\"5.1\",si:\"5\"}],[\"2024-09-16\",{c:\"125\",ca:\"125\",e:\"125\",f:\"128\",fa:\"128\",s:\"18\",si:\"18\"}],[\"2020-01-15\",{c:\"71\",ca:\"71\",e:\"79\",f:\"65\",fa:\"65\",s:\"12.1\",si:\"12.2\"}],[\"2024-06-11\",{c:\"111\",ca:\"111\",e:\"111\",f:\"127\",fa:\"127\",s:\"16.2\",si:\"16.2\"}],[\"2015-07-29\",{c:\"26\",ca:\"26\",e:\"12\",f:\"3.6\",fa:\"4\",s:\"7\",si:\"7\"}],[\"2017-10-17\",{c:\"57\",ca:\"57\",e:\"16\",f:\"52\",fa:\"52\",s:\"10.1\",si:\"10.3\"}],[\"2022-10-27\",{c:\"107\",ca:\"107\",e:\"107\",f:\"66\",fa:\"66\",s:\"16\",si:\"16\"}],[\"2022-03-14\",{c:\"37\",ca:\"37\",e:\"15\",f:\"48\",fa:\"48\",s:\"15.4\",si:\"15.4\"}],[\"2023-12-19\",{c:\"105\",ca:\"105\",e:\"105\",f:\"121\",fa:\"121\",s:\"15.4\",si:\"15.4\"}],[\"2020-03-24\",{c:\"74\",ca:\"74\",e:\"79\",f:\"67\",fa:\"67\",s:\"13.1\",si:\"13.4\"}],[\"2015-07-29\",{c:\"16\",ca:\"18\",e:\"12\",f:\"11\",fa:\"14\",s:\"6\",si:\"6\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-07-29\",{c:\"5\",ca:\"18\",e:\"12\",f:\"4\",fa:\"4\",s:\"5\",si:\"4.2\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"3\",si:\"1\"}],[\"2015-07-29\",{c:\"5\",ca:\"18\",e:\"12\",f:\"4\",fa:\"4\",s:\"5\",si:\"4.2\"}],[\"2015-07-29\",{c:\"5\",ca:\"18\",e:\"12\",f:\"4\",fa:\"4\",s:\"5\",si:\"4\"}],[\"2020-01-15\",{c:\"54\",ca:\"54\",e:\"79\",f:\"63\",fa:\"63\",s:\"10\",si:\"10\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"3\",si:\"1\"}],[\"2020-01-15\",{c:\"65\",ca:\"65\",e:\"79\",f:\"52\",fa:\"52\",s:\"12.1\",si:\"12.2\"}],[\"2015-07-29\",{c:\"4\",ca:\"18\",e:\"12\",f:\"4\",fa:\"4\",s:\"7\",si:\"7\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-09-30\",{c:\"41\",ca:\"41\",e:\"12\",f:\"36\",fa:\"36\",s:\"9\",si:\"9\"}],[\"2024-09-16\",{c:\"87\",ca:\"87\",e:\"87\",f:\"88\",fa:\"88\",s:\"18\",si:\"18\"}],[\"2022-04-28\",{c:\"101\",ca:\"101\",e:\"101\",f:\"96\",fa:\"96\",s:\"15\",si:\"15\"}],[\"2023-09-18\",{c:\"106\",ca:\"106\",e:\"106\",f:\"98\",fa:\"98\",s:\"17\",si:\"17\"}],[\"2023-09-18\",{c:\"88\",ca:\"55\",e:\"88\",f:\"43\",fa:\"43\",s:\"17\",si:\"17\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2022-10-03\",{c:\"106\",ca:\"106\",e:\"106\",f:\"97\",fa:\"97\",s:\"15.4\",si:\"15.4\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"≤4\",si:\"≤3.2\"}],[\"2015-07-29\",{c:\"5\",ca:\"18\",e:\"12\",f:\"17\",fa:\"17\",s:\"5\",si:\"4\"}],[\"2020-01-15\",{c:\"20\",ca:\"25\",e:\"79\",f:\"25\",fa:\"25\",s:\"6\",si:\"6\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2020-04-13\",{c:\"81\",ca:\"81\",e:\"81\",f:\"26\",fa:\"26\",s:\"13.1\",si:\"13.4\"}],[\"2021-10-05\",{c:\"41\",ca:\"41\",e:\"79\",f:\"93\",fa:\"93\",s:\"10\",si:\"10\"}],[\"2023-09-18\",{c:\"113\",ca:\"113\",e:\"113\",f:\"89\",fa:\"89\",s:\"17\",si:\"17\"}],[\"2020-01-15\",{c:\"66\",ca:\"66\",e:\"79\",f:\"50\",fa:\"50\",s:\"11.1\",si:\"11.3\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2023-03-27\",{c:\"89\",ca:\"89\",e:\"89\",f:\"108\",fa:\"108\",s:\"16.4\",si:\"16.4\"}],[\"2020-01-15\",{c:\"39\",ca:\"39\",e:\"79\",f:\"51\",fa:\"51\",s:\"10\",si:\"10\"}],[\"2021-09-20\",{c:\"58\",ca:\"58\",e:\"79\",f:\"51\",fa:\"51\",s:\"15\",si:\"15\"}],[\"2022-08-05\",{c:\"104\",ca:\"104\",e:\"104\",f:\"72\",fa:\"79\",s:\"14.1\",si:\"14.5\"}],[\"2023-04-11\",{c:\"102\",ca:\"102\",e:\"102\",f:\"112\",fa:\"112\",s:\"15.5\",si:\"15.5\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-11-12\",{c:\"1\",ca:\"18\",e:\"13\",f:\"19\",fa:\"19\",s:\"1.2\",si:\"1\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"3.6\",fa:\"4\",s:\"3\",si:\"1\"}],[\"2021-04-26\",{c:\"20\",ca:\"25\",e:\"12\",f:\"57\",fa:\"57\",s:\"14.1\",si:\"5\"}],[\"2015-07-29\",{c:\"5\",ca:\"18\",e:\"12\",f:\"4\",fa:\"4\",s:\"5\",si:\"3\"}],[\"2020-01-15\",{c:\"1\",ca:\"18\",e:\"79\",f:\"6\",fa:\"6\",s:\"3.1\",si:\"2\"}],[\"2015-07-29\",{c:\"2\",ca:\"18\",e:\"12\",f:\"3\",fa:\"4\",s:\"4\",si:\"3\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-07-29\",{c:\"7\",ca:\"18\",e:\"12\",f:\"29\",fa:\"29\",s:\"5.1\",si:\"5\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2017-03-16\",{c:\"4\",ca:\"57\",e:\"12\",f:\"23\",fa:\"52\",s:\"3.1\",si:\"5\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"3.1\",si:\"2\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2021-12-07\",{c:\"66\",ca:\"66\",e:\"79\",f:\"95\",fa:\"79\",s:\"12.1\",si:\"12.2\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"≤4\",si:\"≤3.2\"}],[\"2018-12-11\",{c:\"41\",ca:\"41\",e:\"12\",f:\"64\",fa:\"64\",s:\"9\",si:\"9\"}],[\"2019-03-25\",{c:\"58\",ca:\"58\",e:\"16\",f:\"55\",fa:\"55\",s:\"12.1\",si:\"12.2\"}],[\"2017-09-28\",{c:\"24\",ca:\"25\",e:\"12\",f:\"29\",fa:\"56\",s:\"10\",si:\"10\"}],[\"2021-04-26\",{c:\"81\",ca:\"81\",e:\"81\",f:\"86\",fa:\"86\",s:\"14.1\",si:\"14.5\"}],[\"2025-03-04\",{c:\"129\",ca:\"129\",e:\"129\",f:\"136\",fa:\"136\",s:\"16.4\",si:\"16.4\"}],[\"2021-04-26\",{c:\"72\",ca:\"72\",e:\"79\",f:\"78\",fa:\"79\",s:\"14.1\",si:\"14.5\"}],[\"2020-09-16\",{c:\"74\",ca:\"74\",e:\"79\",f:\"75\",fa:\"79\",s:\"14\",si:\"14\"}],[\"2019-09-19\",{c:\"63\",ca:\"63\",e:\"18\",f:\"58\",fa:\"58\",s:\"13\",si:\"13\"}],[\"2020-09-16\",{c:\"71\",ca:\"71\",e:\"79\",f:\"76\",fa:\"79\",s:\"14\",si:\"14\"}],[\"2024-04-16\",{c:\"87\",ca:\"87\",e:\"87\",f:\"125\",fa:\"125\",s:\"14.1\",si:\"14.5\"}],[\"2021-01-21\",{c:\"88\",ca:\"88\",e:\"88\",f:\"82\",fa:\"82\",s:\"14\",si:\"14\"}],[\"2018-04-12\",{c:\"55\",ca:\"55\",e:\"15\",f:\"52\",fa:\"52\",s:\"11.1\",si:\"11.3\"}],[\"2020-01-15\",{c:\"41\",ca:\"41\",e:\"79\",f:\"36\",fa:\"36\",s:\"8\",si:\"8\"}],[\"2025-03-31\",{c:\"122\",ca:\"122\",e:\"122\",f:\"131\",fa:\"131\",s:\"18.4\",si:\"18.4\"}],[\"2015-07-29\",{c:\"38\",ca:\"38\",e:\"12\",f:\"13\",fa:\"14\",s:\"7\",si:\"7\"}],[\"2015-07-29\",{c:\"5\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"5\",si:\"4.2\"}],[\"2018-05-09\",{c:\"61\",ca:\"61\",e:\"16\",f:\"60\",fa:\"60\",s:\"11\",si:\"11\"}],[\"2023-06-06\",{c:\"80\",ca:\"80\",e:\"80\",f:\"114\",fa:\"114\",s:\"15\",si:\"15\"}],[\"2015-07-29\",{c:\"3\",ca:\"18\",e:\"12\",f:\"3.5\",fa:\"4\",s:\"4\",si:\"4\"}],[\"2025-04-29\",{c:\"123\",ca:\"123\",e:\"123\",f:\"138\",fa:\"138\",s:\"17.2\",si:\"17.2\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"≤4\",si:\"≤3.2\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"6\",fa:\"6\",s:\"1.2\",si:\"1\"}],[\"2023-05-09\",{c:\"111\",ca:\"111\",e:\"111\",f:\"113\",fa:\"113\",s:\"15\",si:\"15\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"≤4\",si:\"≤3.2\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"3.1\",si:\"2\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"≤4\",si:\"≤3.2\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2020-01-15\",{c:\"48\",ca:\"48\",e:\"79\",f:\"50\",fa:\"50\",s:\"11\",si:\"11\"}],[\"2016-09-20\",{c:\"49\",ca:\"49\",e:\"14\",f:\"44\",fa:\"44\",s:\"10\",si:\"10\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2023-11-21\",{c:\"109\",ca:\"109\",e:\"109\",f:\"120\",fa:\"120\",s:\"16.4\",si:\"16.4\"}],[\"2024-05-13\",{c:\"123\",ca:\"123\",e:\"123\",f:\"120\",fa:\"120\",s:\"17.5\",si:\"17.5\"}],[\"2020-07-28\",{c:\"83\",ca:\"83\",e:\"83\",f:\"69\",fa:\"79\",s:\"13\",si:\"13\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2023-12-11\",{c:\"113\",ca:\"113\",e:\"113\",f:\"112\",fa:\"112\",s:\"17.2\",si:\"17.2\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"≤4\",si:\"≤3.2\"}],[\"2025-09-15\",{c:\"46\",ca:\"46\",e:\"79\",f:\"127\",fa:\"127\",s:\"5\",si:\"26\"}],[\"2020-01-15\",{c:\"46\",ca:\"46\",e:\"79\",f:\"39\",fa:\"39\",s:\"11.1\",si:\"11.3\"}],[\"2021-01-26\",{c:\"50\",ca:\"50\",e:\"79\",f:\"85\",fa:\"85\",s:\"11.1\",si:\"11.3\"}],[\"2020-01-15\",{c:\"65\",ca:\"65\",e:\"79\",f:\"50\",fa:\"50\",s:\"9\",si:\"9\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"≤4\",si:\"≤3.2\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2023-12-19\",{c:\"77\",ca:\"77\",e:\"79\",f:\"121\",fa:\"121\",s:\"16.4\",si:\"16.4\"}],[\"2015-07-29\",{c:\"4\",ca:\"18\",e:\"12\",f:\"3.5\",fa:\"6\",s:\"4\",si:\"3.2\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2020-09-16\",{c:\"85\",ca:\"85\",e:\"85\",f:\"79\",fa:\"79\",s:\"14\",si:\"14\"}],[\"2021-09-20\",{c:\"89\",ca:\"89\",e:\"89\",f:\"66\",fa:\"66\",s:\"15\",si:\"15\"}],[\"2015-07-29\",{c:\"26\",ca:\"26\",e:\"12\",f:\"21\",fa:\"21\",s:\"7\",si:\"7\"}],[\"2015-07-29\",{c:\"38\",ca:\"38\",e:\"12\",f:\"13\",fa:\"14\",s:\"8\",si:\"8\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-07-29\",{c:\"7\",ca:\"18\",e:\"12\",f:\"4\",fa:\"4\",s:\"5.1\",si:\"5\"}],[\"2020-01-15\",{c:\"24\",ca:\"25\",e:\"79\",f:\"35\",fa:\"35\",s:\"7\",si:\"7\"}],[\"2023-12-07\",{c:\"120\",ca:\"120\",e:\"120\",f:\"53\",fa:\"53\",s:\"15.4\",si:\"15.4\"}],[\"2015-07-29\",{c:\"9\",ca:\"18\",e:\"12\",f:\"6\",fa:\"6\",s:\"5.1\",si:\"5\"}],[\"2023-01-12\",{c:\"109\",ca:\"109\",e:\"109\",f:\"4\",fa:\"4\",s:\"5.1\",si:\"5\"}],[\"2022-04-28\",{c:\"101\",ca:\"101\",e:\"101\",f:\"63\",fa:\"63\",s:\"15.4\",si:\"15.4\"}],[\"2017-09-19\",{c:\"53\",ca:\"53\",e:\"12\",f:\"36\",fa:\"36\",s:\"11\",si:\"11\"}],[\"2020-02-04\",{c:\"80\",ca:\"80\",e:\"12\",f:\"42\",fa:\"42\",s:\"8\",si:\"12.2\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"3\",si:\"1\"}],[\"2023-03-27\",{c:\"104\",ca:\"104\",e:\"104\",f:\"102\",fa:\"102\",s:\"16.4\",si:\"16.4\"}],[\"2021-04-26\",{c:\"49\",ca:\"49\",e:\"79\",f:\"25\",fa:\"25\",s:\"14.1\",si:\"14\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"3\",si:\"1\"}],[\"2023-03-27\",{c:\"60\",ca:\"60\",e:\"18\",f:\"57\",fa:\"57\",s:\"16.4\",si:\"16.4\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2018-10-02\",{c:\"6\",ca:\"18\",e:\"18\",f:\"56\",fa:\"56\",s:\"6\",si:\"10.3\"}],[\"2020-07-28\",{c:\"79\",ca:\"79\",e:\"79\",f:\"75\",fa:\"79\",s:\"13.1\",si:\"13.4\"}],[\"2020-01-15\",{c:\"46\",ca:\"46\",e:\"79\",f:\"66\",fa:\"66\",s:\"11\",si:\"11\"}],[\"2015-07-29\",{c:\"18\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1.3\",si:\"1\"}],[\"2020-01-15\",{c:\"41\",ca:\"41\",e:\"79\",f:\"32\",fa:\"32\",s:\"8\",si:\"8\"}],[\"2020-01-15\",{c:\"≤79\",ca:\"≤79\",e:\"79\",f:\"≤23\",fa:\"≤23\",s:\"≤9.1\",si:\"≤9.3\"}],[\"2022-09-02\",{c:\"105\",ca:\"105\",e:\"105\",f:\"103\",fa:\"103\",s:\"15.6\",si:\"15.6\"}],[\"2023-09-18\",{c:\"66\",ca:\"66\",e:\"79\",f:\"115\",fa:\"115\",s:\"17\",si:\"17\"}],[\"2022-09-12\",{c:\"55\",ca:\"55\",e:\"79\",f:\"72\",fa:\"79\",s:\"16\",si:\"16\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2017-03-07\",{c:\"50\",ca:\"50\",e:\"12\",f:\"52\",fa:\"52\",s:\"9\",si:\"9\"}],[\"2015-07-29\",{c:\"26\",ca:\"26\",e:\"12\",f:\"14\",fa:\"14\",s:\"7\",si:\"7\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-07-29\",{c:\"5\",ca:\"18\",e:\"12\",f:\"4\",fa:\"4\",s:\"5\",si:\"4.2\"}],[\"2021-10-25\",{c:\"57\",ca:\"57\",e:\"12\",f:\"58\",fa:\"58\",s:\"15\",si:\"15.1\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2023-12-11\",{c:\"120\",ca:\"120\",e:\"120\",f:\"117\",fa:\"117\",s:\"17.2\",si:\"17.2\"}],[\"2021-01-21\",{c:\"88\",ca:\"88\",e:\"88\",f:\"84\",fa:\"84\",s:\"9\",si:\"9\"}],[\"2023-03-27\",{c:\"20\",ca:\"42\",e:\"14\",f:\"22\",fa:\"22\",s:\"7\",si:\"16.4\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"3.5\",fa:\"4\",s:\"3.1\",si:\"2\"}],[\"2023-05-09\",{c:\"111\",ca:\"111\",e:\"111\",f:\"113\",fa:\"113\",s:\"9\",si:\"9\"}],[\"2015-07-29\",{c:\"4\",ca:\"18\",e:\"12\",f:\"3.5\",fa:\"4\",s:\"3.1\",si:\"2\"}],[\"2020-09-16\",{c:\"85\",ca:\"85\",e:\"85\",f:\"79\",fa:\"79\",s:\"14\",si:\"14\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2020-07-28\",{c:\"75\",ca:\"75\",e:\"79\",f:\"70\",fa:\"79\",s:\"13\",si:\"13\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"3\",si:\"2\"}],[\"2020-01-15\",{c:\"32\",ca:\"32\",e:\"79\",f:\"36\",fa:\"36\",s:\"10\",si:\"10\"}],[\"2022-03-14\",{c:\"93\",ca:\"93\",e:\"93\",f:\"92\",fa:\"92\",s:\"15.4\",si:\"15.4\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2020-01-15\",{c:\"32\",ca:\"32\",e:\"79\",f:\"36\",fa:\"36\",s:\"10\",si:\"10\"}],[\"2015-07-29\",{c:\"24\",ca:\"25\",e:\"12\",f:\"24\",fa:\"24\",s:\"8\",si:\"8\"}],[\"2021-04-26\",{c:\"80\",ca:\"80\",e:\"80\",f:\"71\",fa:\"79\",s:\"14.1\",si:\"14.5\"}],[\"2015-07-29\",{c:\"10\",ca:\"18\",e:\"12\",f:\"10\",fa:\"10\",s:\"8\",si:\"8\"}],[\"2015-07-29\",{c:\"10\",ca:\"18\",e:\"12\",f:\"6\",fa:\"6\",s:\"8\",si:\"8\"}],[\"2015-07-29\",{c:\"29\",ca:\"29\",e:\"12\",f:\"24\",fa:\"24\",s:\"8\",si:\"8\"}],[\"2016-08-02\",{c:\"27\",ca:\"27\",e:\"14\",f:\"29\",fa:\"29\",s:\"8\",si:\"8\"}],[\"2018-04-30\",{c:\"24\",ca:\"25\",e:\"17\",f:\"25\",fa:\"25\",s:\"8\",si:\"9\"}],[\"2021-04-26\",{c:\"35\",ca:\"35\",e:\"12\",f:\"25\",fa:\"25\",s:\"14.1\",si:\"14.5\"}],[\"2023-03-27\",{c:\"69\",ca:\"69\",e:\"79\",f:\"105\",fa:\"105\",s:\"16.4\",si:\"16.4\"}],[\"2023-05-09\",{c:\"111\",ca:\"111\",e:\"111\",f:\"113\",fa:\"113\",s:\"15.4\",si:\"15.4\"}],[\"2015-07-29\",{c:\"2\",ca:\"18\",e:\"12\",f:\"1.5\",fa:\"4\",s:\"4\",si:\"3.2\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"2\",si:\"1\"}],[\"≤2020-03-24\",{c:\"≤80\",ca:\"≤80\",e:\"≤80\",f:\"1.5\",fa:\"4\",s:\"≤13.1\",si:\"≤13.4\"}],[\"2020-01-15\",{c:\"66\",ca:\"66\",e:\"79\",f:\"58\",fa:\"58\",s:\"11.1\",si:\"11.3\"}],[\"2023-03-27\",{c:\"108\",ca:\"109\",e:\"108\",f:\"111\",fa:\"111\",s:\"16.4\",si:\"16.4\"}],[\"2023-03-27\",{c:\"94\",ca:\"94\",e:\"94\",f:\"88\",fa:\"88\",s:\"16.4\",si:\"16.4\"}],[\"2017-04-05\",{c:\"1\",ca:\"18\",e:\"15\",f:\"1.5\",fa:\"4\",s:\"1.2\",si:\"1\"}],[\"≤2018-10-02\",{c:\"10\",ca:\"18\",e:\"≤18\",f:\"4\",fa:\"4\",s:\"7\",si:\"7\"}],[\"2023-09-18\",{c:\"113\",ca:\"113\",e:\"113\",f:\"66\",fa:\"66\",s:\"17\",si:\"17\"}],[\"2022-09-12\",{c:\"90\",ca:\"90\",e:\"90\",f:\"81\",fa:\"81\",s:\"16\",si:\"16\"}],[\"2020-03-24\",{c:\"68\",ca:\"68\",e:\"79\",f:\"61\",fa:\"61\",s:\"13.1\",si:\"13.4\"}],[\"2018-10-02\",{c:\"23\",ca:\"25\",e:\"18\",f:\"49\",fa:\"49\",s:\"7\",si:\"7\"}],[\"2022-09-12\",{c:\"63\",ca:\"63\",e:\"18\",f:\"59\",fa:\"59\",s:\"16\",si:\"16\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"3\",si:\"1\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2019-01-29\",{c:\"50\",ca:\"50\",e:\"12\",f:\"65\",fa:\"65\",s:\"10\",si:\"10\"}],[\"2024-12-11\",{c:\"15\",ca:\"18\",e:\"79\",f:\"95\",fa:\"95\",s:\"18.2\",si:\"18.2\"}],[\"2015-07-29\",{c:\"4\",ca:\"18\",e:\"12\",f:\"1.5\",fa:\"4\",s:\"5\",si:\"4\"}],[\"2015-07-29\",{c:\"33\",ca:\"33\",e:\"12\",f:\"18\",fa:\"18\",s:\"7\",si:\"7\"}],[\"2025-09-15\",{c:\"124\",ca:\"124\",e:\"124\",f:\"128\",fa:\"128\",s:\"26\",si:\"26\"}],[\"2023-03-27\",{c:\"94\",ca:\"94\",e:\"94\",f:\"99\",fa:\"99\",s:\"16.4\",si:\"16.4\"}],[\"2015-09-16\",{c:\"6\",ca:\"18\",e:\"12\",f:\"7\",fa:\"7\",s:\"8\",si:\"9\"}],[\"2022-09-12\",{c:\"44\",ca:\"44\",e:\"79\",f:\"46\",fa:\"46\",s:\"16\",si:\"16\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2016-03-21\",{c:\"38\",ca:\"38\",e:\"13\",f:\"38\",fa:\"38\",s:\"9.1\",si:\"9.3\"}],[\"2020-01-15\",{c:\"57\",ca:\"57\",e:\"79\",f:\"51\",fa:\"51\",s:\"10.1\",si:\"10.3\"}],[\"2020-01-15\",{c:\"47\",ca:\"47\",e:\"79\",f:\"51\",fa:\"51\",s:\"9\",si:\"9\"}],[\"2015-07-29\",{c:\"2\",ca:\"18\",e:\"12\",f:\"3.6\",fa:\"4\",s:\"4\",si:\"3.2\"}],[\"2020-07-28\",{c:\"55\",ca:\"55\",e:\"12\",f:\"59\",fa:\"79\",s:\"13\",si:\"13\"}],[\"2025-01-27\",{c:\"116\",ca:\"116\",e:\"116\",f:\"125\",fa:\"125\",s:\"17\",si:\"18.3\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-07-29\",{c:\"2\",ca:\"18\",e:\"12\",f:\"3\",fa:\"4\",s:\"4\",si:\"3.2\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"≤4\",si:\"≤3.2\"}],[\"2020-01-15\",{c:\"76\",ca:\"76\",e:\"79\",f:\"67\",fa:\"67\",s:\"12.1\",si:\"13\"}],[\"2022-05-31\",{c:\"96\",ca:\"96\",e:\"96\",f:\"101\",fa:\"101\",s:\"14.1\",si:\"14.5\"}],[\"2020-01-15\",{c:\"74\",ca:\"74\",e:\"79\",f:\"63\",fa:\"64\",s:\"10.1\",si:\"10.3\"}],[\"2023-12-11\",{c:\"73\",ca:\"73\",e:\"79\",f:\"78\",fa:\"79\",s:\"17.2\",si:\"17.2\"}],[\"2023-12-11\",{c:\"86\",ca:\"86\",e:\"86\",f:\"101\",fa:\"101\",s:\"17.2\",si:\"17.2\"}],[\"2023-06-06\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"114\",s:\"1.1\",si:\"1\"}],[\"2025-05-01\",{c:\"136\",ca:\"136\",e:\"136\",f:\"97\",fa:\"97\",s:\"15.4\",si:\"15.4\"}],[\"2019-09-19\",{c:\"63\",ca:\"63\",e:\"12\",f:\"6\",fa:\"6\",s:\"13\",si:\"13\"}],[\"2015-07-29\",{c:\"6\",ca:\"18\",e:\"12\",f:\"6\",fa:\"6\",s:\"6\",si:\"7\"}],[\"2015-07-29\",{c:\"32\",ca:\"32\",e:\"12\",f:\"29\",fa:\"29\",s:\"8\",si:\"8\"}],[\"2020-07-28\",{c:\"76\",ca:\"76\",e:\"79\",f:\"71\",fa:\"79\",s:\"13\",si:\"13\"}],[\"2020-09-16\",{c:\"85\",ca:\"85\",e:\"85\",f:\"79\",fa:\"79\",s:\"14\",si:\"14\"}],[\"2018-10-02\",{c:\"63\",ca:\"63\",e:\"18\",f:\"58\",fa:\"58\",s:\"11.1\",si:\"11.3\"}],[\"2025-01-07\",{c:\"128\",ca:\"128\",e:\"128\",f:\"134\",fa:\"134\",s:\"18.2\",si:\"18.2\"}],[\"2024-03-05\",{c:\"119\",ca:\"119\",e:\"119\",f:\"121\",fa:\"121\",s:\"17.4\",si:\"17.4\"}],[\"2016-09-20\",{c:\"49\",ca:\"49\",e:\"12\",f:\"18\",fa:\"18\",s:\"10\",si:\"10\"}],[\"2023-03-27\",{c:\"50\",ca:\"50\",e:\"17\",f:\"44\",fa:\"48\",s:\"16\",si:\"16.4\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"3\",si:\"2\"}],[\"2020-03-24\",{c:\"63\",ca:\"63\",e:\"79\",f:\"49\",fa:\"49\",s:\"13.1\",si:\"13.4\"}],[\"2021-04-26\",{c:\"87\",ca:\"87\",e:\"87\",f:\"70\",fa:\"79\",s:\"14.1\",si:\"14.5\"}],[\"2020-07-28\",{c:\"1\",ca:\"18\",e:\"13\",f:\"78\",fa:\"79\",s:\"4\",si:\"3.2\"}],[\"2021-09-20\",{c:\"85\",ca:\"85\",e:\"85\",f:\"87\",fa:\"87\",s:\"15\",si:\"15\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2025-05-01\",{c:\"136\",ca:\"136\",e:\"136\",f:\"134\",fa:\"134\",s:\"18.2\",si:\"18.2\"}],[\"2024-07-09\",{c:\"85\",ca:\"85\",e:\"85\",f:\"128\",fa:\"128\",s:\"16.4\",si:\"16.4\"}],[\"2024-09-16\",{c:\"125\",ca:\"125\",e:\"125\",f:\"128\",fa:\"128\",s:\"18\",si:\"18\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-07-29\",{c:\"4\",ca:\"18\",e:\"12\",f:\"3.6\",fa:\"4\",s:\"5\",si:\"4\"}],[\"2015-07-29\",{c:\"24\",ca:\"25\",e:\"12\",f:\"23\",fa:\"23\",s:\"7\",si:\"7\"}],[\"2023-03-27\",{c:\"69\",ca:\"69\",e:\"79\",f:\"99\",fa:\"99\",s:\"16.4\",si:\"16.4\"}],[\"2024-10-29\",{c:\"83\",ca:\"83\",e:\"83\",f:\"132\",fa:\"132\",s:\"15.4\",si:\"15.4\"}],[\"2025-05-27\",{c:\"134\",ca:\"134\",e:\"134\",f:\"139\",fa:\"139\",s:\"18.4\",si:\"18.4\"}],[\"2024-07-09\",{c:\"111\",ca:\"111\",e:\"111\",f:\"128\",fa:\"128\",s:\"16.4\",si:\"16.4\"}],[\"2020-07-28\",{c:\"64\",ca:\"64\",e:\"79\",f:\"69\",fa:\"79\",s:\"13.1\",si:\"13.4\"}],[\"2022-09-12\",{c:\"68\",ca:\"68\",e:\"79\",f:\"62\",fa:\"62\",s:\"16\",si:\"16\"}],[\"2018-10-23\",{c:\"1\",ca:\"18\",e:\"12\",f:\"63\",fa:\"63\",s:\"3\",si:\"1\"}],[\"2023-03-27\",{c:\"54\",ca:\"54\",e:\"17\",f:\"45\",fa:\"45\",s:\"16.4\",si:\"16.4\"}],[\"2017-09-19\",{c:\"29\",ca:\"29\",e:\"12\",f:\"35\",fa:\"35\",s:\"11\",si:\"11\"}],[\"2020-07-27\",{c:\"84\",ca:\"84\",e:\"84\",f:\"67\",fa:\"67\",s:\"9.1\",si:\"9.3\"}],[\"2020-01-15\",{c:\"65\",ca:\"65\",e:\"79\",f:\"52\",fa:\"52\",s:\"12.1\",si:\"12.2\"}],[\"2023-11-21\",{c:\"111\",ca:\"111\",e:\"111\",f:\"120\",fa:\"120\",s:\"16.4\",si:\"16.4\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2024-05-17\",{c:\"125\",ca:\"125\",e:\"125\",f:\"118\",fa:\"118\",s:\"15.4\",si:\"15.4\"}],[\"2015-07-29\",{c:\"5\",ca:\"18\",e:\"12\",f:\"38\",fa:\"38\",s:\"5\",si:\"4.2\"}],[\"2024-12-11\",{c:\"128\",ca:\"128\",e:\"128\",f:\"38\",fa:\"38\",s:\"18.2\",si:\"18.2\"}],[\"2024-12-11\",{c:\"84\",ca:\"84\",e:\"84\",f:\"38\",fa:\"38\",s:\"18.2\",si:\"18.2\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"≤4\",si:\"≤3.2\"}],[\"2020-01-15\",{c:\"69\",ca:\"69\",e:\"79\",f:\"65\",fa:\"65\",s:\"11.1\",si:\"11.3\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"≤4\",si:\"≤3.2\"}],[\"2020-01-15\",{c:\"27\",ca:\"27\",e:\"79\",f:\"32\",fa:\"32\",s:\"7\",si:\"7\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2023-03-27\",{c:\"38\",ca:\"39\",e:\"79\",f:\"43\",fa:\"43\",s:\"16.4\",si:\"16.4\"}],[\"2025-03-31\",{c:\"84\",ca:\"84\",e:\"84\",f:\"126\",fa:\"126\",s:\"16.4\",si:\"18.4\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"3\",si:\"2\"}],[\"2023-12-07\",{c:\"120\",ca:\"120\",e:\"120\",f:\"113\",fa:\"113\",s:\"17\",si:\"17\"}],[\"2022-03-14\",{c:\"61\",ca:\"61\",e:\"79\",f:\"36\",fa:\"36\",s:\"15.4\",si:\"15.4\"}],[\"2020-09-16\",{c:\"61\",ca:\"61\",e:\"79\",f:\"36\",fa:\"36\",s:\"14\",si:\"14\"}],[\"2020-01-15\",{c:\"1\",ca:\"18\",e:\"79\",f:\"1\",fa:\"4\",s:\"3\",si:\"1\"}],[\"2020-01-15\",{c:\"69\",ca:\"69\",e:\"79\",f:\"68\",fa:\"68\",s:\"11\",si:\"11\"}],[\"2024-10-01\",{c:\"80\",ca:\"80\",e:\"80\",f:\"131\",fa:\"131\",s:\"16.1\",si:\"16.1\"}],[\"2024-12-11\",{c:\"94\",ca:\"94\",e:\"94\",f:\"97\",fa:\"97\",s:\"18.2\",si:\"18.2\"}],[\"2024-12-11\",{c:\"121\",ca:\"121\",e:\"121\",f:\"64\",fa:\"64\",s:\"18.2\",si:\"18.2\"}],[\"2023-10-13\",{c:\"118\",ca:\"118\",e:\"118\",f:\"118\",fa:\"118\",s:\"17\",si:\"17\"}],[\"2015-07-29\",{c:\"5\",ca:\"18\",e:\"12\",f:\"4\",fa:\"4\",s:\"5\",si:\"4.2\"}],[\"2015-07-29\",{c:\"5\",ca:\"18\",e:\"12\",f:\"4\",fa:\"4\",s:\"5\",si:\"4.2\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2017-03-07\",{c:\"11\",ca:\"18\",e:\"12\",f:\"52\",fa:\"52\",s:\"5.1\",si:\"5\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"3\",si:\"1\"}],[\"2020-01-15\",{c:\"6\",ca:\"18\",e:\"79\",f:\"6\",fa:\"45\",s:\"5\",si:\"5\"}],[\"2023-03-27\",{c:\"65\",ca:\"65\",e:\"79\",f:\"61\",fa:\"61\",s:\"16.4\",si:\"16.4\"}],[\"2018-04-30\",{c:\"45\",ca:\"45\",e:\"17\",f:\"44\",fa:\"44\",s:\"11.1\",si:\"11.3\"}],[\"2015-07-29\",{c:\"38\",ca:\"38\",e:\"12\",f:\"13\",fa:\"14\",s:\"8\",si:\"8\"}],[\"2024-06-11\",{c:\"122\",ca:\"122\",e:\"122\",f:\"127\",fa:\"127\",s:\"17\",si:\"17\"}],[\"2015-07-29\",{c:\"3\",ca:\"18\",e:\"12\",f:\"3.5\",fa:\"4\",s:\"4\",si:\"5\"}],[\"2015-07-29\",{c:\"3\",ca:\"18\",e:\"12\",f:\"3.5\",fa:\"4\",s:\"4\",si:\"5\"}],[\"2020-01-15\",{c:\"53\",ca:\"53\",e:\"79\",f:\"63\",fa:\"63\",s:\"10\",si:\"10\"}],[\"2020-07-28\",{c:\"73\",ca:\"73\",e:\"79\",f:\"72\",fa:\"79\",s:\"13.1\",si:\"13.4\"}],[\"2020-01-15\",{c:\"37\",ca:\"37\",e:\"79\",f:\"62\",fa:\"62\",s:\"10.1\",si:\"10.3\"}],[\"2020-01-15\",{c:\"37\",ca:\"37\",e:\"79\",f:\"54\",fa:\"54\",s:\"10.1\",si:\"10.3\"}],[\"2021-12-13\",{c:\"68\",ca:\"89\",e:\"79\",f:\"79\",fa:\"79\",s:\"15.2\",si:\"15.2\"}],[\"2020-01-15\",{c:\"53\",ca:\"53\",e:\"79\",f:\"63\",fa:\"63\",s:\"10\",si:\"10\"}],[\"2023-03-27\",{c:\"92\",ca:\"92\",e:\"92\",f:\"92\",fa:\"92\",s:\"16.4\",si:\"16.4\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"≤4\",si:\"≤3.2\"}],[\"2020-01-15\",{c:\"19\",ca:\"25\",e:\"79\",f:\"4\",fa:\"4\",s:\"6\",si:\"6\"}],[\"2015-07-29\",{c:\"3\",ca:\"18\",e:\"12\",f:\"3.5\",fa:\"4\",s:\"3.1\",si:\"2\"}],[\"2020-01-15\",{c:\"18\",ca:\"18\",e:\"79\",f:\"55\",fa:\"55\",s:\"7\",si:\"7\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2018-09-05\",{c:\"33\",ca:\"33\",e:\"14\",f:\"49\",fa:\"62\",s:\"7\",si:\"7\"}],[\"2017-11-28\",{c:\"9\",ca:\"47\",e:\"12\",f:\"2\",fa:\"57\",s:\"5.1\",si:\"5\"}],[\"2020-01-15\",{c:\"60\",ca:\"60\",e:\"79\",f:\"55\",fa:\"55\",s:\"11.1\",si:\"11.3\"}],[\"2017-03-27\",{c:\"38\",ca:\"38\",e:\"13\",f:\"38\",fa:\"38\",s:\"10.1\",si:\"10.3\"}],[\"2020-01-15\",{c:\"70\",ca:\"70\",e:\"79\",f:\"3\",fa:\"4\",s:\"10.1\",si:\"10.3\"}],[\"2024-08-06\",{c:\"117\",ca:\"117\",e:\"117\",f:\"129\",fa:\"129\",s:\"17.5\",si:\"17.5\"}],[\"2024-05-17\",{c:\"125\",ca:\"125\",e:\"125\",f:\"126\",fa:\"126\",s:\"17.4\",si:\"17.4\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2020-09-16\",{c:\"77\",ca:\"77\",e:\"79\",f:\"65\",fa:\"65\",s:\"14\",si:\"14\"}],[\"2019-09-19\",{c:\"56\",ca:\"56\",e:\"16\",f:\"59\",fa:\"59\",s:\"13\",si:\"13\"}],[\"2023-12-05\",{c:\"119\",ca:\"120\",e:\"85\",f:\"65\",fa:\"65\",s:\"11.1\",si:\"11.3\"}],[\"2023-09-18\",{c:\"61\",ca:\"61\",e:\"79\",f:\"57\",fa:\"57\",s:\"17\",si:\"17\"}],[\"2022-06-28\",{c:\"67\",ca:\"67\",e:\"79\",f:\"102\",fa:\"102\",s:\"14.1\",si:\"14.5\"}],[\"2022-03-14\",{c:\"92\",ca:\"92\",e:\"92\",f:\"90\",fa:\"90\",s:\"15.4\",si:\"15.4\"}],[\"2015-09-30\",{c:\"41\",ca:\"41\",e:\"12\",f:\"29\",fa:\"29\",s:\"9\",si:\"9\"}],[\"2015-09-30\",{c:\"41\",ca:\"41\",e:\"12\",f:\"40\",fa:\"40\",s:\"9\",si:\"9\"}],[\"2020-01-15\",{c:\"73\",ca:\"73\",e:\"79\",f:\"67\",fa:\"67\",s:\"13\",si:\"13\"}],[\"2016-09-20\",{c:\"34\",ca:\"34\",e:\"12\",f:\"31\",fa:\"31\",s:\"10\",si:\"10\"}],[\"2017-04-05\",{c:\"57\",ca:\"57\",e:\"15\",f:\"48\",fa:\"48\",s:\"10\",si:\"10\"}],[\"2015-09-30\",{c:\"41\",ca:\"41\",e:\"12\",f:\"34\",fa:\"34\",s:\"9\",si:\"9\"}],[\"2015-09-30\",{c:\"41\",ca:\"36\",e:\"12\",f:\"24\",fa:\"24\",s:\"9\",si:\"9\"}],[\"2020-08-27\",{c:\"85\",ca:\"85\",e:\"85\",f:\"77\",fa:\"79\",s:\"13.1\",si:\"13.4\"}],[\"2015-09-30\",{c:\"41\",ca:\"36\",e:\"12\",f:\"17\",fa:\"17\",s:\"9\",si:\"9\"}],[\"2020-01-15\",{c:\"66\",ca:\"66\",e:\"79\",f:\"61\",fa:\"61\",s:\"12\",si:\"12\"}],[\"2023-10-24\",{c:\"111\",ca:\"111\",e:\"111\",f:\"119\",fa:\"119\",s:\"16.4\",si:\"16.4\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"≤4\",si:\"≤3.2\"}],[\"2022-03-14\",{c:\"98\",ca:\"98\",e:\"98\",f:\"94\",fa:\"94\",s:\"15.4\",si:\"15.4\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"≤4\",si:\"≤3.2\"}],[\"2023-09-15\",{c:\"117\",ca:\"117\",e:\"117\",f:\"71\",fa:\"79\",s:\"16\",si:\"16\"}],[\"2015-09-30\",{c:\"28\",ca:\"28\",e:\"12\",f:\"22\",fa:\"22\",s:\"9\",si:\"9\"}],[\"2016-09-20\",{c:\"2\",ca:\"18\",e:\"12\",f:\"49\",fa:\"49\",s:\"4\",si:\"3.2\"}],[\"2020-01-15\",{c:\"1\",ca:\"18\",e:\"79\",f:\"3\",fa:\"4\",s:\"3\",si:\"2\"}],[\"2015-07-29\",{c:\"5\",ca:\"18\",e:\"12\",f:\"3\",fa:\"4\",s:\"6\",si:\"6\"}],[\"2015-09-30\",{c:\"38\",ca:\"38\",e:\"12\",f:\"36\",fa:\"36\",s:\"9\",si:\"9\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2021-08-10\",{c:\"42\",ca:\"42\",e:\"79\",f:\"91\",fa:\"91\",s:\"13.1\",si:\"13.4\"}],[\"2018-10-02\",{c:\"1\",ca:\"18\",e:\"18\",f:\"1.5\",fa:\"4\",s:\"3.1\",si:\"2\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1.3\",si:\"2\"}],[\"2024-12-11\",{c:\"89\",ca:\"89\",e:\"89\",f:\"131\",fa:\"131\",s:\"18.2\",si:\"18.2\"}],[\"2015-11-12\",{c:\"26\",ca:\"26\",e:\"13\",f:\"22\",fa:\"22\",s:\"8\",si:\"8\"}],[\"2020-01-15\",{c:\"62\",ca:\"62\",e:\"79\",f:\"53\",fa:\"53\",s:\"11\",si:\"11\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2022-09-12\",{c:\"47\",ca:\"47\",e:\"12\",f:\"49\",fa:\"49\",s:\"16\",si:\"16\"}],[\"2022-03-14\",{c:\"48\",ca:\"48\",e:\"79\",f:\"48\",fa:\"48\",s:\"15.4\",si:\"15.4\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2022-03-03\",{c:\"99\",ca:\"99\",e:\"99\",f:\"46\",fa:\"46\",s:\"7\",si:\"7\"}],[\"2020-01-15\",{c:\"38\",ca:\"38\",e:\"79\",f:\"19\",fa:\"19\",s:\"10.1\",si:\"10.3\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2020-09-16\",{c:\"48\",ca:\"48\",e:\"79\",f:\"41\",fa:\"41\",s:\"14\",si:\"14\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"7\",fa:\"7\",s:\"1.3\",si:\"1\"}],[\"2015-07-29\",{c:\"2\",ca:\"18\",e:\"12\",f:\"3.5\",fa:\"4\",s:\"1.1\",si:\"1\"}],[\"2017-04-05\",{c:\"4\",ca:\"18\",e:\"15\",f:\"49\",fa:\"49\",s:\"3\",si:\"2\"}],[\"2015-07-29\",{c:\"23\",ca:\"25\",e:\"12\",f:\"31\",fa:\"31\",s:\"6\",si:\"6\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2020-11-19\",{c:\"87\",ca:\"87\",e:\"87\",f:\"70\",fa:\"79\",s:\"12.1\",si:\"12.2\"}],[\"2020-07-28\",{c:\"33\",ca:\"33\",e:\"12\",f:\"74\",fa:\"79\",s:\"12.1\",si:\"12.2\"}],[\"2024-03-19\",{c:\"114\",ca:\"114\",e:\"114\",f:\"124\",fa:\"124\",s:\"17.4\",si:\"17.4\"}],[\"2024-05-13\",{c:\"114\",ca:\"114\",e:\"114\",f:\"121\",fa:\"121\",s:\"17.5\",si:\"17.5\"}],[\"2024-10-17\",{c:\"130\",ca:\"130\",e:\"130\",f:\"124\",fa:\"124\",s:\"17.4\",si:\"17.4\"}],[\"2024-03-19\",{c:\"114\",ca:\"114\",e:\"114\",f:\"124\",fa:\"124\",s:\"17.4\",si:\"17.4\"}],[\"2024-10-17\",{c:\"130\",ca:\"130\",e:\"130\",f:\"121\",fa:\"121\",s:\"17.5\",si:\"17.5\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"≤4\",si:\"≤3\"}],[\"2017-10-24\",{c:\"62\",ca:\"62\",e:\"14\",f:\"22\",fa:\"22\",s:\"10\",si:\"10\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"≤4\",si:\"≤3.2\"}],[\"2021-09-20\",{c:\"89\",ca:\"89\",e:\"89\",f:\"89\",fa:\"89\",s:\"15\",si:\"15\"}],[\"2019-09-19\",{c:\"36\",ca:\"36\",e:\"12\",f:\"52\",fa:\"52\",s:\"13\",si:\"9.3\"}],[\"2024-03-05\",{c:\"114\",ca:\"114\",e:\"114\",f:\"122\",fa:\"122\",s:\"17.4\",si:\"17.4\"}],[\"2024-04-16\",{c:\"118\",ca:\"118\",e:\"118\",f:\"125\",fa:\"125\",s:\"13.1\",si:\"13.4\"}],[\"2015-09-30\",{c:\"36\",ca:\"36\",e:\"12\",f:\"16\",fa:\"16\",s:\"9\",si:\"9\"}],[\"2022-03-14\",{c:\"36\",ca:\"36\",e:\"12\",f:\"16\",fa:\"16\",s:\"15.4\",si:\"15.4\"}],[\"2024-08-06\",{c:\"117\",ca:\"117\",e:\"117\",f:\"129\",fa:\"129\",s:\"17.4\",si:\"17.4\"}],[\"2015-09-30\",{c:\"26\",ca:\"26\",e:\"12\",f:\"16\",fa:\"16\",s:\"9\",si:\"9\"}],[\"2023-03-14\",{c:\"19\",ca:\"25\",e:\"79\",f:\"111\",fa:\"111\",s:\"6\",si:\"6\"}],[\"2023-03-13\",{c:\"111\",ca:\"111\",e:\"111\",f:\"108\",fa:\"108\",s:\"15.4\",si:\"15.4\"}],[\"2023-07-21\",{c:\"115\",ca:\"115\",e:\"115\",f:\"70\",fa:\"79\",s:\"15\",si:\"15\"}],[\"2016-09-20\",{c:\"45\",ca:\"45\",e:\"12\",f:\"38\",fa:\"38\",s:\"10\",si:\"10\"}],[\"2016-09-20\",{c:\"45\",ca:\"45\",e:\"12\",f:\"37\",fa:\"37\",s:\"10\",si:\"10\"}],[\"2015-07-29\",{c:\"7\",ca:\"18\",e:\"12\",f:\"4\",fa:\"4\",s:\"5.1\",si:\"4.2\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2025-09-05\",{c:\"140\",ca:\"140\",e:\"140\",f:\"133\",fa:\"133\",s:\"18.2\",si:\"18.2\"}],[\"2015-09-30\",{c:\"44\",ca:\"44\",e:\"12\",f:\"40\",fa:\"40\",s:\"9\",si:\"9\"}],[\"2016-03-21\",{c:\"41\",ca:\"41\",e:\"13\",f:\"27\",fa:\"27\",s:\"9.1\",si:\"9.3\"}],[\"2023-09-18\",{c:\"113\",ca:\"113\",e:\"113\",f:\"102\",fa:\"102\",s:\"17\",si:\"17\"}],[\"2018-04-30\",{c:\"44\",ca:\"44\",e:\"17\",f:\"48\",fa:\"48\",s:\"10.1\",si:\"10.3\"}],[\"2015-07-29\",{c:\"32\",ca:\"32\",e:\"12\",f:\"19\",fa:\"19\",s:\"7\",si:\"7\"}],[\"2023-12-07\",{c:\"120\",ca:\"120\",e:\"120\",f:\"115\",fa:\"115\",s:\"17\",si:\"17\"}],[\"2025-09-15\",{c:\"95\",ca:\"95\",e:\"95\",f:\"142\",fa:\"142\",s:\"26\",si:\"26\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"2\",si:\"1\"}],[\"2023-11-21\",{c:\"72\",ca:\"72\",e:\"79\",f:\"120\",fa:\"120\",s:\"16.4\",si:\"16.4\"}],[\"2015-07-29\",{c:\"4\",ca:\"18\",e:\"12\",f:\"3.5\",fa:\"4\",s:\"4\",si:\"5\"}],[\"2023-11-02\",{c:\"119\",ca:\"119\",e:\"119\",f:\"88\",fa:\"88\",s:\"16.5\",si:\"16.5\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"≤4\",si:\"≤3.2\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2024-04-18\",{c:\"124\",ca:\"124\",e:\"124\",f:\"120\",fa:\"120\",s:\"17.4\",si:\"17.4\"}],[\"2015-07-29\",{c:\"3\",ca:\"18\",e:\"12\",f:\"3.5\",fa:\"4\",s:\"3.1\",si:\"3\"}],[\"2022-12-05\",{c:\"108\",ca:\"108\",e:\"108\",f:\"101\",fa:\"101\",s:\"15.4\",si:\"15.4\"}],[\"2017-10-17\",{c:\"26\",ca:\"26\",e:\"16\",f:\"19\",fa:\"19\",s:\"7\",si:\"7\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1.3\",si:\"1\"}],[\"2021-08-10\",{c:\"61\",ca:\"61\",e:\"79\",f:\"91\",fa:\"68\",s:\"13\",si:\"13\"}],[\"2017-10-17\",{c:\"57\",ca:\"57\",e:\"16\",f:\"52\",fa:\"52\",s:\"11\",si:\"11\"}],[\"2021-04-26\",{c:\"85\",ca:\"85\",e:\"85\",f:\"78\",fa:\"79\",s:\"14.1\",si:\"14.5\"}],[\"2021-10-25\",{c:\"75\",ca:\"75\",e:\"79\",f:\"78\",fa:\"79\",s:\"15.1\",si:\"15.1\"}],[\"2022-05-03\",{c:\"95\",ca:\"95\",e:\"95\",f:\"100\",fa:\"100\",s:\"15.2\",si:\"15.2\"}],[\"2024-03-05\",{c:\"114\",ca:\"114\",e:\"114\",f:\"112\",fa:\"112\",s:\"17.4\",si:\"17.4\"}],[\"2024-12-11\",{c:\"119\",ca:\"119\",e:\"119\",f:\"120\",fa:\"120\",s:\"18.2\",si:\"18.2\"}],[\"2020-10-20\",{c:\"86\",ca:\"86\",e:\"86\",f:\"78\",fa:\"79\",s:\"13.1\",si:\"13.4\"}],[\"2020-03-24\",{c:\"69\",ca:\"69\",e:\"79\",f:\"62\",fa:\"62\",s:\"13.1\",si:\"13.4\"}],[\"2021-10-25\",{c:\"75\",ca:\"75\",e:\"18\",f:\"64\",fa:\"64\",s:\"15.1\",si:\"15.1\"}],[\"2021-11-19\",{c:\"96\",ca:\"96\",e:\"96\",f:\"79\",fa:\"79\",s:\"15.1\",si:\"15.1\"}],[\"2021-04-26\",{c:\"69\",ca:\"69\",e:\"18\",f:\"62\",fa:\"62\",s:\"14.1\",si:\"14.5\"}],[\"2023-03-27\",{c:\"91\",ca:\"91\",e:\"91\",f:\"89\",fa:\"89\",s:\"16.4\",si:\"16.4\"}],[\"2024-12-11\",{c:\"112\",ca:\"112\",e:\"112\",f:\"121\",fa:\"121\",s:\"18.2\",si:\"18.2\"}],[\"2021-12-13\",{c:\"74\",ca:\"88\",e:\"79\",f:\"79\",fa:\"79\",s:\"15.2\",si:\"15.2\"}],[\"2024-09-16\",{c:\"119\",ca:\"119\",e:\"119\",f:\"120\",fa:\"120\",s:\"18\",si:\"18\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"4\",si:\"3.2\"}],[\"2021-04-26\",{c:\"84\",ca:\"84\",e:\"84\",f:\"79\",fa:\"79\",s:\"14.1\",si:\"14.5\"}],[\"2015-07-29\",{c:\"36\",ca:\"36\",e:\"12\",f:\"6\",fa:\"6\",s:\"8\",si:\"8\"}],[\"2015-09-30\",{c:\"36\",ca:\"36\",e:\"12\",f:\"34\",fa:\"34\",s:\"9\",si:\"9\"}],[\"2020-09-16\",{c:\"84\",ca:\"84\",e:\"84\",f:\"75\",fa:\"79\",s:\"14\",si:\"14\"}],[\"2021-04-26\",{c:\"35\",ca:\"35\",e:\"12\",f:\"25\",fa:\"25\",s:\"14.1\",si:\"14.5\"}],[\"2015-07-29\",{c:\"37\",ca:\"37\",e:\"12\",f:\"34\",fa:\"34\",s:\"11\",si:\"11\"}],[\"2022-03-14\",{c:\"69\",ca:\"69\",e:\"79\",f:\"96\",fa:\"96\",s:\"15.4\",si:\"15.4\"}],[\"2021-09-07\",{c:\"67\",ca:\"70\",e:\"18\",f:\"60\",fa:\"92\",s:\"13\",si:\"13\"}],[\"2023-10-24\",{c:\"85\",ca:\"85\",e:\"85\",f:\"119\",fa:\"119\",s:\"16\",si:\"16\"}],[\"2015-07-29\",{c:\"9\",ca:\"25\",e:\"12\",f:\"4\",fa:\"4\",s:\"5.1\",si:\"8\"}],[\"2021-09-20\",{c:\"63\",ca:\"63\",e:\"17\",f:\"30\",fa:\"30\",s:\"14\",si:\"15\"}],[\"2024-10-29\",{c:\"104\",ca:\"104\",e:\"104\",f:\"132\",fa:\"132\",s:\"16.4\",si:\"16.4\"}],[\"2020-01-15\",{c:\"47\",ca:\"47\",e:\"79\",f:\"53\",fa:\"53\",s:\"12\",si:\"12\"}],[\"2017-04-19\",{c:\"33\",ca:\"33\",e:\"12\",f:\"53\",fa:\"53\",s:\"9.1\",si:\"9.3\"}],[\"2020-09-16\",{c:\"47\",ca:\"47\",e:\"79\",f:\"56\",fa:\"56\",s:\"14\",si:\"14\"}],[\"2015-07-29\",{c:\"26\",ca:\"26\",e:\"12\",f:\"22\",fa:\"22\",s:\"8\",si:\"8\"}],[\"2018-04-30\",{c:\"26\",ca:\"26\",e:\"17\",f:\"22\",fa:\"22\",s:\"8\",si:\"8\"}],[\"2022-12-13\",{c:\"100\",ca:\"100\",e:\"100\",f:\"108\",fa:\"108\",s:\"16\",si:\"16\"}],[\"2021-09-20\",{c:\"56\",ca:\"58\",e:\"79\",f:\"51\",fa:\"51\",s:\"15\",si:\"15\"}],[\"2024-10-29\",{c:\"104\",ca:\"104\",e:\"104\",f:\"132\",fa:\"132\",s:\"16.4\",si:\"16.4\"}],[\"2020-09-16\",{c:\"9\",ca:\"18\",e:\"18\",f:\"65\",fa:\"65\",s:\"14\",si:\"14\"}],[\"2020-01-15\",{c:\"56\",ca:\"56\",e:\"79\",f:\"22\",fa:\"24\",s:\"11\",si:\"11\"}],[\"2023-05-09\",{c:\"76\",ca:\"76\",e:\"79\",f:\"113\",fa:\"113\",s:\"15.4\",si:\"15.4\"}],[\"2020-01-15\",{c:\"58\",ca:\"58\",e:\"79\",f:\"44\",fa:\"44\",s:\"11\",si:\"11\"}],[\"2015-07-29\",{c:\"5\",ca:\"18\",e:\"12\",f:\"11\",fa:\"14\",s:\"5\",si:\"4.2\"}],[\"2015-07-29\",{c:\"23\",ca:\"25\",e:\"12\",f:\"31\",fa:\"31\",s:\"6\",si:\"8\"}],[\"2020-01-15\",{c:\"23\",ca:\"25\",e:\"79\",f:\"31\",fa:\"31\",s:\"6\",si:\"8\"}],[\"2021-01-21\",{c:\"88\",ca:\"88\",e:\"88\",f:\"82\",fa:\"82\",s:\"14\",si:\"14\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2024-03-19\",{c:\"114\",ca:\"114\",e:\"114\",f:\"124\",fa:\"124\",s:\"17.4\",si:\"17.4\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2020-01-15\",{c:\"36\",ca:\"36\",e:\"79\",f:\"36\",fa:\"36\",s:\"9.1\",si:\"9.3\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2015-09-30\",{c:\"44\",ca:\"44\",e:\"12\",f:\"15\",fa:\"15\",s:\"9\",si:\"9\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2017-03-27\",{c:\"48\",ca:\"48\",e:\"12\",f:\"41\",fa:\"41\",s:\"10.1\",si:\"10.3\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"3\",si:\"1\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"3\",si:\"1\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"3\",si:\"1\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"1\",fa:\"4\",s:\"3.1\",si:\"2\"}],[\"2015-07-29\",{c:\"1\",ca:\"18\",e:\"12\",f:\"3\",fa:\"4\",s:\"1\",si:\"1\"}],[\"2024-05-14\",{c:\"1\",ca:\"18\",e:\"12\",f:\"126\",fa:\"126\",s:\"3.1\",si:\"3\"}]];1759068421612<(new Date).setMonth((new Date).getMonth()-2)&&console.warn(\"[baseline-browser-mapping] The data in this module is over two months old.  To ensure accurate Baseline data, please update: `npm i baseline-browser-mapping@latest -D`\");const r=c,f={w:\"WebKit\",g:\"Gecko\",p:\"Presto\",b:\"Blink\"},e={r:\"retired\",c:\"current\",b:\"beta\",n:\"nightly\",p:\"planned\",u:\"unknown\",e:\"esr\"},b=s=>{const a={};return Object.entries(s).forEach(([s,c])=>{if(c.releases){a[s]||(a[s]={releases:{}});const r=a[s].releases;c.releases.forEach(s=>{r[s[0]]={version:s[0],release_date:\"u\"==s[1]?\"unknown\":s[1],status:e[s[2]],engine:s[3]?f[s[3]]:void 0,engine_version:s[4]}})}}),a},u=(()=>{const s=[];return r.forEach(a=>{var c;s.push({status:{baseline_low_date:a[0],support:(c=a[1],{chrome:c.c,chrome_android:c.ca,edge:c.e,firefox:c.f,firefox_android:c.fa,safari:c.s,safari_ios:c.si})}})}),s})(),i=b(s),n=b(a),g=[\"chrome\",\"chrome_android\",\"edge\",\"firefox\",\"firefox_android\",\"safari\",\"safari_ios\"],o=Object.entries(i).filter(([s])=>g.includes(s)),t=[\"webview_android\",\"samsunginternet_android\",\"opera_android\",\"opera\"],l=[...Object.entries(i).filter(([s])=>t.includes(s)),...Object.entries(n)],w=[\"current\",\"esr\",\"retired\",\"unknown\",\"beta\",\"nightly\"];let d=!1;const p=s=>{!1===s.includeDownstreamBrowsers&&!0===s.includeKaiOS&&(console.log(new Error(\"KaiOS is a downstream browser and can only be included if you include other downstream browsers. Please ensure you use `includeDownstreamBrowsers: true`.\")),process.exit(1))},v=s=>s&&s.startsWith(\"≤\")?s.slice(1):s,_=(s,a)=>{if(s===a)return 0;const[c=0,r=0]=s.split(\".\",2).map(Number),[f=0,e=0]=a.split(\".\",2).map(Number);if(isNaN(c)||isNaN(r))throw new Error(`Invalid version: ${s}`);if(isNaN(f)||isNaN(e))throw new Error(`Invalid version: ${a}`);return c!==f?c>f?1:-1:r!==e?r>e?1:-1:0},h=s=>{let a=[];return s.forEach(s=>{let c=o.find(a=>a[0]===s.browser);if(c){Object.entries(c[1].releases).filter(([,s])=>w.includes(s.status)).sort((s,a)=>_(s[0],a[0])).forEach(([c,r])=>!!w.includes(r.status)&&(1===_(c,s.version)&&(a.push({browser:s.browser,version:c,release_date:r.release_date?r.release_date:\"unknown\"}),!0)))}}),a},m=(s,a=!1)=>{if(s.getFullYear()<2015&&!d&&console.warn(new Error(\"There are no browser versions compatible with Baseline before 2015.  You may receive unexpected results.\")),s.getFullYear()<2002)throw new Error(\"None of the browsers in the core set were released before 2002.  Please use a date after 2002.\");if(s.getFullYear()>(new Date).getFullYear())throw new Error(\"There are no browser versions compatible with Baseline in the future\");const c=(s=>u.filter(a=>a.status.baseline_low_date&&new Date(a.status.baseline_low_date)<=s).map(s=>({baseline_low_date:s.status.baseline_low_date,support:s.status.support})))(s),r=(s=>{let a={};return Object.entries(o).forEach(([,s])=>{a[s[0]]={browser:s[0],version:\"0\",release_date:\"\"}}),s.forEach(s=>{Object.entries(s.support).forEach(c=>{const r=c[0],f=v(c[1]);a[r]&&1===_(f,v(a[r].version))&&(a[r]={browser:r,version:f,release_date:s.baseline_low_date})})}),Object.values(a)})(c);return a?[...r,...h(r)].sort((s,a)=>s.browser<a.browser?-1:s.browser>a.browser?1:_(s.version,a.version)):r},y=(s=[],a=!0,c=!1)=>{const r=a=>{var c;return s&&s.length>0?null===(c=s.filter(s=>s.browser===a).sort((s,a)=>_(s.version,a.version))[0])||void 0===c?void 0:c.version:void 0},f=r(\"chrome\"),e=r(\"firefox\");if(!f&&!e)throw new Error(\"There are no browser versions compatible with Baseline before Chrome and Firefox\");let b=[];return l.filter(([s])=>!(\"kai_os\"===s&&!c)).forEach(([s,c])=>{var r;if(!c.releases)return;let u=Object.entries(c.releases).filter(([,s])=>{const{engine:a,engine_version:c}=s;return!(!a||!c)&&(\"Blink\"===a&&f?_(c,f)>=0:!(\"Gecko\"!==a||!e)&&_(c,e)>=0)}).sort((s,a)=>_(s[0],a[0]));for(let c=0;c<u.length;c++){const f=u[c];if(f){const[c,e]=f;let u={browser:s,version:c,release_date:null!==(r=e.release_date)&&void 0!==r?r:\"unknown\"};if(e.engine&&e.engine_version&&(u.engine=e.engine,u.engine_version=e.engine_version),b.push(u),!a)break}}}),b};function O(s){var a,c,r,f,e;let b=null!=s?s:{},u={listAllCompatibleVersions:null!==(a=b.listAllCompatibleVersions)&&void 0!==a&&a,includeDownstreamBrowsers:null!==(c=b.includeDownstreamBrowsers)&&void 0!==c&&c,widelyAvailableOnDate:null!==(r=b.widelyAvailableOnDate)&&void 0!==r?r:void 0,targetYear:null!==(f=b.targetYear)&&void 0!==f?f:void 0,includeKaiOS:null!==(e=b.includeKaiOS)&&void 0!==e&&e},i=new Date;p(u),u.widelyAvailableOnDate||u.targetYear?u.targetYear&&u.widelyAvailableOnDate?(console.log(new Error(\"You cannot use targetYear and widelyAvailableOnDate at the same time.  Please remove one of these options and try again.\")),process.exit(1)):u.widelyAvailableOnDate?i=new Date(u.widelyAvailableOnDate):u.targetYear&&(i=new Date(`${u.targetYear}-12-31`)):i=new Date,(u.widelyAvailableOnDate||void 0===u.targetYear)&&i.setMonth(i.getMonth()-30);let n=m(i,u.listAllCompatibleVersions);return!1===u.includeDownstreamBrowsers?n:[...n,...y(n,u.listAllCompatibleVersions,u.includeKaiOS)]}exports.getAllVersions=function(s){var a,c,r,f;d=!0;let e=null!=s?s:{},b={outputFormat:null!==(a=e.outputFormat)&&void 0!==a?a:\"array\",includeDownstreamBrowsers:null!==(c=e.includeDownstreamBrowsers)&&void 0!==c&&c,useSupports:null!==(r=e.useSupports)&&void 0!==r&&r,includeKaiOS:null!==(f=e.includeKaiOS)&&void 0!==f&&f};p(b);let u=(new Date).getFullYear()+1;const i=[...Array(u).keys()].slice(2002),n={};i.forEach(s=>{n[s]={},O({targetYear:s}).forEach(a=>{n[s]&&(n[s][a.browser]=a)})});const o=O({}),t={};o.forEach(s=>{t[s.browser]=s});const l=new Date;l.setMonth(l.getMonth()+30);const w=O({widelyAvailableOnDate:l.toISOString().slice(0,10)}),v={};w.forEach(s=>{v[s.browser]=s});const h=O({targetYear:2002,listAllCompatibleVersions:!0}),m=[];if(g.forEach(s=>{var a,c,r,f;let e=h.filter(a=>a.browser==s).sort((s,a)=>_(s.version,a.version)),g=null!==(c=null===(a=t[s])||void 0===a?void 0:a.version)&&void 0!==c?c:\"0\",o=null!==(f=null===(r=v[s])||void 0===r?void 0:r.version)&&void 0!==f?f:\"0\";i.forEach(a=>{var c;if(n[a]){let r=(null!==(c=n[a][s])&&void 0!==c?c:{version:\"0\"}).version,f=e.findIndex(s=>0===_(s.version,r));(a===u-1?e:e.slice(0,f)).forEach(s=>{let c=_(s.version,g)>=0,r=_(s.version,o)>=0,f=Object.assign(Object.assign({},s),{year:a<=2015?\"pre_baseline\":a-1});b.useSupports?(c&&(f.supports=\"widely\"),r&&(f.supports=\"newly\")):f=Object.assign(Object.assign({},f),{wa_compatible:c}),m.push(f)}),e=e.slice(f,e.length)}})}),b.includeDownstreamBrowsers){y(m,!0,b.includeKaiOS).forEach(s=>{let a=m.find(a=>\"chrome\"===a.browser&&a.version===s.engine_version);a&&(b.useSupports?m.push(Object.assign(Object.assign({},s),{year:a.year,supports:a.supports})):m.push(Object.assign(Object.assign({},s),{year:a.year,wa_compatible:a.wa_compatible})))})}if(m.sort((s,a)=>{if(\"pre_baseline\"===s.year&&\"pre_baseline\"!==a.year)return-1;if(\"pre_baseline\"===a.year&&\"pre_baseline\"!==s.year)return 1;if(\"pre_baseline\"!==s.year&&\"pre_baseline\"!==a.year){if(s.year<a.year)return-1;if(s.year>a.year)return 1}return s.browser<a.browser?-1:s.browser>a.browser?1:_(s.version,a.version)}),\"object\"===b.outputFormat){const s={};return m.forEach(a=>{s[a.browser]||(s[a.browser]={});let c={year:a.year,release_date:a.release_date,engine:a.engine,engine_version:a.engine_version};s[a.browser][a.version]=b.useSupports?a.supports?Object.assign(Object.assign({},c),{supports:a.supports}):c:Object.assign(Object.assign({},c),{wa_compatible:a.wa_compatible})}),null!=s?s:{}}if(\"csv\"===b.outputFormat){let s=`\"browser\",\"version\",\"year\",\"${b.useSupports?\"supports\":\"wa_compatible\"}\",\"release_date\",\"engine\",\"engine_version\"`;return m.forEach(a=>{var c,r,f,e;let u={browser:a.browser,version:a.version,year:a.year,release_date:null!==(c=a.release_date)&&void 0!==c?c:\"NULL\",engine:null!==(r=a.engine)&&void 0!==r?r:\"NULL\",engine_version:null!==(f=a.engine_version)&&void 0!==f?f:\"NULL\"};u=b.useSupports?Object.assign(Object.assign({},u),{supports:null!==(e=a.supports)&&void 0!==e?e:\"\"}):Object.assign(Object.assign({},u),{wa_compatible:a.wa_compatible}),s+=`\\n\"${u.browser}\",\"${u.version}\",\"${u.year}\",\"${b.useSupports?u.supports:u.wa_compatible}\",\"${u.release_date}\",\"${u.engine}\",\"${u.engine_version}\"`}),s}return m},exports.getCompatibleVersions=O;\n","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { getCurrentUser } from '@nextcloud/auth'\nimport { getLoggerBuilder } from '@nextcloud/logger'\n\nconst getLogger = user => {\n\tif (user === null) {\n\t\treturn getLoggerBuilder()\n\t\t\t.setApp('core')\n\t\t\t.build()\n\t}\n\treturn getLoggerBuilder()\n\t\t.setApp('core')\n\t\t.setUid(user.uid)\n\t\t.build()\n}\n\nexport default getLogger(getCurrentUser())\n\nexport const unifiedSearchLogger = getLoggerBuilder()\n\t.setApp('unified-search')\n\t.detectUser()\n\t.build()\n","/**\n * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { getBuilder } from '@nextcloud/browser-storage'\n\nexport default getBuilder('core')\n\t.clearOnLogout()\n\t.persist()\n\t.build()\n","/**\n * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { getUserAgentRegex } from 'browserslist-useragent-regexp'\n// eslint-disable-next-line n/no-extraneous-import\nimport browserslist from 'browserslist'\nimport browserslistConfig from '@nextcloud/browserslist-config'\n\n// Generate a regex that matches user agents to detect incompatible browsers\nexport const supportedBrowsersRegExp = getUserAgentRegex({ allowHigherVersions: true, browsers: browserslistConfig })\nexport const supportedBrowsers = browserslist(browserslistConfig)\n","/**\n * SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { generateUrl } from '@nextcloud/router'\nimport { supportedBrowsersRegExp } from '../services/BrowsersListService.js'\nimport browserStorage from '../services/BrowserStorageService.js'\nimport logger from '../logger.js'\n\nexport const browserStorageKey = 'unsupported-browser-ignore'\nconst redirectPath = generateUrl('/unsupported')\n\nconst isBrowserOverridden = browserStorage.getItem(browserStorageKey) === 'true'\n\n/**\n * Test the current browser user agent against our official browserslist config\n * and redirect if unsupported\n */\nexport const testSupportedBrowser = function() {\n\tif (supportedBrowsersRegExp.test(navigator.userAgent)) {\n\t\tlogger.debug('this browser is officially supported ! 🚀')\n\t\treturn\n\t}\n\n\t// If incompatible BUT ignored, let's keep going\n\tif (isBrowserOverridden) {\n\t\tlogger.debug('this browser is NOT supported but has been manually overridden ! ⚠️')\n\t\treturn\n\t}\n\n\t// If incompatible, NOT overridden AND NOT already on the warning page,\n\t// redirect to the unsupported warning page\n\tif (window.location.pathname.indexOf(redirectPath) === -1) {\n\t\tconst redirectUrl = window.location.href.replace(window.location.origin, '')\n\t\tconst base64Param = Buffer.from(redirectUrl).toString('base64')\n\t\thistory.pushState(null, null, `${redirectPath}?redirect_url=${base64Param}`)\n\t\twindow.location.reload()\n\t}\n}\n","const R = (n, e) => d(n, \"\", e), g = (n) => \"/remote.php/\" + n, U = (n, e) => {\n  var o;\n  return ((o = e == null ? void 0 : e.baseURL) != null ? o : w()) + g(n);\n}, v = (n, e, o) => {\n  var c;\n  const i = Object.assign({\n    ocsVersion: 2\n  }, o || {}).ocsVersion === 1 ? 1 : 2;\n  return ((c = o == null ? void 0 : o.baseURL) != null ? c : w()) + \"/ocs/v\" + i + \".php\" + u(n, e, o);\n}, u = (n, e, o) => {\n  const c = Object.assign({\n    escape: !0\n  }, o || {}), r = function(i, s) {\n    return s = s || {}, i.replace(\n      /{([^{}]*)}/g,\n      function(l, t) {\n        const a = s[t];\n        return c.escape ? encodeURIComponent(typeof a == \"string\" || typeof a == \"number\" ? a.toString() : l) : typeof a == \"string\" || typeof a == \"number\" ? a.toString() : l;\n      }\n    );\n  };\n  return n.charAt(0) !== \"/\" && (n = \"/\" + n), r(n, e || {});\n}, _ = (n, e, o) => {\n  var c, r, i;\n  const s = Object.assign({\n    noRewrite: !1\n  }, o || {}), l = (c = o == null ? void 0 : o.baseURL) != null ? c : f();\n  return ((i = (r = window == null ? void 0 : window.OC) == null ? void 0 : r.config) == null ? void 0 : i.modRewriteWorking) === !0 && !s.noRewrite ? l + u(n, e, o) : l + \"/index.php\" + u(n, e, o);\n}, h = (n, e) => e.includes(\".\") ? d(n, \"img\", e) : d(n, \"img\", \"\".concat(e, \".svg\")), d = (n, e, o) => {\n  var c, r, i;\n  const s = (i = (r = (c = window == null ? void 0 : window.OC) == null ? void 0 : c.coreApps) == null ? void 0 : r.includes(n)) != null ? i : !1, l = o.slice(-3) === \"php\";\n  let t = f();\n  return l && !s ? (t += \"/index.php/apps/\".concat(n), e && (t += \"/\".concat(encodeURI(e))), o !== \"index.php\" && (t += \"/\".concat(o))) : !l && !s ? (t = b(n), e && (t += \"/\".concat(e, \"/\")), t.at(-1) !== \"/\" && (t += \"/\"), t += o) : ((n === \"settings\" || n === \"core\" || n === \"search\") && e === \"ajax\" && (t += \"/index.php\"), n && (t += \"/\".concat(n)), e && (t += \"/\".concat(e)), t += \"/\".concat(o)), t;\n}, w = () => window.location.protocol + \"//\" + window.location.host + f();\nfunction f() {\n  let n = window._oc_webroot;\n  if (typeof n > \"u\") {\n    n = location.pathname;\n    const e = n.indexOf(\"/index.php/\");\n    if (e !== -1)\n      n = n.slice(0, e);\n    else {\n      const o = n.indexOf(\"/\", 1);\n      n = n.slice(0, o > 0 ? o : void 0);\n    }\n  }\n  return n;\n}\nfunction b(n) {\n  var e, o;\n  return (o = ((e = window._oc_appswebroots) != null ? e : {})[n]) != null ? o : \"\";\n}\nexport {\n  d as generateFilePath,\n  v as generateOcsUrl,\n  U as generateRemoteUrl,\n  _ as generateUrl,\n  b as getAppRootUrl,\n  w as getBaseUrl,\n  f as getRootUrl,\n  h as imagePath,\n  R as linkTo\n};\n","import browserslist from 'browserslist';\nimport RegexpTree from 'regexp-tree';\nimport { regexes } from 'ua-regexes-lite';\n\n/**\n * Array of numbers to array of first and last elements.\n * @param numbers - Array of numbers.\n * @returns Number or two numbers.\n */ function numbersToRanges(numbers) {\n    if (typeof numbers === \"number\") {\n        return numbers;\n    }\n    if (numbers.length === 1) {\n        return numbers[0];\n    }\n    return [\n        numbers[0],\n        numbers[numbers.length - 1]\n    ];\n}\n\nvar SemverPart;\n(function(SemverPart) {\n    SemverPart[SemverPart[\"Major\"] = 0] = \"Major\";\n    SemverPart[SemverPart[\"Minor\"] = 1] = \"Minor\";\n    SemverPart[SemverPart[\"Patch\"] = 2] = \"Patch\";\n})(SemverPart || (SemverPart = {}));\n\n/**\n * Get semver from string or array.\n * @param version - Target to convert.\n * @returns Array with semver parts.\n */ function semverify(version) {\n    const versionParts = Array.isArray(version) ? version : version.toString().split(\".\");\n    if (versionParts[0] === \"all\") {\n        return [\n            Infinity,\n            0,\n            0\n        ];\n    }\n    let versionPart = null;\n    let semverPart = null;\n    const semver = [\n        0,\n        0,\n        0\n    ];\n    for(let i = 0; i < 3; i++){\n        versionPart = versionParts[i];\n        if (typeof versionPart === \"undefined\") {\n            continue;\n        }\n        semverPart = typeof versionPart === \"number\" ? versionPart : parseInt(versionPart, 10);\n        if (isNaN(semverPart)) {\n            return null;\n        }\n        semver[i] = semverPart;\n    }\n    return semver;\n}\n/**\n * Get semver range.\n * @param from\n * @param to\n * @returns Semver range.\n */ function rangeSemver(from, to) {\n    let partIndex = 0;\n    const range = [];\n    for(let i = 2; i >= 0; i--){\n        if (from[i] !== to[i]) {\n            partIndex = i;\n            break;\n        }\n    }\n    for(let i1 = from[partIndex], max = to[partIndex]; i1 <= max; i1++){\n        range.push(from.map((v, j)=>j === partIndex ? i1 : v));\n    }\n    return range;\n}\n/**\n * Compare semvers.\n * @param a - Semver to compare.\n * @param b - Semver to compare with.\n * @param options - Compare options.\n * @returns Equals or not.\n */ function compareSemvers(a, b, options) {\n    const [major, minor, patch] = a;\n    const [majorBase, minorBase, patchBase] = b;\n    const { ignoreMinor , ignorePatch , allowHigherVersions  } = options;\n    if (majorBase === Infinity) {\n        return true;\n    }\n    const compareMinor = !ignoreMinor;\n    const comparePatch = compareMinor && !ignorePatch;\n    if (allowHigherVersions) {\n        if (comparePatch && patch < patchBase || compareMinor && minor < minorBase) {\n            return false;\n        }\n        return major >= majorBase;\n    }\n    if (comparePatch && patch !== patchBase || compareMinor && minor !== minorBase) {\n        return false;\n    }\n    return major === majorBase;\n}\n/**\n * Get required semver parts count.\n * @param version - Semver parts or ranges.\n * @param options - Semver compare options.\n * @returns Required semver parts count.\n */ function getRequiredSemverPartsCount(version, options) {\n    const { ignoreMinor , ignorePatch , allowZeroSubversions  } = options;\n    let shouldRepeatCount = ignoreMinor ? 1 : ignorePatch ? 2 : 3;\n    if (allowZeroSubversions) {\n        for(let i = shouldRepeatCount - 1; i > 0; i--){\n            if (version[i] !== 0 || shouldRepeatCount === 1) {\n                break;\n            }\n            shouldRepeatCount--;\n        }\n    }\n    return shouldRepeatCount;\n}\n\n/**\n * Browsers strings to info objects.\n * @param browsersList - Browsers strings with family and version.\n * @returns Browser info objects.\n */ function parseBrowsersList(browsersList) {\n    return browsersList.reduce((browsers, browser)=>{\n        const [family, versionString, versionStringTo] = browser.split(/ |-/);\n        const version = semverify(versionString);\n        const versions = !version ? [] : versionStringTo ? rangeSemver(version, semverify(versionStringTo)) : [\n            version\n        ];\n        return versions.reduce((browsers, semver)=>{\n            if (semver) {\n                browsers.push({\n                    family,\n                    version: semver\n                });\n            }\n            return browsers;\n        }, browsers);\n    }, []);\n}\n/**\n * Request browsers list.\n * @param options - Options to get browsers list.\n * @returns Browser info objects.\n */ function getBrowsersList(options = {}) {\n    const { browsers , ...browserslistOptions } = options;\n    const browsersList = browserslist(browsers, browserslistOptions);\n    const parsedBrowsers = parseBrowsersList(browsersList);\n    return parsedBrowsers;\n}\n\n/**\n * Compare two arrays.\n * @param a - Array to compare.\n * @param b - Array to compare.\n * @param from - Index to start compare from.\n * @returns Equals or not.\n */ function compareArrays(a, b, from = 0) {\n    const len = a.length;\n    for(let i = from; i < len; i++){\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Clone simple object.\n * @param value\n * @returns Object clone.\n */ function clone(value) {\n    if (value === null || typeof value !== \"object\") {\n        return value;\n    }\n    /* eslint-disable */ const copy = Array.isArray(value) ? [] : {};\n    let i;\n    for(i in value){\n        copy[i] = clone(value[i]);\n    }\n    /* eslint-enable */ return copy;\n}\n/**\n * Concat arrays.\n * @param items\n * @returns Concatinated arrays.\n */ function concat(items) {\n    return [].concat(...items);\n}\n\n/**\n * Merge browser info object to map with versions.\n * @param browsers - Browser info object to merge.\n * @returns Merged browsers map.\n */ function mergeBrowserVersions(browsers) {\n    const merge = new Map();\n    browsers.forEach(({ family , version  })=>{\n        const versions = merge.get(family);\n        if (versions) {\n            const strVersion = version.join(\".\");\n            if (versions.every((_)=>_.join(\".\") !== strVersion)) {\n                versions.push(version);\n            }\n            return;\n        }\n        merge.set(family, [\n            version\n        ]);\n    });\n    merge.forEach((versions)=>{\n        versions.sort((a, b)=>{\n            for(const i in a){\n                if (a[i] !== b[i]) {\n                    return a[i] - b[i];\n                }\n            }\n            return 0;\n        });\n    });\n    return merge;\n}\n/**\n * Versions to ranged versions.\n * @param versions - Semver versions list.\n * @returns Ranged versions list.\n */ function versionsListToRanges(versions) {\n    if (versions.length < 2) {\n        return versions;\n    }\n    const max = versions.length + 1;\n    const ranges = [];\n    let prev = null;\n    let current = versions[0];\n    let major = [\n        current[SemverPart.Major]\n    ];\n    let minor = [\n        current[SemverPart.Minor]\n    ];\n    let patch = [\n        current[SemverPart.Patch]\n    ];\n    let part = null;\n    for(let i = 1; i < max; i++){\n        prev = versions[i - 1];\n        current = versions[i] || [];\n        for(let p = SemverPart.Major; p <= SemverPart.Patch; p++){\n            if ((p === part || part === null) && prev[p] + 1 === current[p] && compareArrays(prev, current, p + 1)) {\n                part = p;\n                if (p === SemverPart.Major) {\n                    major.push(current[SemverPart.Major]);\n                } else {\n                    major = current[SemverPart.Major];\n                }\n                if (p === SemverPart.Minor) {\n                    minor.push(current[SemverPart.Minor]);\n                } else {\n                    minor = current[SemverPart.Minor];\n                }\n                if (p === SemverPart.Patch) {\n                    patch.push(current[SemverPart.Patch]);\n                } else {\n                    patch = current[SemverPart.Patch];\n                }\n                break;\n            }\n            if (part === p || prev[p] !== current[p]) {\n                ranges.push([\n                    numbersToRanges(major),\n                    numbersToRanges(minor),\n                    numbersToRanges(patch)\n                ]);\n                major = [\n                    current[SemverPart.Major]\n                ];\n                minor = [\n                    current[SemverPart.Minor]\n                ];\n                patch = [\n                    current[SemverPart.Patch]\n                ];\n                part = null;\n                break;\n            }\n        }\n    }\n    return ranges;\n}\n\nfunction AstRegExpNode(body) {\n    return {\n        type: \"RegExp\",\n        body,\n        flags: \"\"\n    };\n}\nfunction AlternativeNode(...expressions) {\n    const exps = concat(expressions).filter(Boolean);\n    if (exps.length === 1) {\n        return exps[0];\n    }\n    return {\n        type: \"Alternative\",\n        expressions: exps\n    };\n}\nfunction SimpleCharNode(value) {\n    return {\n        type: \"Char\",\n        kind: \"simple\",\n        value: String(value),\n        codePoint: NaN\n    };\n}\nfunction MetaCharNode(value) {\n    return {\n        type: \"Char\",\n        kind: \"meta\",\n        value,\n        codePoint: NaN\n    };\n}\nfunction ClassRangeNode(from, to) {\n    return {\n        type: \"ClassRange\",\n        from,\n        to\n    };\n}\nfunction CharacterClassNode(...expressions) {\n    return {\n        type: \"CharacterClass\",\n        expressions: concat(expressions).filter(Boolean)\n    };\n}\nfunction SimpleQuantifierNode(kind) {\n    return {\n        type: \"Quantifier\",\n        kind,\n        greedy: true\n    };\n}\nfunction RangeQuantifierNode(from, to) {\n    return {\n        type: \"Quantifier\",\n        kind: \"Range\",\n        from,\n        to,\n        greedy: true\n    };\n}\nfunction CapturingGroupNode(expression) {\n    return {\n        type: \"Group\",\n        capturing: true,\n        expression,\n        number: null\n    };\n}\nfunction RepetitionNode(expression, quantifier) {\n    return {\n        type: \"Repetition\",\n        expression,\n        quantifier\n    };\n}\nfunction DisjunctionNode(...expressions) {\n    const exprs = concat(expressions).filter(Boolean);\n    if (exprs.length === 1) {\n        return exprs[0];\n    }\n    const disjunction = {\n        type: \"Disjunction\",\n        left: null,\n        right: exprs.pop()\n    };\n    exprs.reduceRight((disjunction, expr, i)=>{\n        if (i === 0) {\n            disjunction.left = expr;\n            return disjunction;\n        }\n        disjunction.left = {\n            type: \"Disjunction\",\n            left: null,\n            right: expr\n        };\n        return disjunction.left;\n    }, disjunction);\n    return disjunction;\n}\nfunction DisjunctionCapturingGroupNode(...expressions) {\n    const expr = DisjunctionNode(...expressions);\n    if (expr.type === \"Disjunction\") {\n        return CapturingGroupNode(expr);\n    }\n    return expr;\n}\nfunction DigitPatternNode() {\n    return MetaCharNode(\"\\\\d\");\n}\nfunction NumberPatternNode(quantifier = SimpleQuantifierNode(\"+\")) {\n    const numberPattern = RepetitionNode(DigitPatternNode(), quantifier);\n    return numberPattern;\n}\nfunction NumberCharsNode(value) {\n    return AlternativeNode(Array.from(String(value), SimpleCharNode));\n}\n\n/**\n * Check node whether is number pattern.\n * @param node - AST node to check.\n * @returns Is number pattern or not.\n */ function isNumberPatternNode(node) {\n    if (node.type === \"Group\" && node.expression.type === \"Repetition\") {\n        const { expression , quantifier  } = node.expression;\n        return expression.type === \"Char\" && expression.value === \"\\\\d\" && quantifier.kind === \"+\" && quantifier.greedy;\n    }\n    return false;\n}\n/**\n * Check node whether is char node.\n * @param node - AST node to check.\n * @param value - Value to compare.\n * @returns Is char node or not.\n */ function isCharNode(node, value) {\n    if (node && node.type === \"Char\") {\n        return typeof value === \"undefined\" || value instanceof RegExp && value.test(node.value) || String(value) === node.value;\n    }\n    return false;\n}\n/**\n * Check node whether is digit range.\n * @param node - AST node to check.\n * @returns Is digit range or not.\n */ function isDigitRangeNode(node) {\n    if (node.type === \"CharacterClass\" && node.expressions.length === 1) {\n        const [expression] = node.expressions;\n        return expression.type === \"ClassRange\" && isCharNode(expression.from, /\\d/) && isCharNode(expression.to, /\\d/);\n    }\n    return false;\n}\n/**\n * Check node whether is expression.\n * @param node - AST node to check.\n * @returns Is expression node or not.\n */ function isExpressionNode(node) {\n    return node.type !== \"RegExp\" && node.type !== \"ClassRange\" && node.type !== \"Quantifier\";\n}\nfunction parseRegex(regex) {\n    return typeof regex === \"string\" ? RegexpTree.parse(regex.replace(/^([^/])/, \"/$1\").replace(/([^/])$/, \"$1/\")) : regex instanceof RegExp ? RegexpTree.parse(regex) : regex;\n}\n/**\n * Get regex from string or AST.\n * @param src - String or AST.\n * @returns RegExp.\n */ function toRegex(src) {\n    return typeof src === \"string\" ? new RegExp(src) : new RegExp(RegexpTree.generate(src.body), src.flags);\n}\n/**\n * Get string from regex or AST.\n * @param src - RegExp or AST.\n * @returns String.\n */ function toString(src) {\n    return typeof src === \"string\" ? src : src instanceof RegExp ? src.toString() : RegexpTree.generate(src);\n}\n\nconst classes = [\n    \"RegExp\",\n    \"Disjunction\",\n    \"Alternative\",\n    \"Assertion\",\n    \"Char\",\n    \"CharacterClass\",\n    \"ClassRange\",\n    \"Backreference\",\n    \"Group\",\n    \"Repetition\",\n    \"Quantifier\"\n];\n/**\n * Create traversal visitors.\n * @param visitors\n * @returns Traversal handlers.\n */ function visitors(visitors) {\n    const { every  } = visitors;\n    if (!every) {\n        return visitors;\n    }\n    if (typeof every === \"function\") {\n        return {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            \"*\": every,\n            ...visitors\n        };\n    }\n    return classes.reduce((newVisitors, className)=>{\n        const visitor = visitors[className];\n        const visitorPre = visitor ? \"pre\" in visitor ? visitor.pre : visitor : null;\n        const visitorPost = visitor ? \"post\" in visitor ? visitor.post : null : null;\n        newVisitors[className] = {\n            pre (nodePath) {\n                if (every.pre(nodePath) !== false && visitorPre) {\n                    return visitorPre(nodePath);\n                }\n                return true;\n            },\n            post (nodePath) {\n                if (every.post(nodePath) !== false && visitorPost) {\n                    return visitorPost(nodePath);\n                }\n                return true;\n            }\n        };\n        return newVisitors;\n    }, {});\n}\n\nfunction optimizeRegex(regex) {\n    // Optimization requires filled codePoints\n    const regexAst = RegexpTree.optimize(parseRegex(toString(regex))).getAST();\n    RegexpTree.traverse(regexAst, {\n        Group (nodePath) {\n            const { parent , node  } = nodePath;\n            const { expression  } = node;\n            node.capturing = true;\n            if (parent.type === \"RegExp\" || expression.type !== \"Disjunction\" && parent.type !== \"Repetition\" || expression.type === \"Disjunction\" && parent.type === \"Disjunction\") {\n                nodePath.replace(nodePath.node.expression);\n            }\n        }\n    });\n    return regexAst;\n}\n/**\n * Merge digits patterns if possible.\n * @param a\n * @param b\n * @returns Merged node.\n */ function mergeDigits(a, b) {\n    if (isCharNode(a) && isCharNode(b) && a.value === b.value) {\n        return b;\n    }\n    if (isCharNode(a, /\\d/) && isDigitRangeNode(b) && Number(b.expressions[0].from.value) - Number(a.value) === 1) {\n        return {\n            ...b,\n            expressions: [\n                {\n                    ...b.expressions[0],\n                    from: a\n                }\n            ]\n        };\n    }\n    if (isDigitRangeNode(a) && isCharNode(b, /\\d/) && Number(b.value) - Number(a.expressions[0].to.value) === 1) {\n        return {\n            ...a,\n            expressions: [\n                {\n                    ...a.expressions[0],\n                    to: b\n                }\n            ]\n        };\n    }\n    return null;\n}\n/**\n * Optimize segment number patterns.\n * @param patterns\n * @returns Optimized segment number patterns.\n */ function optimizeSegmentNumberPatterns(patterns) {\n    return patterns.reduce((patterns, node)=>{\n        const prevNode = patterns[patterns.length - 1];\n        if (prevNode && node.type === \"Alternative\" && prevNode.type === \"Alternative\" && node.expressions.length === prevNode.expressions.length) {\n            const merged = prevNode.expressions.reduceRight((exps, exp, i)=>{\n                if (!exps) {\n                    return exps;\n                }\n                const merged = mergeDigits(exp, node.expressions[i]);\n                if (merged) {\n                    exps.unshift(merged);\n                } else {\n                    return null;\n                }\n                return exps;\n            }, []);\n            if (merged) {\n                node.expressions = merged;\n                patterns.pop();\n            }\n        }\n        patterns.push(node);\n        return patterns;\n    }, []);\n}\n\n/**\n * Transform number to digits array.\n * @param num - Target number.\n * @returns Digits array.\n */ function numberToDigits(num) {\n    return Array.from(num.toString(), Number);\n}\n\n/**\n * Get digit pattern.\n * @param digit - Ray start.\n * @param includes - Include start digit or use next.\n * @returns Digit pattern.\n */ function rayRangeDigitPattern(digit, includes) {\n    const rangeStart = digit + Number(!includes);\n    if (rangeStart === 0) {\n        return DigitPatternNode();\n    }\n    if (rangeStart === 9) {\n        return SimpleCharNode(\"9\");\n    }\n    if (rangeStart > 9) {\n        return null;\n    }\n    return CharacterClassNode(ClassRangeNode(SimpleCharNode(rangeStart), SimpleCharNode(\"9\")));\n}\n/**\n * Create numeric ray pattern.\n * @param from - Start from this number.\n * @returns Numeric ray pattern parts.\n */ function rayToNumberPatterns(from) {\n    if (from === 0) {\n        return [\n            NumberPatternNode()\n        ];\n    }\n    const digits = numberToDigits(from);\n    const digitsCount = digits.length;\n    const other = NumberPatternNode(RangeQuantifierNode(digitsCount + 1));\n    const zeros = digitsCount - 1;\n    if (from / Math.pow(10, zeros) === digits[0]) {\n        return [\n            AlternativeNode(rayRangeDigitPattern(digits[0], true), Array.from({\n                length: zeros\n            }, DigitPatternNode)),\n            other\n        ];\n    }\n    const raysNumberPatterns = digits.reduce((topNodes, _, i)=>{\n        const ri = digitsCount - i - 1;\n        const d = i === 0;\n        let prev = SimpleCharNode(\"\");\n        const nodes = digits.reduce((nodes, digit, j)=>{\n            if (j < ri) {\n                nodes.push(SimpleCharNode(digit));\n            } else if (prev) {\n                if (j > ri) {\n                    nodes.push(DigitPatternNode());\n                } else {\n                    prev = rayRangeDigitPattern(digit, d);\n                    if (prev) {\n                        nodes.push(prev);\n                    } else {\n                        return [];\n                    }\n                }\n            }\n            return nodes;\n        }, []);\n        if (nodes.length) {\n            topNodes.push(nodes);\n        }\n        return topNodes;\n    }, []);\n    const numberPatterns = raysNumberPatterns.map((_)=>AlternativeNode(_));\n    numberPatterns.push(other);\n    return numberPatterns;\n}\n\n/**\n * Get digit pattern.\n * @param from - Segment start.\n * @param to - Segment end.\n * @param zeros - Zeros to add as prefix.\n * @returns Digit pattern.\n */ function segmentRangeNumberPattern(from, to, zeros) {\n    if (to < from) {\n        return null;\n    }\n    const fromNode = SimpleCharNode(from);\n    const toNode = SimpleCharNode(to);\n    const zerosPrefix = typeof zeros === \"number\" && zeros > 0 ? Array.from({\n        length: zeros\n    }, ()=>SimpleCharNode(0)) : [];\n    const addPrefix = zerosPrefix.length ? (node)=>AlternativeNode(zerosPrefix, node) : (node)=>node;\n    if (from === to) {\n        return addPrefix(fromNode);\n    }\n    if (from === 0 && to === 9) {\n        return addPrefix(DigitPatternNode());\n    }\n    if (to - from === 1) {\n        return addPrefix(CharacterClassNode(fromNode, toNode));\n    }\n    return addPrefix(CharacterClassNode(ClassRangeNode(fromNode, toNode)));\n}\n/**\n * Split segment range to decade ranges.\n * @param from - Segment start.\n * @param to - Segment end.\n * @returns Ranges.\n */ function splitToDecadeRanges(from, to) {\n    const ranges = [];\n    let num = from;\n    let decade = 1;\n    do {\n        decade *= 10;\n        if (num < decade) {\n            ranges.push([\n                num,\n                Math.min(decade - 1, to)\n            ]);\n            num = decade;\n        }\n    }while (decade <= to);\n    return ranges;\n}\n/**\n * Get common and diffs of two numbers (arrays of digits).\n * @param a - Digits.\n * @param b - Other digits.\n * @returns Common part and diffs.\n */ function splitCommonDiff(a, b) {\n    const len = a.length;\n    if (len !== b.length || a[0] !== b[0]) {\n        return null;\n    }\n    let common = a[0].toString();\n    let currA = 0;\n    let currB = 0;\n    let diffA = \"\";\n    let diffB = \"\";\n    for(let i = 1; i < len; i++){\n        currA = a[i];\n        currB = b[i];\n        if (currA === currB && diffA === \"\" && diffB === \"\") {\n            common += currA;\n        } else {\n            diffA += currA;\n            diffB += currB;\n        }\n    }\n    return [\n        common,\n        parseInt(diffA, 10),\n        parseInt(diffB, 10)\n    ];\n}\n/**\n * Get segment patterns.\n * @param from - Segment start.\n * @param to - Segment end.\n * @param digitsInNumber - How many digits should be en number. Will be filled by zeros.\n * @returns Segment patterns.\n */ function segmentToNumberPatterns(from, to, digitsInNumber = 0) {\n    const fromDigits = numberToDigits(from);\n    const digitsCount = fromDigits.length;\n    if (from < 10 && to < 10 || from === to) {\n        const zeros = digitsInNumber - digitsCount;\n        return [\n            segmentRangeNumberPattern(from, to, zeros)\n        ];\n    }\n    const toDigits = numberToDigits(to);\n    if (digitsCount !== toDigits.length) {\n        const decadeRanges = splitToDecadeRanges(from, to);\n        const parts = concat(decadeRanges.map(([from, to])=>segmentToNumberPatterns(from, to, digitsInNumber)));\n        return parts;\n    }\n    const commonStart = splitCommonDiff(fromDigits, toDigits);\n    if (Array.isArray(commonStart)) {\n        const [common, from1, to1] = commonStart;\n        const digitsInNumber1 = digitsCount - common.length;\n        const diffParts = segmentToNumberPatterns(from1, to1, digitsInNumber1);\n        return [\n            AlternativeNode(Array.from(common, SimpleCharNode), DisjunctionCapturingGroupNode(diffParts))\n        ];\n    }\n    const range = Array.from({\n        length: digitsCount - 1\n    });\n    const middleSegment = segmentRangeNumberPattern(fromDigits[0] + 1, toDigits[0] - 1);\n    const parts1 = [\n        ...range.map((_, i)=>{\n            const ri = digitsCount - i - 1;\n            const d = Number(i > 0);\n            return AlternativeNode(fromDigits.map((digit, j)=>{\n                if (j < ri) {\n                    return SimpleCharNode(digit);\n                }\n                if (j > ri) {\n                    return segmentRangeNumberPattern(0, 9);\n                }\n                return segmentRangeNumberPattern(digit + d, 9);\n            }));\n        }),\n        // but output more readable\n        ...middleSegment ? [\n            AlternativeNode(middleSegment, Array.from({\n                length: digitsCount - 1\n            }, ()=>DigitPatternNode()))\n        ] : [],\n        ...range.map((_, i)=>{\n            const ri = digitsCount - i - 1;\n            const d = Number(i > 0);\n            return AlternativeNode(toDigits.map((digit, j)=>{\n                if (j < ri) {\n                    return SimpleCharNode(digit);\n                }\n                if (j > ri) {\n                    return segmentRangeNumberPattern(0, 9);\n                }\n                return segmentRangeNumberPattern(0, digit - d);\n            }));\n        })\n    ];\n    return optimizeSegmentNumberPatterns(parts1);\n}\n\n/**\n * Get regex for given numeric range.\n * @param from - Range start.\n * @param to - Range end.\n * @returns Range pattern.\n */ function rangeToRegex(from, to = Infinity) {\n    if (from === Infinity) {\n        return NumberPatternNode();\n    }\n    const numberPatterns = to === Infinity ? rayToNumberPatterns(from) : segmentToNumberPatterns(from, to);\n    const regex = DisjunctionCapturingGroupNode(numberPatterns);\n    return regex;\n}\n\n/**\n * Find matched versions.\n * @param minVersion - Semver version.\n * @param maxVersion - Semver version.\n * @param bases - Base semver versions.\n * @param options - Semver compare options.\n * @returns Matched versions.\n */ function findMatchedVersions(minVersion, maxVersion, bases, options) {\n    const compareOptions = {\n        ...options,\n        allowHigherVersions: true\n    };\n    const minComparator = (ver)=>compareSemvers(ver, minVersion, compareOptions);\n    const maxComparator = (ver)=>compareSemvers(maxVersion, ver, compareOptions);\n    const comparator = minVersion && maxVersion ? (ver)=>minComparator(ver) && maxComparator(ver) : minVersion ? minComparator : maxVersion ? maxComparator : ()=>true;\n    return bases.filter(comparator);\n}\n\n/**\n * Get useragent regexes for given browsers.\n * @param browsers - Browsers.\n * @param options - Semver compare options.\n * @param targetRegexes - Override default regexes.\n * @returns User agent regexes.\n */ function getRegexesForBrowsers(browsers, options, targetRegexes = regexes) {\n    const result = [];\n    let prevFamily = \"\";\n    let prevRegexIsGlobal = false;\n    targetRegexes.forEach((regex)=>{\n        const requestVersions = browsers.get(regex.family);\n        if (!requestVersions) {\n            return;\n        }\n        let { version , minVersion , maxVersion  } = regex;\n        if (version) {\n            minVersion = version;\n            maxVersion = version;\n        }\n        let matchedVersions = findMatchedVersions(minVersion, maxVersion, requestVersions, options);\n        if (matchedVersions.length) {\n            // regex contains global patch\n            if (prevFamily === regex.family && prevRegexIsGlobal) {\n                version = undefined;\n                minVersion = undefined;\n                maxVersion = undefined;\n                matchedVersions = requestVersions;\n                result.pop();\n            }\n            result.push({\n                ...regex,\n                version,\n                minVersion,\n                maxVersion,\n                requestVersions,\n                matchedVersions\n            });\n        }\n        prevRegexIsGlobal = !version && !minVersion && !maxVersion;\n        prevFamily = regex.family;\n    });\n    return result;\n}\n\n/**\n * Compile regexes.\n * @param regexes - Objects with info about compiled regexes.\n * @returns Objects with info about compiled regexes.\n */ function compileRegexes(regexes) {\n    return regexes.map(({ regexAst , ...regex })=>{\n        const optimizedRegexAst = optimizeRegex(regexAst);\n        return {\n            ...regex,\n            regexAst: optimizedRegexAst,\n            regex: toRegex(optimizedRegexAst)\n        };\n    });\n}\n/**\n * Compile regex.\n * @param regexes - Objects with info about compiled regexes.\n * @returns Compiled common regex.\n */ function compileRegex(regexes) {\n    const partsRegexes = regexes.map(({ regexAst  })=>CapturingGroupNode(regexAst.body));\n    const regexAst = optimizeRegex(AstRegExpNode(DisjunctionCapturingGroupNode(partsRegexes)));\n    return toRegex(regexAst);\n}\n\n/**\n * Get number patterns count from the regex.\n * @param regex - Target regex.\n * @returns Number patterns count.\n */ function getNumberPatternsCount(regex) {\n    const regexAst = parseRegex(regex);\n    let count = 0;\n    RegexpTree.traverse(regexAst, {\n        Group (nodePath) {\n            if (isNumberPatternNode(nodePath.node)) {\n                count++;\n            }\n        }\n    });\n    return count;\n}\nfunction replaceNumberPatterns(regex, numbers, numberPatternsCount) {\n    let regexAst = parseRegex(regex);\n    const numbersToReplace = typeof numberPatternsCount === \"number\" && numberPatternsCount < numbers.length ? numbers.slice(0, numberPatternsCount) : numbers.slice();\n    RegexpTree.traverse(regexAst, visitors({\n        every () {\n            return Boolean(numbersToReplace.length);\n        },\n        Group (nodePath) {\n            if (isNumberPatternNode(nodePath.node) && numbersToReplace.length) {\n                if (regexAst === nodePath.node) {\n                    regexAst = numbersToReplace.shift();\n                } else {\n                    nodePath.replace(numbersToReplace.shift());\n                }\n                return false;\n            }\n            return true;\n        }\n    }));\n    return regexAst;\n}\n/**\n * Get from regex part with number patterns.\n * @param regex - Target regex.\n * @param numberPatternsCount - Number patterns to extract.\n * @returns Regex part with number patterns.\n */ function getNumberPatternsPart(regex, numberPatternsCount) {\n    const regexAst = parseRegex(regex);\n    const maxNumbersCount = Math.min(getNumberPatternsCount(regexAst), numberPatternsCount || Infinity);\n    const expressions = [];\n    let numbersCounter = 0;\n    let containsNumberPattern = false;\n    RegexpTree.traverse(regexAst, visitors({\n        every: {\n            pre ({ node , parent  }) {\n                if (node === regexAst) {\n                    return true;\n                }\n                if (!isExpressionNode(node)) {\n                    return false;\n                }\n                if (parent === regexAst) {\n                    containsNumberPattern = false;\n                }\n                return numbersCounter < maxNumbersCount;\n            },\n            post ({ node , parent  }) {\n                if (node !== regexAst && parent === regexAst && isExpressionNode(node) && (containsNumberPattern || numbersCounter > 0 && numbersCounter < maxNumbersCount)) {\n                    expressions.push(node);\n                }\n            }\n        },\n        Group (nodePath) {\n            if (isNumberPatternNode(nodePath.node) && numbersCounter < maxNumbersCount) {\n                containsNumberPattern = true;\n                numbersCounter++;\n                return false;\n            }\n            return true;\n        }\n    }));\n    if (expressions.length === 1 && !isNumberPatternNode(expressions[0])) {\n        return getNumberPatternsPart(expressions[0], maxNumbersCount);\n    }\n    return expressions;\n}\n/**\n * Ranged semver to regex patterns.\n * @param rangedVersion - Ranged semver.\n * @param options - Semver compare options.\n * @returns Array of regex pattern.\n */ function rangedSemverToRegex(rangedVersion, options) {\n    const { ignoreMinor , ignorePatch , allowHigherVersions  } = options;\n    const ignoreIndex = rangedVersion[0] === Infinity ? 0 : ignoreMinor ? 1 : ignorePatch ? 2 : 3;\n    if (allowHigherVersions) {\n        const numberPatterns = [];\n        let prevWasZero = true;\n        let d = 0;\n        let start = 0;\n        const createMapper = (i)=>(range, j)=>{\n                if (j >= ignoreIndex) {\n                    return NumberPatternNode();\n                }\n                start = Array.isArray(range) ? range[0] : range;\n                if (j < i) {\n                    return NumberCharsNode(start);\n                }\n                if (j > i) {\n                    return NumberPatternNode();\n                }\n                return rangeToRegex(start + d);\n            };\n        for(let i = ignoreIndex - 1; i >= 0; i--){\n            if (prevWasZero && !rangedVersion[i]) {\n                continue;\n            }\n            prevWasZero = false;\n            numberPatterns.push(rangedVersion.map(createMapper(i)));\n            d = 1;\n        }\n        return numberPatterns;\n    }\n    const numberPatterns1 = rangedVersion.map((range, i)=>{\n        if (i >= ignoreIndex) {\n            return NumberPatternNode();\n        }\n        if (Array.isArray(range)) {\n            return rangeToRegex(range[0], range[1]);\n        }\n        return NumberCharsNode(range);\n    });\n    return [\n        numberPatterns1\n    ];\n}\n\nfunction applyVersionsToRegex(regex, versions, options) {\n    const { allowHigherVersions  } = options;\n    const regexAst = parseRegex(regex);\n    const finalVersions = allowHigherVersions && versions.length ? [\n        versions[0]\n    ] : versions;\n    const maxRequiredPartsCount = finalVersions.reduce((maxRequiredPartsCount, version)=>Math.max(maxRequiredPartsCount, getRequiredSemverPartsCount(version, options)), 1);\n    const numberPatternsPart = getNumberPatternsPart(regexAst, maxRequiredPartsCount);\n    const versionsPart = DisjunctionCapturingGroupNode(...finalVersions.map((version)=>rangedSemverToRegex(version, options).map((parts)=>replaceNumberPatterns(AlternativeNode(clone(numberPatternsPart)), parts, maxRequiredPartsCount))));\n    RegexpTree.traverse(regexAst, visitors({\n        every (nodePath) {\n            if (!numberPatternsPart.length) {\n                return false;\n            }\n            if (nodePath.node === numberPatternsPart[0]) {\n                if (numberPatternsPart.length === 1) {\n                    nodePath.replace(versionsPart);\n                } else {\n                    nodePath.remove();\n                }\n                numberPatternsPart.shift();\n            }\n            return true;\n        }\n    }));\n    return regexAst;\n}\n/**\n * Apply browser versions to info objects.\n * @param browserRegexes - Objects with requested browser version and regex.\n * @param options - Semver compare options.\n * @returns Objects with requested browser version and regex special for this version.\n */ function applyVersionsToRegexes(browserRegexes, options) {\n    return browserRegexes.map(({ regex: sourceRegex , version , maxVersion , matchedVersions , ...other })=>{\n        let regexAst = parseRegex(sourceRegex);\n        if (!version) {\n            regexAst = applyVersionsToRegex(regexAst, versionsListToRanges(matchedVersions), {\n                ...options,\n                allowHigherVersions: !maxVersion && options.allowHigherVersions\n            });\n        }\n        return {\n            regex: null,\n            sourceRegex,\n            regexAst,\n            version,\n            maxVersion,\n            matchedVersions,\n            ...other\n        };\n    });\n}\n\nconst defaultOptions = {\n    ignoreMinor: false,\n    ignorePatch: true,\n    allowZeroSubversions: false,\n    allowHigherVersions: false\n};\n/**\n * Get source regexes objects from browserslist query.\n * @param options - Browserslist and semver compare options.\n * @returns Source regexes objects.\n */ function getPreUserAgentRegexes(options = {}) {\n    const finalOptions = {\n        ...defaultOptions,\n        ...options\n    };\n    const browsersList = getBrowsersList(finalOptions);\n    const mergedBrowsers = mergeBrowserVersions(browsersList);\n    const sourceRegexes = getRegexesForBrowsers(mergedBrowsers, finalOptions);\n    const versionedRegexes = applyVersionsToRegexes(sourceRegexes, finalOptions);\n    return versionedRegexes;\n}\n/**\n * Compile browserslist query to regexes.\n * @param options - Browserslist and semver compare options.\n * @returns Objects with info about compiled regexes.\n */ function getUserAgentRegexes(options = {}) {\n    return compileRegexes(getPreUserAgentRegexes(options));\n}\n/**\n * Compile browserslist query to regex.\n * @param options - Browserslist and semver compare options.\n * @returns Compiled regex.\n */ function getUserAgentRegex(options = {}) {\n    return compileRegex(getPreUserAgentRegexes(options));\n}\n\nexport { AlternativeNode, AstRegExpNode, CapturingGroupNode, CharacterClassNode, ClassRangeNode, DigitPatternNode, DisjunctionCapturingGroupNode, DisjunctionNode, MetaCharNode, NumberCharsNode, NumberPatternNode, RangeQuantifierNode, RepetitionNode, SemverPart, SimpleCharNode, SimpleQuantifierNode, applyVersionsToRegex, applyVersionsToRegexes, clone, compareArrays, compareSemvers, compileRegex, compileRegexes, concat, defaultOptions, findMatchedVersions, getBrowsersList, getNumberPatternsCount, getNumberPatternsPart, getPreUserAgentRegexes, getRegexesForBrowsers, getRequiredSemverPartsCount, getUserAgentRegex, getUserAgentRegexes, isCharNode, isDigitRangeNode, isExpressionNode, isNumberPatternNode, mergeBrowserVersions, mergeDigits, numberToDigits, numbersToRanges, optimizeRegex, optimizeSegmentNumberPatterns, parseBrowsersList, parseRegex, rangeSemver, rangeToRegex, rangedSemverToRegex, rayRangeDigitPattern, rayToNumberPatterns, replaceNumberPatterns, segmentRangeNumberPattern, segmentToNumberPatterns, semverify, splitCommonDiff, splitToDecadeRanges, toRegex, toString, versionsListToRanges, visitors };\n//# sourceMappingURL=index.js.map\n","/**\n * @typedef {import('./index.d').UserAgentRegex} UserAgentRegex\n */\n\n/** @type {UserAgentRegex[]} */\nexport const regexes = [\n  {\n    regex: /IE (\\d+)\\.(\\d+)/,\n    family: 'ie',\n    maxVersion: [\n      7,\n      Infinity,\n      Infinity\n    ]\n  },\n  /**\n   * IE can be in Compatability Mode (IE 7.0)\n   * so we need to check Trident version\n   */\n  {\n    regex: /Trident\\/4\\.0/,\n    family: 'ie',\n    version: [\n      8,\n      0,\n      0\n    ]\n  },\n  {\n    regex: /Trident\\/5\\.0/,\n    family: 'ie',\n    version: [\n      9,\n      0,\n      0\n    ]\n  },\n  {\n    regex: /Trident\\/6\\.0/,\n    family: 'ie',\n    version: [\n      10,\n      0,\n      0\n    ]\n  },\n  {\n    regex: /Trident\\/[78]\\.0/,\n    family: 'ie',\n    version: [\n      11,\n      0,\n      0\n    ]\n  },\n  {\n    regex: /Edge?\\/(\\d+)\\.(\\d+)(\\.(\\d+)|)/,\n    family: 'edge'\n  },\n  {\n    regex: /Firefox\\/(\\d+)\\.(\\d+)(\\.(\\d+)|)/,\n    family: 'firefox'\n  },\n  {\n    regex: /Chrom(ium|e)\\/(\\d+)\\.(\\d+)(\\.(\\d+)|)/,\n    family: 'chrome'\n  },\n  /**\n   * Ignore Edge with EdgeHTML engine.\n   */\n  {\n    regex: /Chrom(ium|e)\\/(\\d+)\\.(\\d+)(\\.(\\d+)|)([\\d.]+$|.*Safari\\/(?![\\d.]+ Edge\\/[\\d.]+$))/,\n    family: 'chrome',\n    maxVersion: [\n      70,\n      Infinity,\n      Infinity\n    ]\n  },\n  /**\n   * Safari on iPad have desktop-like useragent\n   * Some versions contains letter subversions\n   * GNOME Web (X11) is based on WebKit and should be detected as Safari\n   */\n  {\n    regex: /(Maci|X11).+ Version\\/(\\d+)\\.(\\d+)([.,](\\d+)|)( \\(\\w+\\)|)( Mobile\\/\\w+|) Safari\\//,\n    family: 'safari'\n  },\n  /**\n   * Presto Opera\n   */\n  {\n    regex: /Opera\\/9\\.80.+Version\\/(\\d+)\\.(\\d+)(\\.(\\d+)|)/,\n    family: 'opera',\n    maxVersion: [\n      12,\n      15,\n      0\n    ]\n  },\n  /**\n   * Chromium based Opera\n   */\n  {\n    regex: /Chrome.+OPR\\/(\\d+)\\.(\\d+)\\.(\\d+)/,\n    family: 'opera',\n    minVersion: [\n      15,\n      0,\n      0\n    ]\n  },\n  {\n    regex: /(CPU[ +]OS|iPhone[ +]OS|CPU[ +]iPhone|CPU IPhone OS|CPU iPad OS)[ +]+(\\d+)[_.](\\d+)([_.](\\d+)|)/,\n    family: 'ios_saf'\n  },\n  /**\n   * Ignore IE Mobile 11\n   */\n  {\n    regex: /[^e] (CPU[ +]OS|iPhone[ +]OS|CPU[ +]iPhone|CPU IPhone OS|CPU iPad OS)[ +]+(\\d+)[_.](\\d+)([_.](\\d+)|)/,\n    family: 'ios_saf',\n    version: [\n      7,\n      0,\n      3\n    ]\n  },\n  {\n    regex: /Opera Mini/,\n    family: 'op_mini'\n  },\n  {\n    regex: /Android Donut/,\n    family: 'android',\n    version: [\n      1,\n      2,\n      0\n    ]\n  },\n  {\n    regex: /Android Eclair/,\n    family: 'android',\n    version: [\n      2,\n      1,\n      0\n    ]\n  },\n  {\n    regex: /Android Froyo/,\n    family: 'android',\n    version: [\n      2,\n      2,\n      0\n    ]\n  },\n  {\n    regex: /Android Gingerbread/,\n    family: 'android',\n    version: [\n      2,\n      3,\n      0\n    ]\n  },\n  {\n    regex: /Android Honeycomb/,\n    family: 'android',\n    version: [\n      3,\n      0,\n      0\n    ]\n  },\n  {\n    regex: /Android:?[ /-](\\d+)(\\.(\\d+)|)(\\.(\\d+)|)/,\n    family: 'android'\n  },\n  /**\n   * Ignore IE Mobile 11\n   */\n  {\n    regex: /Android:?[ /-](\\d+)(\\.(\\d+)|)(\\.(\\d+)|);(?! ARM; Trident)/,\n    family: 'android',\n    version: [\n      4,\n      0,\n      0\n    ]\n  },\n  {\n    regex: /PlayBook.+RIM Tablet OS (\\d+)\\.(\\d+)\\.(\\d+)/,\n    family: 'bb'\n  },\n  {\n    regex: /(Black[bB]erry|BB10).+Version\\/(\\d+)\\.(\\d+)\\.(\\d+)/,\n    family: 'bb'\n  },\n  /**\n   * Presto Opera Mobile\n   */\n  {\n    regex: /Opera\\/.+Opera Mobi.+Version\\/(\\d+)\\.(\\d+)/,\n    family: 'op_mob',\n    maxVersion: [\n      12,\n      16,\n      0\n    ]\n  },\n  /**\n   * Chromium based Opera Mobile\n   */\n  {\n    regex: /Mobile Safari.+OPR\\/(\\d+)\\.(\\d+)\\.(\\d+)/,\n    family: 'op_mob',\n    minVersion: [\n      14,\n      0,\n      0\n    ]\n  },\n  {\n    regex: /Android.+Firefox\\/(\\d+)\\.(\\d+)(\\.(\\d+)|)/,\n    family: 'and_ff'\n  },\n  {\n    regex: /Android.+Chrom(ium|e)\\/(\\d+)\\.(\\d+)(\\.(\\d+)|)/,\n    family: 'and_chr'\n  },\n  {\n    regex: /IEMobile[ /](\\d+)\\.(\\d+)/,\n    family: 'ie_mob'\n  },\n  {\n    regex: /Android.+(UC? ?Browser|UCWEB|U3)[ /]?(\\d+)\\.(\\d+)\\.(\\d+)/,\n    family: 'and_uc'\n  },\n  {\n    regex: /SamsungBrowser\\/(\\d+)\\.(\\d+)/,\n    family: 'samsung'\n  },\n  {\n    regex: /Android.+MQQBrowser\\/(\\d+)(\\.(\\d+)|)(\\.(\\d+)|)/,\n    family: 'and_qq'\n  },\n  {\n    regex: /baidubrowser[/\\s](\\d+)(\\.(\\d+)|)(\\.(\\d+)|)/,\n    family: 'baidu'\n  },\n  {\n    regex: /K[Aa][Ii]OS\\/(\\d+)\\.(\\d+)(\\.(\\d+)|)/,\n    family: 'kaios'\n  }\n]\n"],"names":["r","Error","g","parseInt","s","parseFloat","Object","Array","JSON","Date","n","u","arguments","TypeError","Symbol","e","Set","Number","c","_","Map","RegExp","ReferenceError","t","isNaN","Math","i","NaN","Boolean","String","SyntaxError","console","a","h","o","navigator","window","history","encodeURIComponent","location","d","v","m"],"mappings":"iHAAA,EAAO,OAAO,CAAG,CACf,SACA,YACA,kBACA,WACA,cACD,A,wBCND,IAAI,EAAoBA,EAAQ,OAEhC,SAAS,IAAQ,CAEjB,EAAO,OAAO,CAAG,CACf,YAAa,WACX,MAAM,IAAI,EACR,0EAEJ,EAEA,QAAS,SAAiB,CAAI,EAC5B,OAAO,EAAK,KAAK,AACnB,EAEA,WAAY,SAAoB,CAAI,EAClC,GAAI,EAAK,MAAM,CACb,MAAM,IAAI,EACR,6DAGN,EAEA,YAAa,WACX,MAAM,IAAI,EACR,4EAGJ,EAEA,YAAa,WACX,MAAM,IAAI,EACR,0EAEJ,EAEA,YAAa,SAAqB,CAAO,CAAE,CAAO,EAChD,OAAO,EAAQ,CAAC,2BAA2B,CAAE,EAAQ,CAAC,EAAE,AAC1D,EAEA,YAAa,EAEb,WAAY,EAEZ,WAAY,EAEZ,eAAgB,EAEhB,YAAa,EAEb,eAAgB,EAEhB,IAAK,CAAC,CACR,C,oBCrDA,SAAS,EAAkB,CAAO,EAChC,IAAI,CAAC,IAAI,CAAG,oBACZ,IAAI,CAAC,OAAO,CAAG,EACf,IAAI,CAAC,YAAY,CAAG,GAChBC,MAAM,iBAAiB,EACzBA,MAAM,iBAAiB,CAAC,IAAI,CAAE,EAElC,CAEA,EAAkB,SAAS,CAAGA,MAAM,SAAS,CAE7C,EAAO,OAAO,CAAG,C,wBCXjB,IAAI,EAAMD,EAAQ,OACd,EAAaA,EAAQ,OACrB,EAASA,EAAA,cACT,EAAMA,EAAQ,OACd,EAAQA,EAAQ,OAChB,EAAOA,EAAQ,OAEf,EAAoBA,EAAQ,OAC5B,EAAMA,EAAQ,OACd,EAAoBA,EAAQ,MAQhC,SAAS,EAAgB,CAAQ,CAAE,CAAQ,EACzC,OAAO,AAA6C,IAA7C,AAAC,GAAW,GAAE,EAAG,OAAO,CAAC,EAAW,IAC7C,CASA,SAAS,EAAU,CAAQ,EACzB,OAAO,EAAS,MAAM,CAAC,SAAU,CAAO,EACtC,MAAO,AAAmB,UAAnB,OAAO,CAChB,EACF,CAEA,SAAS,EAAkB,CAAO,EAChC,IAAI,EAAe,EAInB,OAHI,AAA8B,IAA9B,EAAQ,KAAK,CAAC,KAAK,MAAM,EAC3B,GAAe,EAAQ,KAAK,CAAC,KAAK,KAAK,CAAC,EAAG,IAAI,IAAI,CAAC,IAAG,EAElD,CACT,CAEA,SAAS,EAAW,CAAI,EACtB,OAAO,SAAiB,CAAO,EAC7B,OAAO,EAAO,IAAM,CACtB,CACF,CAEA,SAASE,EAAS,CAAO,EACvB,OAAOC,SAAS,EAAQ,KAAK,CAAC,IAAI,CAAC,EAAE,CACvC,CAEA,SAAS,EAAiB,CAAQ,CAAE,CAAM,EACxC,GAAI,AAAoB,IAApB,EAAS,MAAM,CAAQ,MAAO,EAAE,CACpC,IAAI,EAAgB,EAAK,EAAS,GAAG,CAACD,IAClC,EAAU,CAAa,CAAC,EAAc,MAAM,CAAG,EAAO,CAC1D,GAAI,CAAC,EACH,OAAO,EAGT,IAAK,IADDE,EAAW,EAAE,CACR,EAAI,EAAS,MAAM,CAAG,EAC7B,AADgC,GAAK,IACjC,GAAUF,EAAS,CAAQ,CAAC,EAAE,GADM,IAExCE,EAAS,OAAO,CAAC,CAAQ,CAAC,EAAE,EAE9B,OAAOA,CACT,CAEA,SAAS,EAAK,CAAK,EAEjB,IAAK,IADD,EAAW,EAAE,CACR,EAAI,EAAG,EAAI,EAAM,MAAM,CAAE,IAC5B,AAA+B,KAA/B,EAAS,OAAO,CAAC,CAAK,CAAC,EAAE,GAAU,EAAS,IAAI,CAAC,CAAK,CAAC,EAAE,EAE/D,OAAO,CACT,CAEA,SAAS,EAAU,CAAM,CAAE,CAAI,CAAE,CAAI,EACnC,IAAK,IAAI,KAAK,EACZ,CAAM,CAAC,EAAO,IAAM,EAAE,CAAG,CAAI,CAAC,EAAE,AAEpC,CAEA,SAAS,EAAe,CAAI,CAAE,CAAO,EAEnC,GADA,EAAUC,WAAW,GACjB,AAAS,MAAT,EACF,OAAO,SAAU,CAAC,EAChB,OAAO,EAAiB,GAAK,CAC/B,EACK,GAAI,AAAS,OAAT,EACT,OAAO,SAAU,CAAC,EAChB,OAAO,EAAiB,IAAM,CAChC,EACK,GAAI,AAAS,MAAT,EACT,OAAO,SAAU,CAAC,EAChB,OAAOA,WAAW,GAAK,CACzB,EAEA,OAAO,SAAU,CAAC,EAChB,OAAOA,WAAW,IAAM,CAC1B,EAGF,SAAS,EAAiB,CAAC,EACzB,OAAOA,WAAW,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,EAAI,EACvC,CACF,CA6BA,SAAS,EAAe,CAAC,EACvB,OAAOF,SAAS,EAClB,CAEA,SAAS,EAAQ,CAAC,CAAE,CAAC,SACnB,AAAI,EAAI,EAAU,IACd,GAAI,EAEV,CAEA,SAAS,EAAc,CAAC,CAAE,CAAC,EACzB,OACE,EAAQA,SAAS,CAAC,CAAC,EAAE,EAAGA,SAAS,CAAC,CAAC,EAAE,IACrC,EAAQA,SAAS,CAAC,CAAC,EAAE,EAAI,KAAMA,SAAS,CAAC,CAAC,EAAE,EAAI,OAChD,EAAQA,SAAS,CAAC,CAAC,EAAE,EAAI,KAAMA,SAAS,CAAC,CAAC,EAAE,EAAI,KAEpD,CAGA,SAAS,EAAkB,CAAQ,CAAE,CAAK,QAOxC,CALI,AAAoB,SAAb,AADX,GAAQ,EAAM,KAAK,CAAC,KAAK,GAAG,CAAC,EAAc,CAC3B,CAAC,EAAE,EACjB,EAAK,CAAC,EAAE,CAAG,GAAE,EAKR,OADC,GAEG,SAAU,CAAO,EAEtB,OAAO,AAAsC,GAAtC,EADP,EAAU,EAAQ,KAAK,CAAC,KAAK,GAAG,CAAC,GACE,EACrC,EAGO,SAAU,CAAO,EAEtB,OAAO,EADP,EAAU,EAAQ,KAAK,CAAC,KAAK,GAAG,CAAC,GACE,IAAU,CAC/C,CAEN,CAGA,SAAS,EAAmB,CAAO,CAAE,CAAK,SACxC,AAAI,CAAO,CAAC,EAAE,GAAK,CAAK,CAAC,EAAE,CAClB,CAAO,CAAC,EAAE,CAAG,CAAK,CAAC,EAAE,CAAG,GAAK,EAElC,AAAa,MAAb,CAAK,CAAC,EAAE,CACH,EAEL,CAAO,CAAC,EAAE,GAAK,CAAK,CAAC,EAAE,CAClB,CAAO,CAAC,EAAE,CAAG,CAAK,CAAC,EAAE,CAAG,GAAK,EAE/B,CACT,CAYA,SAAS,EAAiB,CAAI,CAAE,CAAO,EACrC,IAAIH,EAVJ,AAAI,AAAmC,KAAnC,AAU0B,EAVrB,QAAQ,CAAC,OAAO,CAUW,OARzB,EAAa,cAAc,CAAC,AAQT,EARc,IAAI,CAAC,CAQb,EARsB,EACjD,EAAa,cAAc,CAAC,AAOP,EAPY,IAAI,CAAC,CAOX,EAPoB,QAQxD,AAAIA,GAEgC,IAAzB,EAAK,QAAQ,CAAC,MAAM,EACtB,EAAK,QAAQ,CAAC,EAAE,AAI3B,CAEA,SAAS,EAAa,CAAK,CAAE,CAAO,EAElC,OADA,GAAgB,IACTM,OAAO,IAAI,CAAC,GAAQ,MAAM,CAAC,SAAU,CAAQ,CAAE,CAAI,EACxD,IAAI,EAAO,EAAO,EAAM,GACxB,GAAI,CAAC,EAAM,OAAO,EAClB,IAAI,EAAWA,OAAO,IAAI,CAAC,EAAK,WAAW,EAAE,MAAM,CAAC,SAAU,CAAC,EAC7D,IAAI,EAAO,EAAK,WAAW,CAAC,EAAE,CAC9B,OAAO,AAAS,OAAT,GAAiB,GAAQ,CAClC,GACA,OAAO,EAAS,MAAM,CAAC,EAAS,GAAG,CAAC,EAAW,EAAK,IAAI,GAC1D,EAAG,EAAE,CACP,CAEA,SAAS,EAAU,CAAI,EACrB,MAAO,CACL,KAAM,EAAK,IAAI,CACf,SAAU,EAAK,QAAQ,CACvB,SAAU,EAAK,QAAQ,CACvB,YAAa,EAAK,WAAW,AAC/B,CACF,CAEA,SAAS,EAAO,CAAI,CAAE,CAAO,EAG3B,GAFA,EAAO,EAAK,WAAW,GACvB,EAAO,EAAa,OAAO,CAAC,EAAK,EAAI,EACjC,EAAQ,eAAe,EAAI,EAAa,YAAY,CAAC,EAAK,CAAE,CAC9D,IA6B0B,EAAS,EA7B/B,EAAU,EAAa,IAAI,CAAC,EAAa,YAAY,CAAC,EAAK,CAAC,CAChE,GAAI,AAAS,YAAT,EACF,QA2BwB,EA3BI,EAAU,EAAa,IAAI,CAAC,EAAK,EA2B5B,EA3B+B,EA4BpE,EAAQ,QAAQ,CAAG,EAAyB,EAAQ,QAAQ,CAAE,EAAO,QAAQ,EAC7E,EAAQ,QAAQ,CAAG,EAAyB,EAAQ,QAAQ,CAAE,EAAO,QAAQ,EAC7E,EAAQ,WAAW,CAAG,AAXxB,SAAoB,CAAG,EACrB,IAAI,EAAO,CAAC,EACZ,IAAK,IAAI,KAAO,EACd,CAAI,CAAC,EAAI,CAAG,CAAG,CAAC,EAAI,CAEtB,OAAO,CACT,EAKmC,EAAQ,WAAW,EACpD,EAAQ,QAAQ,CAAC,OAAO,CAAC,SAAU,CAAC,EAC9B,AAA2B,SAA3B,EAAQ,WAAW,CAAC,EAAE,EACxB,GAAQ,WAAW,CAAC,EAAE,CAAG,EAAO,WAAW,CAAC,EAAE,AAAD,CAEjD,GACO,CApCoE,CAEvE,IAAI,EAAS,EAAU,GAEvB,OADA,EAAO,IAAI,CAAG,EACP,CAEX,CACA,OAAO,EAAa,IAAI,CAAC,EAAK,AAChC,CAEA,SAAS,EAAyB,CAAe,CAAE,CAAc,EAC/D,IAAI,EAAkB,EAAe,OAAO,CA5OhB,MA6O5B,OAAO,EACJ,MAAM,CAAC,SAAU,CAAO,EACvB,MAAO,qBAAqB,IAAI,CAAC,EACnC,GACC,MAAM,CAAC,EAAe,KAAK,CAAC,GACjC,CAsBA,SAAS,EAAU,CAAI,CAAE,CAAO,EAC9B,IAAI,EAAO,EAAO,EAAM,GACxB,GAAI,CAAC,EAAM,MAAM,IAAI,EAAkB,mBAAqB,GAC5D,OAAO,CACT,CAaA,SAAS,EAAY,CAAI,CAAE,CAAI,CAAE,CAAS,CAAE,CAAO,EACjD,IAAI,EAAO,EACX,OAAQ,GACN,IAAK,UACH,GAAI,EAAQ,eAAe,CAAE,OAAO,EACpC,IAAI,EAAW,EAAa,IAAI,CAAC,MAAM,CAAC,QAAQ,CAChD,EAAO,EAAS,MAAM,CAAG,EAAS,OAAO,CA/RjB,MAgSxB,KACF,KAAK,SAEH,EAAOJ,EADM,EAAa,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,EAjSxC,GAkS4B,EAC/C,KACF,SACE,OAAO,CACX,QACA,AAAI,GAAa,EACR,EAAK,KAAK,CAAC,IAEb,EAAK,KAAK,CAAC,EAAO,EAAI,EAC/B,CAEA,SAAS,EAAY,CAAK,CAAE,CAAW,EACrC,MACE,AAAiB,UAAjB,OAAO,GACN,GAAM,OAAO,CAAC,MAAQ,GAAM,GAAe,EAAM,OAAO,CAAC,MAAQ,CAAC,CAEvE,CAEA,SAAS,EAAQ,CAAO,CAAE,CAAO,EAC/B,OAAO,EAAa,GAAS,MAAM,CAAC,SAAU,CAAM,CAAE,CAAI,CAAE,CAAK,EAC/D,GAAI,EAAK,GAAG,EAAI,AAAU,IAAV,EACd,MAAM,IAAI,EACR,+DAEE,EAAK,KAAK,CACV,KAIN,IAAI,EAAQ,AADD,CAAO,CAAC,EAAK,IAAI,CAAC,CACZ,MAAM,CAAC,IAAI,CAAC,EAAc,EAAS,GAAM,GAAG,CAAC,SAAU,CAAC,EACvE,IAAI,EAAQ,EAAE,KAAK,CAAC,WACpB,AAAI,AAAa,MAAb,CAAK,CAAC,EAAE,CACH,CAAK,CAAC,EAAE,CAAG,IAAM,EAAO,CAAK,CAAC,EAAE,CAAE,GAAS,QAAQ,CAAC,EAAE,CAEtD,CAEX,GAEA,GAAI,AAAiB,QAAjB,EAAK,OAAO,CACd,GAAI,EAAK,GAAG,CACV,OAAO,EAAO,MAAM,CAAC,SAAU,CAAC,EAC9B,OAAO,AAAqB,KAArB,EAAM,OAAO,CAAC,EACvB,QAEA,OAAO,EAAO,MAAM,CAAC,SAAU,CAAC,EAC9B,OAAO,AAAqB,KAArB,EAAM,OAAO,CAAC,EACvB,GAGF,GAAI,EAAK,GAAG,CAAE,CACZ,IAAI,EAAS,CAAC,EAId,OAHA,EAAM,OAAO,CAAC,SAAU,CAAC,EACvB,CAAM,CAAC,EAAE,CAAG,EACd,GACO,EAAO,MAAM,CAAC,SAAU,CAAC,EAC9B,MAAO,CAAC,CAAM,CAAC,EAAE,AACnB,EACF,CACA,OAAO,EAAO,MAAM,CAAC,EAEzB,EAAG,EAAE,CACP,CAEA,SAAS,EAAY,CAAI,EAOvB,OANI,AAAgB,SAAT,GAAsB,GAAO,CAAC,GAErC,AAAqB,SAAd,EAAK,IAAI,EAClB,GAAK,IAAI,CAAG,EAAK,OAAO,CAAG,EAAK,OAAO,CAAC,KAAO,GAAE,EAG5C,CACT,CAEA,SAAS,EAAe,CAAO,CAAE,CAAI,EACnC,GAAI,MAAO,EAA6C,CACtD,IAAI,EAAS,EAAa,UAAU,CAAC,GAEnC,EADE,GAGQ,EAAa,QAAQ,AAEnC,CAEA,OAAO,CACT,CAEA,SAAS,EAAa,CAAO,EAC3B,GAAI,CAAE,CAAmB,UAAnB,OAAO,GAAwBK,MAAM,OAAO,CAAC,EAAO,EACxD,MAAM,IAAI,EACR,mDAAqD,OAAO,EAAU,IAG5E,CAEA,IAAI,EAAQ,CAAC,EACT,EAAa,CAAC,EAElB,SAAS,EAAa,CAAO,CAAE,CAAI,EAGjC,EADA,EAAU,EAAe,EADzB,EAAO,EAAY,KAInB,IAAI,EAAY,EAAa,GAAS,IAAI,CAAC,SAAU,CAAI,EACvD,OAAO,CAAO,CAAC,EAAK,IAAI,CAAC,CAAC,SAAS,AACrC,GACI,EAAU,CACZ,sBAAuB,EAAK,qBAAqB,CACjD,gBAAiB,EAAK,eAAe,CACrC,gBAAiB,EAAK,eAAe,CACrC,IAAK,EAAK,GAAG,AACf,CAEI,IACF,GAAQ,IAAI,CAAG,EAAK,IAAI,AAAD,EAGzB,EAAI,cAAc,CAAC,EAAa,IAAI,EACpC,IAAIH,EAAQ,EAAI,OAAO,CAAC,EAAM,EAAa,IAAI,EAC/C,GAAIA,EAEF,IAAK,IAAI,KADT,EAAQ,WAAW,CAAG,CAAC,EACHA,EAClB,EAAU,EAAQ,WAAW,CAAE,EAASA,CAAK,CAAC,EAAQ,EAI1D,IAAI,EAAWI,KAAK,SAAS,CAAC,CAAC,EAAS,EAAQ,EAChD,GAAI,CAAK,CAAC,EAAS,CAAE,OAAO,CAAK,CAAC,EAAS,CAE3C,IAAI,EAAS,EAAK,EAAQ,EAAS,IAAU,IAAI,CAAC,SAAU,CAAK,CAAE,CAAK,EAGtE,GAFA,EAAQ,EAAM,KAAK,CAAC,KACpB,EAAQ,EAAM,KAAK,CAAC,KAChB,CAAK,CAAC,EAAE,GAAK,CAAK,CAAC,EAAE,CAQvB,OAAO,EAAQ,CAAK,CAAC,EAAE,CAAE,CAAK,CAAC,EAAE,EAJjC,IAAI,EAAW,CAAK,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAErC,OAAO,EAAc,AADN,CAAK,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CACP,KAAK,CAAC,KAAM,EAAS,KAAK,CAAC,KAI7D,GAIA,OAHI,AAAC,EAAI,GAAG,CAAC,0BAA0B,EACrC,EAAK,CAAC,EAAS,CAAG,CAAK,EAElB,CACT,CAEA,SAAS,EAAa,CAAO,EAC3B,IAAI,EAAWA,KAAK,SAAS,CAAC,GAC9B,GAAI,KAAY,EAAY,OAAO,CAAU,CAAC,EAAS,CACvD,IAAIR,EAAS,EAAkB,EAAS,GAIxC,OAHI,AAAC,EAAI,GAAG,CAAC,0BAA0B,EACrC,EAAU,CAAC,EAAS,CAAGA,CAAK,EAEvBA,CACT,CAEA,SAAS,EAAgB,CAAO,CAAE,CAAM,EACtC,IAAI,EAAQ,EAAI,QAAQ,CAAC,EAAS,EAAQ,EAAa,IAAI,EAC3D,GAAI,EAEF,IAAK,IAAI,KADT,EAAQ,WAAW,CAAG,CAAC,EACH,EAClB,EAAU,EAAQ,WAAW,CAAE,EAAS,CAAK,CAAC,EAAQ,EAG1D,GAAI,CAAC,EAAQ,WAAW,CACtB,MAAM,IAAI,EAAkB,4CAE9B,OAAO,EAAQ,WAAW,AAC5B,CAoGA,SAAS,EAAU,CAAO,CAAE,CAAI,EAC9B,IAAI,EAAU,EAAa,YAAY,CAAC,MAAM,CAAC,SAAU,CAAC,EACxD,OAAO,EAAgB,EAAG,EAAK,OAAO,CACxC,GACA,GAAI,AAAmB,IAAnB,EAAQ,MAAM,CAChB,GAAI,EAAQ,qBAAqB,CAC/B,MAAO,EAAE,MAET,MAAM,IAAI,EACR,mBAAqB,EAAK,OAAO,CAAG,eAI1C,MAAO,CAAC,QAAU,CAAO,CAAC,EAAQ,MAAM,CAAG,EAAE,CAAC,AAChD,CAEA,SAAS,EAAW,CAAO,CAAE,CAAI,EAI/B,OAAO,EAAaS,KAAK,GAAG,CAHjBN,SAAS,EAAK,IAAI,EACjBA,SAAS,EAAK,KAAK,EAAI,MAAQ,EACjCA,SAAS,EAAK,GAAG,EAAI,MACgB,EAAG,EAAG,GAAI,EAC3D,CA6BA,SAAS,EAAW,CAAO,CAAE,CAAI,EAC/B,IASQ,EAiBJ,EA1BA,EAAWE,WAAW,EAAK,QAAQ,EACnC,EAAQ,EAAa,KAAK,CAAC,MAAM,CACrC,GAAI,EAAK,KAAK,CACZ,GAAI,EAAK,KAAK,CAAC,KAAK,CAAC,iBAAkB,CACrC,GAAI,CAAC,EAAQ,WAAW,CACtB,MAAM,IAAI,EAAkB,4CAE9B,EAAQ,EAAQ,WAAW,AAC7B,MAGI,EADE,AAAsB,IAAtB,EAAK,KAAK,CAAC,MAAM,CACX,EAAK,KAAK,CAAC,WAAW,GAEtB,EAAK,KAAK,CAAC,WAAW,GAEhC,EAAI,WAAW,CAAC,EAAa,KAAK,CAAE,EAAO,EAAa,IAAI,EAC5D,EAAQ,EAAa,KAAK,CAAC,EAAM,MAE1B,EAAK,MAAM,EACpB,GAAQ,EAAgB,EAAS,EAAK,MAAM,GAQ9C,IAAK,IAND,EAAWC,OAAO,IAAI,CAAC,GAAO,IAAI,CAAC,SAAU,CAAC,CAAE,CAAC,EACnD,OAAO,CAAK,CAAC,EAAE,CAAG,CAAK,CAAC,EAAE,AAC5B,GACI,EAAU,EACV,EAAS,EAAE,CAEN,EAAI,EAAG,EAAI,EAAS,MAAM,EAE7B,AAAmB,IAAnB,CAAK,CADT,EAAU,CAAQ,CAAC,EAAE,CACH,GAClB,GAAW,CAAK,CAAC,EAAQ,CACzB,EAAO,IAAI,CAAC,IACR,IAAW,CAAO,GALa,KAOrC,OAAO,CACT,CAxLA,EAAa,KAAK,CAAG,SAAU,CAAO,CAAE,CAAI,EAI1C,OADA,EADA,EAAU,EAAe,EADzB,EAAO,EAAY,KAGZ,EAAa,EACtB,EAGA,EAAa,KAAK,CAAG,CAAC,EACtB,EAAa,IAAI,CAAG,CAAC,EACrB,EAAa,KAAK,CAAG,CACnB,OAAQ,CAAC,EACT,OAAQ,IACV,EAGA,EAAa,QAAQ,CAAG,CAAC,SAAU,kBAAmB,cAAe,WAAW,CAGhF,EAAa,OAAO,CAAG,CACrB,GAAI,UACJ,GAAI,UACJ,IAAK,UACL,SAAU,KACV,WAAY,KACZ,eAAgB,SAChB,UAAW,UACX,YAAa,SACb,cAAe,UACf,eAAgB,SAChB,UAAW,SACX,UAAW,QACb,EAKA,EAAa,YAAY,CAAG,CAC1B,QAAS,SACT,OAAQ,UACR,OAAQ,KACR,QAAS,QACX,EAGA,EAAa,cAAc,CAAG,CAAC,EAE/B,EAAa,WAAW,CAAG,EAAI,WAAW,CAC1C,EAAa,WAAW,CAAG,EAAI,WAAW,CAC1C,EAAa,UAAU,CAAG,EAAI,UAAU,CACxC,EAAa,cAAc,CAAG,EAAI,cAAc,CAChD,EAAa,UAAU,CAAG,EAAI,UAAU,CACxC,EAAa,UAAU,CAAG,EAAI,UAAU,CAExC,EAAa,QAAQ,CAAG,SAAU,CAAQ,CAAE,CAAK,EAC/C,IAAI,EACJ,GAAI,AAAiB,SAAV,EACT,EAAO,EAAa,KAAK,CAAC,MAAM,MAC3B,GAAI,AAAU,aAAV,EAAsB,CAC/B,IAAI,EAAO,CAAC,CACZ,GAAK,IAAI,CAAG,EAAK,OAAO,CAAG,EAAK,OAAO,CAAC,KAAO,IAC/C,IAAI,EAAc,EAAI,OAAO,CAAC,GAC9B,GAAI,CAAC,EACH,MAAM,IAAI,EAAkB,4CAG9B,IAAK,IAAI,KADT,EAAO,CAAC,EACY,EAClB,EAAU,EAAM,EAAS,CAAW,CAAC,EAAQ,CAEjD,MAAO,GAAI,AAAiB,UAAjB,OAAO,EAEd,EADE,EAAM,MAAM,CAAG,EACT,EAAM,WAAW,GAEjB,EAAM,WAAW,GAE3B,EAAI,WAAW,CAAC,EAAa,KAAK,CAAE,EAAO,EAAa,IAAI,EAC5D,EAAO,EAAa,KAAK,CAAC,EAAM,MAMhC,IAAK,IAAI,IAJL,kBAAmB,GACrB,GAAQ,EAAM,aAAa,AAAD,EAE5B,EAAO,CAAC,EACS,EACf,IAAK,IAAI,KAAW,CAAK,CAAC,EAAK,CAC7B,CAAI,CAAC,EAAO,IAAM,EAAQ,CAAG,CAAK,CAAC,EAAK,CAAC,EAAQ,CAKvD,OAAO,EAAS,MAAM,CAAC,SAAU,CAAG,CAAE,CAAC,EACrC,IAAI,EAAQ,CAAI,CAAC,EAAE,CAInB,OAHI,AAAU,SAAV,GACF,GAAQ,CAAI,CAAC,EAAE,OAAO,CAAC,QAAS,MAAM,AAAD,EAEhC,EAAO,IAAS,EACzB,EAAG,EACL,EA0FA,IAAI,EAAU,CACZ,oBAAqB,CACnB,QAAS,CAAC,WAAW,CACrB,OAAQ,sCACR,OAAQ,SAAU,CAAO,CAAE,CAAI,EAC7B,OAAOA,OAAO,IAAI,CAAC,GAAQ,MAAM,CAAC,SAAU,CAAQ,CAAE,CAAI,EACxD,IAAI,EAAO,EAAO,EAAM,GACxB,GAAI,CAAC,EAAM,OAAO,EAClB,IAAI,EAAO,EAAiB,EAAK,QAAQ,CAAE,EAAK,QAAQ,EAGxD,OADA,EAAO,EADP,EAAO,EAAK,GAAG,CAAC,EAAW,EAAK,IAAI,GACX,EAAK,IAAI,CAAE,EAAK,QAAQ,CAAE,GAC5C,EAAS,MAAM,CAAC,EACzB,EAAG,EAAE,CACP,CACF,EACA,cAAe,CACb,QAAS,CAAC,WAAW,CACrB,OAAQ,8BACR,OAAQ,SAAU,CAAO,CAAE,CAAI,EAC7B,OAAOA,OAAO,IAAI,CAAC,GAAQ,MAAM,CAAC,SAAU,CAAQ,CAAE,CAAI,EACxD,IAAI,EAAO,EAAO,EAAM,GACxB,GAAI,CAAC,EAAM,OAAO,EAClB,IAAI,EAAO,EAAK,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAK,QAAQ,EAG7C,OADA,EAAO,EADP,EAAO,EAAK,GAAG,CAAC,EAAW,EAAK,IAAI,GACX,EAAK,IAAI,CAAE,EAAK,QAAQ,CAAE,GAC5C,EAAS,MAAM,CAAC,EACzB,EAAG,EAAE,CACP,CACF,EACA,6BAA8B,CAC5B,QAAS,CAAC,WAAW,CACrB,OAAQ,iDACR,OAAQ,SAAU,CAAO,CAAE,CAAI,EAE7B,OAAO,AADa,EAAiBA,OAAO,IAAI,CAAC,GAAM,EAAK,QAAQ,EAC/C,GAAG,CAAC,SAAU,CAAC,EAClC,MAAO,UAAY,CAAG,CAAC,EAAE,AAC3B,EACF,CACF,EACA,yBAA0B,CACxB,QAAS,CAAC,WAAW,CACrB,OAAQ,6CACR,OAAQ,SAAU,CAAO,CAAE,CAAI,EAC7B,OAAO,EAAiB,EAAa,YAAY,CAAE,EAAK,QAAQ,EAAE,GAAG,CACnE,SAAU,CAAO,EACf,MAAO,QAAU,CACnB,EAEJ,CACF,EACA,4BAA6B,CAC3B,QAAS,CAAC,WAAY,UAAU,CAChC,OAAQ,8CACR,OAAQ,SAAU,CAAO,CAAE,CAAI,EAC7B,IAAI,EAAO,EAAU,EAAK,OAAO,CAAE,GAE/B,EAAO,AADS,EAAiB,EAAK,QAAQ,CAAE,EAAK,QAAQ,EACxC,GAAG,CAAC,EAAW,EAAK,IAAI,GAEjD,OADO,EAAY,EAAM,EAAK,IAAI,CAAE,EAAK,QAAQ,CAAE,EAErD,CACF,EACA,uBAAwB,CACtB,QAAS,CAAC,WAAW,CACrB,OAAQ,yCACR,OAAQ,SAAU,CAAO,CAAE,CAAI,EAC7B,OAAOA,OAAO,IAAI,CAAC,GAChB,KAAK,CAAC,CAAC,EAAK,QAAQ,EACpB,GAAG,CAAC,SAAU,CAAC,EACd,MAAO,UAAY,CAAG,CAAC,EAAE,AAC3B,EACJ,CACF,EACA,mBAAoB,CAClB,QAAS,CAAC,WAAW,CACrB,OAAQ,qCACR,OAAQ,SAAU,CAAO,CAAE,CAAI,EAC7B,OAAO,EAAa,YAAY,CAC7B,KAAK,CAAC,CAAC,EAAK,QAAQ,EACpB,GAAG,CAAC,SAAU,CAAO,EACpB,MAAO,QAAU,CACnB,EACJ,CACF,EACA,sBAAuB,CACrB,QAAS,CAAC,WAAY,UAAU,CAChC,OAAQ,sCACR,OAAQ,SAAU,CAAO,CAAE,CAAI,EAC7B,IAAI,EAAO,EAAU,EAAK,OAAO,CAAE,GAC/B,EAAO,EAAK,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAK,QAAQ,EAAE,GAAG,CAAC,EAAW,EAAK,IAAI,GAEvE,OADO,EAAY,EAAM,EAAK,IAAI,CAAE,EAAK,QAAQ,CAAE,EAErD,CACF,EACA,oBAAqB,CACnB,QAAS,EAAE,CACX,OAAQ,2BACR,OAAQ,SAAU,CAAO,EACvB,OAAOA,OAAO,IAAI,CAAC,GAAQ,MAAM,CAAC,SAAU,CAAQ,CAAE,CAAI,EACxD,IAAI,EAAO,EAAO,EAAM,GACxB,GAAI,CAAC,EAAM,OAAO,EAClB,IAAI,EAAO,EAAK,QAAQ,CAAC,MAAM,CAAC,SAAU,CAAC,EACzC,OAAO,AAA6B,KAA7B,EAAK,QAAQ,CAAC,OAAO,CAAC,EAC/B,GAEA,OADA,EAAO,EAAK,GAAG,CAAC,EAAW,EAAK,IAAI,GAC7B,EAAS,MAAM,CAAC,EACzB,EAAG,EAAE,CACP,CACF,EACA,6BAA8B,CAC5B,QAAS,EAAE,CACX,OAAQ,uCACR,OAAQ,WACN,MAAO,EAAE,AACX,CACF,EACA,4BAA6B,CAC3B,QAAS,CAAC,UAAU,CACpB,OAAQ,oCACR,OAAQ,SAAU,CAAO,CAAE,CAAI,EAC7B,IAAI,EAAO,EAAU,EAAK,OAAO,CAAE,GACnC,OAAO,EAAK,QAAQ,CACjB,MAAM,CAAC,SAAU,CAAC,EACjB,OAAO,AAA6B,KAA7B,EAAK,QAAQ,CAAC,OAAO,CAAC,EAC/B,GACC,GAAG,CAAC,EAAW,EAAK,IAAI,EAC7B,CACF,EACA,WAAY,CACV,QAAS,CAAC,QAAQ,CAClB,OAAQ,mCACR,OAAQ,SAAU,CAAO,CAAE,CAAI,EAC7B,OAAO,EAAaG,KAAK,GAAG,GAAK,AA7wB5B,mBA6wBmC,EAAK,KAAK,CAAE,EACtD,CACF,EACA,QAAS,CACP,QAAS,CAAC,OAAO,CACjB,OAAQ,iBACR,OAAQ,CACV,EACA,UAAW,CACT,QAAS,CAAC,OAAQ,QAAQ,CAC1B,OAAQ,uBACR,OAAQ,CACV,EACA,YAAa,CACX,QAAS,CAAC,OAAQ,QAAS,MAAM,CACjC,OAAQ,6BACR,OAAQ,CACV,EACA,SAAU,CACR,QAAS,CAAC,OAAQ,eAAgB,OAAQ,aAAc,QAAQ,CAQhE,OACE,oIACF,OAAQ,SAAU,CAAO,CAAE,CAAI,EAE7B,IAlOA,EAiOI,EACA,EAAoB,CAAC,CAAC,EAAK,UAAU,CACrC,EAAe,CAAC,CAAC,EAAK,KAAK,CAC/B,GAAI,AAAsB,UAAtB,EAAK,YAAY,EAAgB,EAAK,IAAI,CAC5C,MAAM,IAAI,EACR,gJAGJ,GAAI,EAAK,IAAI,CACX,EAAmB,EAAI,qBAAqB,CAAC,CAC3C,WAAY,EAAK,IAAI,CACrB,0BAA2B,EAC3B,aAAc,CAChB,QACK,GAAI,EAAK,IAAI,CAClB,EAAmB,EAAI,qBAAqB,CAAC,CAC3C,sBAAuB,EAAK,IAAI,CAChC,0BAA2B,EAC3B,aAAc,CAChB,QACK,GAAI,AAAsB,UAAtB,EAAK,YAAY,CAAc,CACxC,IAAI,EAAiB,IAAIA,OAAO,QAAQ,CAAC,IAAIA,OAAO,QAAQ,GAAK,IACjE,EAAmB,EAAI,qBAAqB,CAAC,CAC3C,sBAAuB,EACvB,0BAA2B,EAC3B,aAAc,CAChB,EACF,MACE,EAAmB,EAAI,qBAAqB,CAAC,CAC3C,0BAA2B,EAC3B,aAAc,CAChB,GAEF,OAAO,GAlQP,EAAW,CACb,OAAQ,SACR,eAAgB,UAChB,KAAM,OACN,QAAS,UACT,gBAAiB,SACjB,OAAQ,SACR,WAAY,UACZ,gBAAiB,UACjB,wBAAyB,UACzB,cAAe,SACf,MAAO,QACP,WAAY,SACZ,WAAY,SACZ,OAAQ,OACV,EAEO,AAiPyB,EAhP7B,MAAM,CAAC,SAAU,CAAO,EACvB,OAAOH,AAAmD,KAAnDA,OAAO,IAAI,CAAC,GAAU,OAAO,CAAC,EAAQ,OAAO,CACtD,GACC,GAAG,CAAC,SAAU,CAAO,EACpB,OAAO,CAAQ,CAAC,EAAQ,OAAO,CAAC,CAAG,OAAS,EAAQ,OAAO,AAC7D,IA2OiD,EACjD,CACF,EACA,WAAY,CACV,QAAS,CAAC,OAAQ,aAAa,CAC/B,OAAQ,sCACR,OAAQ,SAAU,CAAO,CAAE,CAAI,EAC7B,IAAI,EAAaD,WAAW,EAAK,UAAU,EACvC,EAAQ,EAAa,KAAK,CAAC,MAAM,CACrC,OAAOC,OAAO,IAAI,CAAC,GAAO,MAAM,CAAC,SAAU,CAAM,CAAE,CAAO,EAgBxD,MAfI,AAAc,MAAd,EAAK,IAAI,CACP,CAAK,CAAC,EAAQ,CAAG,GACnB,EAAO,IAAI,CAAC,GAEL,AAAc,MAAd,EAAK,IAAI,CACd,CAAK,CAAC,EAAQ,CAAG,GACnB,EAAO,IAAI,CAAC,GAEL,AAAc,OAAd,EAAK,IAAI,CACd,CAAK,CAAC,EAAQ,EAAI,GACpB,EAAO,IAAI,CAAC,GAEL,CAAK,CAAC,EAAQ,EAAI,GAC3B,EAAO,IAAI,CAAC,GAEP,CACT,EAAG,EAAE,CACP,CACF,EACA,uBAAwB,CACtB,QAAS,CAAC,OAAQ,aAAa,CAC/B,OAAQ,wDACR,OAAQ,SAAU,CAAO,CAAE,CAAI,EAC7B,IAAI,EAAaD,WAAW,EAAK,UAAU,EAC3C,GAAI,CAAC,EAAQ,WAAW,CACtB,MAAM,IAAI,EAAkB,4CAE9B,IAAI,EAAQ,EAAQ,WAAW,CAC/B,OAAOC,OAAO,IAAI,CAAC,GAAO,MAAM,CAAC,SAAU,CAAM,CAAE,CAAO,EACxD,IAAI,EAAa,CAAK,CAAC,EAAQ,QACb,MAAd,IAIA,AAAc,MAAd,EAAK,IAAI,CACP,EAAa,GACf,EAAO,IAAI,CAAC,GAEL,AAAc,MAAd,EAAK,IAAI,CACd,EAAa,GACf,EAAO,IAAI,CAAC,GAEL,AAAc,OAAd,EAAK,IAAI,CACd,GAAc,GAChB,EAAO,IAAI,CAAC,GAEL,GAAc,GACvB,EAAO,IAAI,CAAC,IAhBL,CAmBX,EAAG,EAAE,CACP,CACF,EACA,2BAA4B,CAC1B,QAAS,CAAC,OAAQ,aAAc,SAAS,CACzC,OAAQ,2DACR,OAAQ,SAAU,CAAO,CAAE,CAAI,EAC7B,IAAI,EAAaD,WAAW,EAAK,UAAU,EACvC,EAAQ,EAAgB,EAAS,EAAK,MAAM,EAChD,OAAOC,OAAO,IAAI,CAAC,GAAO,MAAM,CAAC,SAAU,CAAM,CAAE,CAAO,EACxD,IAAI,EAAa,CAAK,CAAC,EAAQ,QACb,MAAd,IAIA,AAAc,MAAd,EAAK,IAAI,CACP,EAAa,GACf,EAAO,IAAI,CAAC,GAEL,AAAc,MAAd,EAAK,IAAI,CACd,EAAa,GACf,EAAO,IAAI,CAAC,GAEL,AAAc,OAAd,EAAK,IAAI,CACd,GAAc,GAChB,EAAO,IAAI,CAAC,GAEL,GAAc,GACvB,EAAO,IAAI,CAAC,IAhBL,CAmBX,EAAG,EAAE,CACP,CACF,EACA,oBAAqB,CACnB,QAAS,CAAC,OAAQ,aAAc,QAAQ,CACxC,OAAQ,2DACR,OAAQ,SAAU,CAAO,CAAE,CAAI,EAC7B,IAAI,EAAaD,WAAW,EAAK,UAAU,EACvC,EAAQ,EAAK,KAAK,CAEpB,EADE,AAAiB,IAAjB,EAAM,MAAM,CACN,EAAM,WAAW,GAEjB,EAAM,WAAW,GAE3B,EAAI,WAAW,CAAC,EAAa,KAAK,CAAE,EAAO,EAAa,IAAI,EAC5D,IAAI,EAAQ,EAAa,KAAK,CAAC,EAAM,CACrC,OAAOC,OAAO,IAAI,CAAC,GAAO,MAAM,CAAC,SAAU,CAAM,CAAE,CAAO,EACxD,IAAI,EAAa,CAAK,CAAC,EAAQ,QACb,MAAd,IAIA,AAAc,MAAd,EAAK,IAAI,CACP,EAAa,GACf,EAAO,IAAI,CAAC,GAEL,AAAc,MAAd,EAAK,IAAI,CACd,EAAa,GACf,EAAO,IAAI,CAAC,GAEL,AAAc,OAAd,EAAK,IAAI,CACd,GAAc,GAChB,EAAO,IAAI,CAAC,GAEL,GAAc,GACvB,EAAO,IAAI,CAAC,IAhBL,CAmBX,EAAG,EAAE,CACP,CACF,EACA,MAAO,CACL,QAAS,CAAC,WAAW,CACrB,OAAQ,mCACR,OAAQ,CACV,EACA,SAAU,CACR,QAAS,CAAC,WAAY,QAAQ,CAC9B,OAAQ,mEACR,OAAQ,CACV,EACA,aAAc,CACZ,QAAS,CAAC,WAAY,SAAS,CAC/B,OAAQ,wDACR,OAAQ,CACV,EACA,SAAU,CACR,QAAS,CAAC,cAAe,UAAU,CACnC,OAAQ,iDACR,OAAQ,SAAU,CAAO,CAAE,CAAI,EAC7B,EAAI,WAAW,CAAC,EAAa,KAAK,CAAE,EAAK,OAAO,EAChD,IAAI,EAAc,AAAqB,UAArB,EAAK,WAAW,CAC9B,EAAW,EAAa,KAAK,CAAC,EAAK,OAAO,CAAC,CAC3C,EAAS,EAAE,CACf,IAAK,IAAII,KAAQ,EAAU,CAIzB,IAHA,IAAI,EAAO,EAAOA,EAAM,GAEpB,EAAO,EAAK,QAAQ,CAAC,MAAM,CAAG,EAEhC,AADK,GAAQ,IACT,GAAK,QAAQ,CAAC,EAAK,GAAI,CAAQ,CAACA,EAAK,AAAD,GACxC,IAEF,IAAI,EACF,EAAQ,eAAe,EACvBA,KAAQ,EAAa,YAAY,EACjC,EAAY,CAAQ,CAACA,EAAK,CAAC,EAAK,QAAQ,CAAC,EAAK,CAAC,CAAE,GACnD,EAAK,QAAQ,CAAC,OAAO,CAAC,SAAU,CAAO,EACrC,IAAI,EAAQ,CAAQ,CAACA,EAAK,CAAC,EAAQ,AAC/B,AAAU,UAAV,GAAuB,GACzB,GAAQ,CAAQ,CAAC,EAAa,YAAY,CAACA,EAAK,CAAC,CAAC,EAAQ,AAAD,EAEvD,EAAY,EAAO,IACrB,EAAO,IAAI,CAACA,EAAO,IAAM,EAE7B,EACF,CACA,OAAO,CACT,CACF,EACA,eAAgB,CACd,QAAS,CAAC,OAAQ,KAAK,CACvB,OAAQ,wCACR,OAAQ,SAAU,CAAO,CAAE,CAAI,EAC7B,IAAI,EAAY,EAAkB,EAAK,IAAI,EACvC,EAAU,EAAkB,EAAK,EAAE,EACnC,EAAOL,WAAW,EAAK,IAAI,EAC3B,EAAKA,WAAW,EAAK,EAAE,EAC3B,GAAI,CAAC,CAAG,CAAC,EAAU,CACjB,MAAM,IAAI,EAAkB,mBAAqB,EAAO,gBAE1D,GAAI,CAAC,CAAG,CAAC,EAAQ,CACf,MAAM,IAAI,EAAkB,mBAAqB,EAAK,gBAExD,OAAOC,OAAO,IAAI,CAAC,GAChB,MAAM,CAAC,SAAU,CAAC,EACjB,IAAI,EAASD,WAAW,GACxB,OAAO,GAAU,GAAQ,GAAU,CACrC,GACC,GAAG,CAAC,SAAU,CAAC,EACd,MAAO,UAAY,CAAG,CAAC,EAAE,AAC3B,EACJ,CACF,EACA,WAAY,CACV,QAAS,CAAC,OAAQ,KAAK,CACvB,OAAQ,oCACR,OAAQ,SAAU,CAAO,CAAE,CAAI,EAC7B,OAAO,EAAa,YAAY,CAC7B,MAAM,CAAC,EAAkB,KAAM,EAAK,IAAI,GACxC,MAAM,CAAC,EAAkB,KAAM,EAAK,EAAE,GACtC,GAAG,CAAC,SAAU,CAAC,EACd,MAAO,QAAU,CACnB,EACJ,CACF,EACA,cAAe,CACb,QAAS,CAAC,UAAW,OAAQ,KAAK,CAClC,OAAQ,qCACR,OAAQ,SAAU,CAAO,CAAE,CAAI,EAC7B,IAAI,EAAO,EAAU,EAAK,OAAO,CAAE,GAC/B,EAAOA,WAAW,EAAiB,EAAM,EAAK,IAAI,GAAK,EAAK,IAAI,EAChE,EAAKA,WAAW,EAAiB,EAAM,EAAK,EAAE,GAAK,EAAK,EAAE,EAK9D,OAAO,EAAK,QAAQ,CAAC,MAAM,CAJ3B,SAAgB,CAAC,EACf,IAAI,EAASA,WAAW,GACxB,OAAO,GAAU,GAAQ,GAAU,CACrC,GACoC,GAAG,CAAC,EAAW,EAAK,IAAI,EAC9D,CACF,EACA,aAAc,CACZ,QAAS,CAAC,OAAQ,UAAU,CAC5B,OAAQ,qCACR,OAAQ,SAAU,CAAO,CAAE,CAAI,EAC7B,IAAI,EAAe,EAAkB,EAAK,OAAO,EACjD,OAAOC,OAAO,IAAI,CAAC,GAChB,MAAM,CAAC,EAAe,EAAK,IAAI,CAAE,IACjC,GAAG,CAAC,SAAU,CAAC,EACd,MAAO,UAAY,CAAG,CAAC,EAAE,AAC3B,EACJ,CACF,EACA,SAAU,CACR,QAAS,CAAC,OAAQ,UAAU,CAC5B,OAAQ,iCACR,OAAQ,SAAU,CAAO,CAAE,CAAI,MAl+BL,EAAM,EAm+B9B,OAAO,EAAa,YAAY,CAC7B,MAAM,EAp+Be,EAo+BO,EAAK,IAAI,CAh+B5C,CAFA,AADA,GAAU,CADwB,EAo+BY,EAAK,OAAO,EAn+BxC,KAAK,CAAC,KAAK,GAAG,CAAC,EAAc,CACxC,CAAC,EAAE,CAAG,CAAO,CAAC,EAAE,EAAI,EAC3B,CAAO,CAAC,EAAE,CAAG,CAAO,CAAC,EAAE,EAAI,EACvB,AAAS,MAAT,GACK,SAAU,CAAC,EAEhB,OAAO,EADP,EAAI,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,GACG,GAAW,CACrC,EACS,AAAS,OAAT,EACF,SAAU,CAAC,EAEhB,OAAO,EADP,EAAI,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,GACG,IAAY,CACtC,EACS,AAAS,MAAT,EACF,SAAU,CAAC,EAEhB,OADA,EAAI,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,GACd,EAAc,EAAS,GAAK,CACrC,EAEO,SAAU,CAAC,EAEhB,OADA,EAAI,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,GACd,EAAc,EAAS,IAAM,CACtC,IA88BK,GAAG,CAAC,SAAU,CAAC,EACd,MAAO,QAAU,CACnB,EACJ,CACF,EACA,YAAa,CACX,QAAS,CAAC,UAAW,OAAQ,UAAU,CACvC,OAAQ,iCACR,OAAQ,SAAU,CAAO,CAAE,CAAI,EAC7B,IAAI,EAAU,EAAK,OAAO,CACtB,EAAO,EAAU,EAAK,OAAO,CAAE,GAC/B,EAAQ,EAAa,cAAc,CAAC,EAAK,IAAI,CAAC,CAAC,EAAQ,CAE3D,OADI,GAAO,GAAU,CAAI,EAClB,EAAK,QAAQ,CACjB,MAAM,CAAC,EAAe,EAAK,IAAI,CAAE,IACjC,GAAG,CAAC,SAAU,CAAC,EACd,OAAO,EAAK,IAAI,CAAG,IAAM,CAC3B,EACJ,CACF,EACA,YAAa,CACX,QAAS,EAAE,CACX,OAAQ,2BACR,OAAQ,WACN,MAAO,CAAC,cAAc,AACxB,CACF,EACA,eAAgB,CACd,QAAS,EAAE,CACX,OAAQ,6BACR,OAAQ,WACN,MAAO,CAAC,cAAc,AACxB,CACF,EACA,iBAAkB,CAChB,QAAS,CAAC,UAAU,CACpB,OAAQ,yBACR,OAAQ,SAAU,CAAO,CAAE,CAAI,EAE7B,IAAI,EAAS,CAAG,CADG,EAAkB,EAAK,OAAO,EACnB,CAC9B,GAAI,CAAC,EACH,MAAM,IAAI,EACR,mBAAqB,EAAK,OAAO,CAAG,gBAGxC,MAAO,CAAC,UAAY,EAAO,AAC7B,CACF,EACA,mBAAoB,CAClB,QAAS,CAAC,UAAU,CACpB,OAAQ,kBACR,OAAQ,CACV,EACA,mBAAoB,CAClB,QAAS,CAAC,UAAU,CACpB,OAAQ,uBACR,OAAQ,CACV,EACA,mBAAoB,CAClB,QAAS,CAAC,UAAU,CACpB,OAAQ,4BACR,OAAQ,CACV,EACA,aAAc,CACZ,QAAS,EAAE,CACX,OAAQ,oBACR,OAAQ,SAAU,CAAO,EACvB,MAAO,CAAC,EAAI,WAAW,CAAC,EAAS,GAAS,AAC5C,CACF,EACA,gBAAiB,CACf,QAAS,EAAE,CACX,OAAQ,kCACR,OAAQ,SAAU,CAAO,EACvB,IAAI,EAAMG,KAAK,GAAG,GAYlB,OAAO,EAXOH,OAAO,IAAI,CAAC,GACvB,MAAM,CAAC,SAAU,CAAG,MAroCvB,EAsoCI,OACE,EAAMG,KAAK,KAAK,CAAC,CAAK,CAAC,EAAI,CAAC,GAAG,GAC/B,EAAMA,KAAK,KAAK,CAAC,CAAK,CAAC,EAAI,CAAC,KAAK,IAxoCvC,EAAU,AAyoCU,EAzoCL,KAAK,CAAC,GAClB,EAAa,YAAY,CAAC,IAAI,CAAC,SAAU,CAAC,EAC/C,OAAO,EAAgB,EAAG,EAC5B,GAwoCM,GACC,GAAG,CAAC,SAAU,CAAG,EAChB,MAAO,QAAU,EAAI,KAAK,CAAC,EAC7B,GACsB,EAC1B,CACF,EACA,cAAe,CACb,QAAS,EAAE,CACX,OAAQ,qBACR,OAAQ,WACN,MAAO,CAAC,WAAW,AACrB,CACF,EACA,cAAe,CACb,QAAS,EAAE,CACX,OAAQ,qBACR,OAAQ,WACN,MAAO,CAAC,WAAW,AACrB,CACF,EACA,gBAAiB,CACf,QAAS,CAAC,UAAW,UAAU,CAC/B,OAAQ,yBACR,OAAQ,SAAU,CAAO,CAAE,CAAI,EAC7B,IAAI,EAAU,EAAK,OAAO,AACtB,SAAQ,IAAI,CAAC,IAAU,GAAU,IAAG,EACxC,IAAI,EAAO,EAAU,EAAK,OAAO,CAAE,GAC/B,EAAQ,EAAiB,EAAM,GACnC,GAAI,EACF,EAAU,OAQV,GADA,EAAQ,EAAiB,EAJvB,EADE,AAAyB,KAAzB,EAAQ,OAAO,CAAC,KACV,EAAU,KAEV,EAAQ,OAAO,CAAC,OAAQ,KAIhC,EAAU,OACL,GAAI,EAAQ,qBAAqB,CACtC,MAAO,EAAE,MAET,MAAM,IAAI,EACR,mBAAqB,EAAU,OAAS,EAAK,OAAO,EAI1D,MAAO,CAAC,EAAK,IAAI,CAAG,IAAM,EAAQ,AACpC,CACF,EACA,oBAAqB,CACnB,QAAS,EAAE,CACX,OAAQ,yBACR,UAAW,GACX,OAAQ,SAAU,CAAO,EACvB,OAAO,EAAa,OAAW,EACjC,CACF,EACA,QAAS,CACP,QAAS,CAAC,SAAS,CACnB,OAAQ,kBACR,UAAW,GACX,OAAQ,SAAU,CAAO,CAAE,CAAI,EAC7B,OAAO,EAAQ,EAAI,WAAW,CAAC,EAAS,EAAK,MAAM,EAAG,EACxD,CACF,EACA,SAAU,CACR,QAAS,EAAE,CACX,OAAQ,cACR,OAAQ,SAAU,CAAO,EACvB,OAAO,EAAQ,EAAa,QAAQ,CAAE,EACxC,CACF,EACA,KAAM,CACJ,QAAS,EAAE,CACX,OAAQ,UACR,OAAQ,SAAU,CAAO,EASvB,OAAO,EARI,CACT,aACA,WACA,eACA,WACA,iBACA,YACD,CACoB,EACvB,CACF,EACA,QAAS,CACP,QAAS,EAAE,CACX,OAAQ,WACR,OAAQ,SAAU,CAAO,CAAE,CAAI,EAC7B,GAAI,EAAO,EAAK,KAAK,CAAE,GACrB,MAAM,IAAI,EACR,sDAAwD,EAAK,KAAK,CAGpE,OAx+BC,IAAI,EACT,0BAu+BuB,EAAK,KAAK,CAv+BjC,iEAy+BA,CACF,CACF,GAIC,AAAC,WACA,IAAK,IAAI,KAAQ,EAAQ,CACvB,IAAI,EAAU,CAAM,CAAC,EAAK,AAC1B,GAAa,IAAI,CAAC,EAAK,CAAG,CACxB,KAAM,EACN,SAAU,EAAU,CAAM,CAAC,EAAK,CAAC,QAAQ,EACzC,SAAU,EAAU,CAAM,CAAC,EAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAG,KACnD,YAAa,CAAM,CAAC,EAAK,CAAC,YAAY,AACxC,EACA,EAAU,EAAa,KAAK,CAAC,MAAM,CAAE,EAAM,EAAQ,YAAY,EAE/D,EAAa,cAAc,CAAC,EAAK,CAAG,CAAC,EACrC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAQ,QAAQ,CAAC,MAAM,CAAE,IAAK,CAChD,IAAI,EAAO,EAAQ,QAAQ,CAAC,EAAE,CAC9B,GAAK,GAED,AAAsB,KAAtB,EAAK,OAAO,CAAC,KAEf,IAAK,IADD,EAAW,EAAK,KAAK,CAAC,KACjB,EAAI,EAAG,EAAI,EAAS,MAAM,CAAE,IACnC,EAAa,cAAc,CAAC,EAAK,CAAC,CAAQ,CAAC,EAAE,CAAC,CAAG,CAGvD,CACF,CAEA,EAAa,YAAY,CAAG,EAAW,GAAG,CAAC,SAAU,CAAO,EAC1D,OAAO,EAAQ,OAAO,AACxB,EACF,IAEA,EAAO,OAAO,CAAG,C,mBCzyCjB,IAAI,EAAa,kBACb,EAAY,0BAmBhB,SAAS,EAAW,CAAG,CAAE,CAAK,EAC5B,IAAI,EAAO,CAAE,MAAO,CAAM,EAM1B,IAAK,IAAI,KALqB,IAA1B,EAAM,OAAO,CAAC,UAChB,EAAK,GAAG,CAAG,GACX,EAAQ,EAAM,KAAK,CAAC,IAGL,EAAK,CACpB,IAAI,EAAO,CAAG,CAAC,EAAK,CAChB,EAAQ,EAAM,KAAK,CAAC,EAAK,MAAM,EACnC,GAAI,EAAO,CACT,EAAK,IAAI,CAAG,EACZ,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,OAAO,CAAC,MAAM,CAAE,IACvC,CAAI,CAAC,EAAK,OAAO,CAAC,EAAE,CAAC,CAAG,CAAK,CAAC,EAAI,EAAE,CAEtC,OAAO,CACT,CACF,CAGA,OADA,EAAK,IAAI,CAAG,UACL,CACT,CAyBA,EAAO,OAAO,CAAG,SAAe,CAAG,CAAE,CAAO,EAE1C,OADI,AAACF,MAAM,OAAO,CAAC,IAAU,GAAU,CAAC,EAAQ,AAAD,EACxC,AAjET,SAAS,EAAQ,CAAK,SACpB,AAAKA,MAAM,OAAO,CAAC,GACZ,EAAM,MAAM,CAAC,SAAU,CAAC,CAAE,CAAC,EAChC,OAAO,EAAE,MAAM,CAAC,EAAQ,GAC1B,EAAG,EAAE,EAH6B,CAAC,EAAM,AAI3C,EA6DI,EAAQ,GAAG,CAAC,SAAU,CAAK,EACzB,IAAI,EAAK,EAAE,CACX,GACE,EAAQ,AA7BhB,SAAoB,CAAG,CAAEH,CAAM,CAAE,CAAE,EAhCjC,IAAK,IAkCyB,EAAQ,EAAG,EADrC,EAjCK,EAAM,AAkCHA,EAlCU,MAAM,CAAE,EAAI,EAAG,GAAK,EAAK,IAE7C,IAgC4B,EAjCf,AAiCHA,EAjCU,MAAM,CAAC,CAAC,EAAG,GAiCK,EAhCd,EAgCiB,EAhCd,EAiCzB,AAAI,EAAW,IAAI,CAAC,IAElB,AADA,GAAO,EAAW,EAAK,EAAO,KAAK,CAAC,EAAW,CAAC,EAAE,GAC7C,OAAO,CAAG,MACf,EAAG,OAAO,CAAC,GACJ,IACE,EAAU,IAAI,CAAC,IAExB,AADA,GAAO,EAAW,EAAK,EAAO,KAAK,CAAC,EAAU,CAAC,EAAE,GAC5C,OAAO,CAAG,KACf,EAAG,OAAO,CAAC,GACJ,IACE,IAAM,IAEf,AADA,GAAO,EAAW,EAAK,EAAO,IAAI,GAAE,EAC/B,OAAO,CAAG,KACf,EAAG,OAAO,CAAC,GACJ,IA9CP,OAAO,AA+BCA,EA/BM,KAAK,CAAC,EAAG,CAAC,EAC1B,CAEF,MAAO,EA+CT,EAQ2B,EAAK,EAAO,SACxB,EAAM,CACf,OAAO,CACT,GAEJ,C,kgBAAgaAAakBAAkqBAAqeAAeqBAAqsBAAsyBAAyB,EAAE,CAAC,GAAG,UAAU,EAAE,EAAE,CAAC,GAAG,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAI,EAAE,EAAI,SAAU,EAAI,SAAU,EAAI,SAAU,EAAE,EAAE,GAAG,SAAU,GAAG,SAAU,GAAG,SAAU,GAAG,SAAU,GAAG,QAAQ,GAAG,EAAE,GAAG,EAAE,GAAG,SAAU,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,SAAS,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG,GAAG,GAAG,CAAC,EAAE,mBAAmaAAagBAAggBAAgB,EAAE,CAAC,GAAG,WAAW,KAAK,SAAU,CAAC,CAAC,C,oBCAzuuB,EAAO,OAAO,CAAC,CAAC,EAAI,MAAM,EAAI,MAAM,EAAI,MAAM,EAAI,MAAM,EAAI,MAAM,EAAI,MAAM,EAAI,KAAK,EAAI,KAAK,EAAI,KAAK,EAAI,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,MAAM,GAAG,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,OAAO,GAAG,YAAY,GAAG,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,YAAY,GAAG,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,UAAU,GAAG,MAAM,GAAG,IAAI,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,KAAK,GAAG,UAAU,GAAG,YAAY,GAAG,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,UAAU,GAAG,UAAU,GAAG,UAAU,GAAG,UAAU,GAAG,UAAU,GAAG,UAAU,GAAG,MAAM,GAAG,YAAY,GAAG,OAAO,G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AAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,MAAM,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,MAAM,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,KAAK,EAAE,MAAM,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,MAAM,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,MAAM,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,OAAO,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,cAAc,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,MAAM,EAAE,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,MAAM,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,MAAM,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,MAAM,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,MAAM,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,KAAK,GAAG,KAAK,EAAE,MAAM,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,MAAM,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,MAAM,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,MAAM,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,MAAM,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,IAAI,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,IAAI,GAAG,IAAI,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,cAAc,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,IAAI,EAAE,QAAQ,GAAG,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,cAAc,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,MAAM,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,MAAM,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,MAAM,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,MAAM,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,KAAK,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,MAAM,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,MAAM,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,MAAM,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,OAAO,GAAG,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,MAAM,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,E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IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,KAAK,IAAI,IAAI,MAAM,CAAC,EAAE,eAAe,CAAC,SAAS,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,SAAS,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,SAAS,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,SAAS,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,SAAS,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,KAAK,IAAI,IAAI,MAAM,CAAC,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC,KAAK,aAAa,IAAI,KAAK,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,KAAK,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,KAAK,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,KAAK,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,KAAK,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,KAAK,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,KAAK,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,QAAQ,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,IAAI,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,QAAQ,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,QAAQ,CAAC,EAAE,gBAAgB,CAAC,SAAS,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,IAAI,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,aAAa,IAAI,KAAK,KAAK,CAAC,CAAC,IAAI,aAAa,IAAI,KAAK,KAAK,CAAC,CAAC,IAAI,aAAa,IAAI,KAAK,KAAK,CAAC,CAAC,IAAI,aAAa,IAAI,KAAK,KAAK,CAAC,CAAC,IAAI,aAAa,IAAI,KAAK,KAAK,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,IAAI,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,OAAO,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,KAAK,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,KAAK,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,OAAO,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,OAAO,CAAC,CAAC,MAAM,aAAa,IAAI,KAAK,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,KAAK,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,KAAK,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,IAAI,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,IAAI,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,IAAI,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,IAAI,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,IAAI,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,IAAI,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,EAAE,cAAc,CAAC,SAAS,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,OAAO,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,SAAS,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,OAAO,CAAC,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,SAAS,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,SAAS,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,SAAS,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,SAAS,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,SAAS,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,SAAS,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,UAAU,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,UAAU,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,UAAU,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,UAAU,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,UAAU,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,UAAU,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,UAAU,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,UAAU,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,UAAU,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,UAAU,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,UAAU,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,UAAU,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,UAAU,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,UAAU,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,UAAU,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,UAAU,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,OAAO,KAAK,IAAI,IAAI,UAAU,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,SAAS,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,SAAS,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,WAAW,CAAC,EAAE,WAAW,CAAC,SAAS,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,SAAS,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,SAAS,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,SAAS,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,QAAQ,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,SAAS,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,SAAS,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,SAAS,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,UAAU,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,UAAU,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,UAAU,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,UAAU,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,UAAU,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,UAAU,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,UAAU,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,UAAU,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,UAAU,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,UAAU,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,UAAU,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,UAAU,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,UAAU,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,UAAU,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,UAAU,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,UAAU,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,UAAU,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,WAAW,CAAC,CAAC,OAAO,KAAK,IAAI,IAAI,UAAU,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,SAAS,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,SAAS,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,WAAW,CAAC,EAAE,wBAAwB,CAAC,SAAS,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,SAAS,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,KAAK,CAAC,EAAE,gBAAgB,CAAC,SAAS,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,SAAS,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,SAAS,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,SAAS,CAAC,CAAC,IAAI,aAAa,IAAI,IAAI,SAAS,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,KAAK,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,SAAS,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,QAAQ,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,QAAQ,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,GAAk9jE,EAAE,EAAh9jE,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,QAAQ,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,QAAQ,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,QAAQ,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,QAAQ,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,QAAQ,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,QAAQ,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,QAAQ,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,QAAQ,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,QAAQ,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,QAAQ,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,QAAQ,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,QAAQ,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,QAAQ,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,QAAQ,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,QAAQ,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,QAAQ,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,QAAQ,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,QAAQ,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,QAAQ,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,QAAQ,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,QAAQ,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,QAAQ,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,QAAQ,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,EAAE,WAAW,CAAC,SAAS,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,QAAQ,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,QAAQ,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,QAAQ,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,QAAQ,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,QAAQ,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,QAAQ,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,EAAE,WAAW,CAAC,SAAS,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,OAAO,aAAa,IAAI,IAAI,MAAM,CAAC,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,EAAE,iBAAiaAAa,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,EAAE,kBAAkaAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,aAAa,IAAI,IAAI,MAAM,CAAC,CAAC,GAA2ohD,EAAE,CAAC,SAAS,iBAAiB,OAAO,UAAU,kBAAkB,SAAS,aAAa,CAAC,EAAEpB,OAAO,OAAO,CAACoB,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC,kBAAkB,0BAA0B,gBAAgB,QAAQ,CAAC,EAAE,IAAIpB,OAAO,OAAO,CAACoB,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,QAAQ,CAAC,OAAOpB,OAAO,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,UAAU,MAAM,UAAU,UAAU,OAAO,UAAU,CAAK,EAAE,CAAC,EAAQ,EAAE,IAAI,CAAC,IAAI,EAAE,yBAAyB,EAAE,CAAC,IAAI,EAAE,YAAY,EAAGyB,CAAAA,QAAQ,GAAG,CAAC,AAAI9B,MAAM,8JAA8J,EAAQ,IAAI,CAAC,EAAC,CAAE,EAAE,EAAE,GAAG,GAAG,EAAE,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,KAAK,GAAG,IAAI,EAAE,OAAO,EAAE,GAAK,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,GAAG,GAAG,CAACgB,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,GAAG,GAAG,CAACA,QAAQ,GAAGO,MAAM,IAAIA,MAAM,GAAG,MAAM,AAAIvB,MAAM,CAAC,iBAAiB,EAAE,EAAE,CAAC,EAAE,GAAGuB,MAAM,IAAIA,MAAM,GAAG,MAAM,AAAIvB,MAAM,CAAC,iBAAiB,EAAE,EAAE,CAAC,EAAE,OAAO,IAAI,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EAA21C,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,IAAM,EAAE,IAAI,IAAI,EAAE,OAAO,GAAG,EAAE,MAAM,CAAC,EAAE,MAAQ,GAAE,EAAE,MAAM,CAAC,GAAG,EAAE,OAAO,GAAG,GAAG,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,OAAO,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,AAAD,EAAe,KAAK,EAAE,EAAE,OAAO,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,WAAW,GAAG,CAAC,GAAG,CAAC,EAAE,MAAM,AAAIA,MAAM,oFAAoF,IAAI,EAAE,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAE,YAAW,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,IAAI,EAAE,GAAG,CAAC,EAAE,QAAQ,CAAC,OAAO,IAAI,EAAEK,OAAO,OAAO,CAAC,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE,IAAI,GAAK,CAAC,OAAO,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,MAAM,CAAE,EAAC,GAAG,CAAC,IAAK,WAAU,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,CAAE,WAAU,GAAG,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,IAAM,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAK,CAAC,EAAE,EAAE,CAAC,EAAM,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,aAAa,MAAQ,GAAE,EAAE,YAAY,AAAD,EAAe,EAAE,SAAS,EAAE,GAAG,EAAE,MAAM,EAAE,EAAE,cAAc,EAAG,GAAE,MAAM,CAAC,EAAE,MAAM,CAAC,EAAE,cAAc,CAAC,EAAE,cAAc,AAAD,EAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,0BAA0B,MAAQ,GAAE,EAAE,yBAAyB,AAAD,GAAgB,EAAE,0BAA0B,MAAQ,GAAE,EAAE,yBAAyB,AAAD,GAAgB,EAAE,sBAAsB,MAAQ,GAAE,EAAE,qBAAqB,AAAD,EAAe,EAAE,KAAK,EAAE,WAAW,MAAQ,GAAE,EAAE,UAAU,AAAD,EAAe,EAAE,KAAK,EAAE,aAAa,MAAQ,GAAE,EAAE,YAAY,AAAD,GAAgB,CAAC,EAAE,EAAE,IAAIG,IAAK,GAAE,GAAG,EAAE,qBAAqB,EAAE,EAAE,UAAU,CAAC,EAAE,UAAU,EAAE,EAAE,qBAAqB,CAAEsB,CAAAA,QAAQ,GAAG,CAAC,AAAI9B,MAAM,6HAA6H,EAAQ,IAAI,CAAC,EAAC,EAAG,EAAE,qBAAqB,CAAC,EAAE,IAAIQ,KAAK,EAAE,qBAAqB,EAAE,EAAE,UAAU,EAAG,GAAE,IAAIA,KAAK,CAAC,EAAE,EAAE,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,IAAIA,KAAK,AAAC,GAAE,qBAAqB,EAAE,KAAK,IAAI,EAAE,UAAU,AAAD,GAAI,EAAE,QAAQ,CAAC,EAAE,QAAQ,GAAG,IAAI,IAAI,EAAE,AAAnsF,EAAC,EAAE,EAAE,CAAC,CAAC,QAAsmB,MAAQuB,EAA57B,EAAkV,GAAG,AAAgB,KAAhB,EAAE,WAAW,IAAS,CAAC,GAAGD,QAAQ,IAAI,CAAC,AAAI9B,MAAM,6GAA6G,AAAgB,KAAhB,EAAE,WAAW,GAAQ,MAAM,AAAIA,MAAM,kGAAkG,GAAG,EAAE,WAAW,GAAG,AAAC,KAAIQ,IAAG,EAAG,WAAW,GAAG,MAAM,AAAIR,MAAM,wEAAwE,IAAmL,GAAG,EAA1K,EAAE,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,iBAAiB,EAAE,IAAIQ,KAAK,EAAE,MAAM,CAAC,iBAAiB,GAAyF,GAAnF,GAAG,CAAC,GAAI,EAAC,kBAAkB,EAAE,MAAM,CAAC,iBAAiB,CAAC,QAAQ,EAAE,MAAM,CAAC,OAAO,IAAmBuB,EAAE,CAAC,EAAS1B,OAAO,OAAO,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,EAAE,IAAI0B,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,QAAQ,IAAI,aAAa,EAAE,CAAC,GAAG,EAAE,OAAO,CAAC,IAAI1B,OAAO,OAAO,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC,IAAI,IAAMN,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAEgC,CAAAA,CAAC,CAAChC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAEgC,CAAC,CAAChC,EAAE,CAAC,OAAO,IAAKgC,CAAAA,CAAC,CAAChC,EAAE,CAAC,CAAC,QAAQA,EAAE,QAAQ,EAAE,aAAa,EAAE,iBAAiB,EAAE,EAAE,GAAGM,OAAO,MAAM,CAAC0B,IAAQ,OAAO,EAAE,IAAI,MAAhvC,EAAE,EAAE,CAAQ,AAA2uC,EAAzuC,OAAO,CAAC,IAAI,IAAI,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,OAAO,CAAK,IAAG1B,OAAO,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,QAAQ,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,EAAEN,EAAE,GAAG,CAAC,CAAC,EAAE,QAAQ,CAACA,EAAE,MAAM,GAAI,IAAI,EAAE,EAAE,EAAE,OAAO,GAAI,GAAE,IAAI,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,QAAQ,EAAE,aAAaA,EAAE,YAAY,CAACA,EAAE,YAAY,CAAC,SAAS,GAAG,CAAC,GAAK,GAAG,GAAw7B,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,EAAE,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,EAAE,OAAO,CAAC,EAAE,EAAE,EAAE,OAAO,CAAC,EAAE,OAAO,GAAG,CAAC,GAA+rD,EAAE,EAAE,yBAAyB,EAAE,MAAM,CAAC,IAAI,EAAE,yBAAyB,CAAC,EAAE,IAAI,KAAK,EAAE,EAAE,EAAE,yBAAyB,CAAC,EAAE,YAAY,EAAE,CAAC,EAAQ,cAAc,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,aAAa,MAAQ,GAAE,EAAE,YAAY,AAAD,EAAe,EAAE,QAAQ,0BAA0B,MAAQ,GAAE,EAAE,yBAAyB,AAAD,GAAgB,EAAE,YAAY,MAAQ,GAAE,EAAE,WAAW,AAAD,GAAgB,EAAE,aAAa,MAAQ,GAAE,EAAE,YAAY,AAAD,GAAgB,CAAC,EAAE,EAAE,GAAG,IAAI,EAAE,AAAC,KAAIS,IAAG,EAAG,WAAW,GAAG,EAAQ,EAAE,IAAIF,MAAM,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,WAAW,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,EAAG,EAAC,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,EAAE,GAAG,IAAM,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,IAAM,EAAE,IAAIE,KAAK,EAAE,QAAQ,CAAC,EAAE,QAAQ,GAAG,IAAI,IAAM,EAAE,EAAE,CAAC,sBAAsB,EAAE,WAAW,GAAG,KAAK,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,IAAMwB,EAAE,EAAE,CAAC,WAAW,KAAK,0BAA0B,CAAC,CAAC,GAAG,EAAE,EAAE,CAA++B,GAAG,AAA9+B,EAAE,OAAO,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAEA,EAAE,MAAM,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,OAAO,CAAC,EAAE,OAAO,GAAG,EAAE,MAAQ,GAAE,MAAQ,GAAE,CAAC,CAAC,EAAE,AAAD,EAAe,KAAK,EAAE,EAAE,OAAO,AAAD,EAAe,EAAE,IAAIC,EAAE,MAAQ,GAAE,MAAQ,GAAE,CAAC,CAAC,EAAE,AAAD,EAAe,KAAK,EAAE,EAAE,OAAO,AAAD,EAAe,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,AAAC,OAAQ,GAAE,CAAC,CAAC,EAAE,CAAC,EAAE,AAAD,EAAe,EAAE,CAAC,QAAQ,GAAG,GAAG,OAAO,CAAC,EAAE,EAAE,SAAS,CAAC,GAAG,IAAI,EAAE,EAAE,OAAO,CAAC,GAAI,CAAC,KAAI,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,EAAC,EAAG,OAAO,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,OAAO,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,CAACA,IAAI,EAAE,EAAE5B,OAAO,MAAM,CAACA,OAAO,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,GAAG,KAAK,eAAe,EAAE,CAAC,EAAG,GAAE,WAAW,CAAE,IAAI,GAAE,QAAQ,CAAC,QAAO,EAAG,GAAI,GAAE,QAAQ,CAAC,OAAM,CAAC,EAAG,EAAEA,OAAO,MAAM,CAACA,OAAO,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE,GAA3qB,AAA8qB,EAAE,yBAAyB,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,YAAY,EAAE,OAAO,CAAC,IAAI,IAAI,EAAE,EAAE,IAAI,CAAC,GAAG,WAAW,EAAE,OAAO,EAAE,EAAE,OAAO,GAAG,EAAE,cAAc,CAAE,IAAI,GAAE,WAAW,CAAC,EAAE,IAAI,CAACA,OAAO,MAAM,CAACA,OAAO,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,EAAE,QAAQ,IAAI,EAAE,IAAI,CAACA,OAAO,MAAM,CAACA,OAAO,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,cAAc,EAAE,aAAa,GAAE,CAAE,GAAM,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,GAAG,iBAAiB,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,CAAC,OAAM,GAAG,GAAG,iBAAiB,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,CAAC,OAAO,EAAE,GAAG,iBAAiB,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,OAAM,GAAG,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,EAAE,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,EAAE,OAAO,CAAC,EAAE,EAAE,EAAE,OAAO,CAAC,EAAE,OAAO,CAAC,GAAG,WAAW,EAAE,YAAY,CAAC,CAAC,IAAM,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC,EAAG,EAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,EAAE,YAAY,CAAC,OAAO,EAAE,MAAM,CAAC,eAAe,EAAE,cAAc,CAAE,EAAC,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,WAAW,CAAC,EAAE,QAAQ,CAACA,OAAO,MAAM,CAACA,OAAO,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,SAAS,EAAE,QAAQ,GAAG,EAAEA,OAAO,MAAM,CAACA,OAAO,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,cAAc,EAAE,aAAa,EAAE,GAAG,MAAM,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,QAAQ,EAAE,YAAY,CAAC,CAAC,IAAI,EAAE,CAAC,4BAA4B,EAAE,EAAE,WAAW,CAAC,WAAW,gBAAgB,0CAA0C,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,QAAQ,EAAE,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,MAAQ,GAAE,EAAE,YAAY,AAAD,EAAe,EAAE,OAAO,OAAO,MAAQ,GAAE,EAAE,MAAM,AAAD,EAAe,EAAE,OAAO,eAAe,MAAQ,GAAE,EAAE,cAAc,AAAD,EAAe,EAAE,MAAM,CAAE,GAAE,EAAE,WAAW,CAACA,OAAO,MAAM,CAACA,OAAO,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,SAAS,MAAQ,GAAE,EAAE,QAAQ,AAAD,EAAe,EAAE,EAAE,GAAGA,OAAO,MAAM,CAACA,OAAO,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,cAAc,EAAE,aAAa,GAAG,GAAG;AAAG,CAAC,EAAE,EAAE,OAAO,CAAC,GAAG,EAAE,EAAE,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,WAAW,CAAC,EAAE,QAAQ,CAAC,EAAE,aAAa,CAAC,GAAG,EAAE,EAAE,YAAY,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC,GAAG,EAAE,EAAE,cAAc,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,EAAE,EAAQ,qBAAqB,CAAC,C,0DCQ/u8G,E,qBAYlB,MAXC,AAAI,AAAS,QADI,EAYO,YAVhB,WACL,MAAM,CAAC,QACP,KAAK,GAED,WACL,MAAM,CAAC,QACP,MAAM,CAAC,EAAK,GAAG,EACf,KAAK,GAK2B,WACjC,MAAM,CAAC,kBACP,UAAU,GACV,KAAK,E,sDClBP,MAAe,G,SAAA,YAAW,QACxB,aAAa,GACb,OAAO,GACP,KAAK,E,2FCCA,IAAM,EAA0B,SAAkB,CAAE,oBAAqB,GAAM,SAAU,CAAmB,GAClF,EAAa,E,2ICD9C,IAAM,EAAe,SAAY,gBAE3BoB,EAAsB,AAA8C,SAA9C,WAAsB,CAHjB,8BASpB,EAAuB,WACnC,GAAItB,EAAA,MAA4B,CAAC+B,UAAU,SAAS,EAAG,YACtD,SAAY,CAAC,uDAKd,GAAIT,EAAqB,YACxB,SAAY,CAAC,uEAMd,GAAIU,AAAmD,KAAnDA,OAAO,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAsB,CAC1D,IAAM,EAAcA,OAAO,QAAQ,CAAC,IAAI,CAAC,OAAO,CAACA,OAAO,QAAQ,CAAC,MAAM,CAAE,IACnE,EAAc,EAAO,IAAI,CAAC,GAAa,QAAQ,CAAC,UACtDC,QAAQ,SAAS,CAAC,KAAM,KAAM,CAAC,EAAE,EAAa,cAAc,EAAE,EAAY,CAAC,EAC3ED,OAAO,QAAQ,CAAC,MAAM,EACvB,CACD,C,uDCvCA,IASG,EAAI,CAAC,EAAG,EAAG,SAGc,EAAGhC,EAF7B,IAAM,EAAIE,OAAO,MAAM,CAAC,CACtB,OAAQ,CAAC,CACX,EAAG,GAAK,CAAC,GAST,MAAO,AAAgB,MAAhB,EAAE,MAAM,CAAC,IAAe,GAAI,IAAM,GATf,EASqB,EARtCF,EADoBA,EASqB,GAAK,CAAC,EARlC,EAAE,OAAO,CAC3B,cACA,SAAS,CAAC,CAAE,CAAC,EACX,IAAM,EAAIA,CAAC,CAAC,EAAE,CACd,OAAO,EAAE,MAAM,CAAGkC,mBAAmB,AAAY,UAAZ,OAAO,GAAiB,AAAY,UAAZ,OAAO,EAAgB,EAAE,QAAQ,GAAK,GAAK,AAAY,UAAZ,OAAO,GAAiB,AAAY,UAAZ,OAAO,EAAgB,EAAE,QAAQ,GAAK,CACxK,EAIN,EAAG,EAAI,CAAC,EAAG,EAAG,KACZ,IAAI,EAAG,EAAG,EACV,IAAM,EAAIhC,OAAO,MAAM,CAAC,CACtB,UAAW,CAAC,CACd,EAAG,GAAK,CAAC,GAAI,EAAI,AAAwC,MAAvC,GAAI,AAAK,MAAL,EAAY,KAAK,EAAI,EAAE,OAAO,AAAD,EAAa,EAAI,AAQtE,WACE,IAAI,EAAI8B,OAAO,WAAW,CAC1B,GAAI,OAAO,EAAI,IAAK,CAElB,IAAM,EAAI,AADV,GAAIG,SAAS,QAAQ,AAAD,EACR,OAAO,CAAC,eACpB,GAAI,AAAM,KAAN,EACF,EAAI,EAAE,KAAK,CAAC,EAAG,OACZ,CACH,IAAM,EAAI,EAAE,OAAO,CAAC,IAAK,GACzB,EAAI,EAAE,KAAK,CAAC,EAAG,EAAI,EAAI,EAAI,KAAK,EAClC,CACF,CACA,OAAO,CACT,IApBE,MAAO,AAAC,CAA+E,MAA9E,GAAI,AAA6C,MAA5C,GAAIH,AAAU,MAAVA,OAAiB,KAAK,EAAIA,OAAO,EAAE,AAAD,EAAa,KAAK,EAAI,EAAE,MAAM,AAAD,EAAa,KAAK,EAAI,EAAE,iBAAiB,AAAD,IAAO,CAAC,GAAM,EAAE,SAAS,CAAoB,EAAI,aAAe,EAAE,EAAG,EAAG,GAA5C,EAAI,EAAE,EAAG,EAAG,EACnK,C,2DCNU,EADN,E,iCAbA,SAAS,EAAgB,CAAO,QAChC,AAAI,AAAmB,UAAnB,OAAO,EACA,EAEP,AAAmB,IAAnB,EAAQ,MAAM,CACP,CAAO,CAAC,EAAE,CAEd,CACH,CAAO,CAAC,EAAE,CACV,CAAO,CAAC,EAAQ,MAAM,CAAG,EAAE,CAC9B,AACL,CAaI,SAAS,EAAU,CAAO,EAC1B,IAAM,EAAe7B,MAAM,OAAO,CAAC,GAAW,EAAU,EAAQ,QAAQ,GAAG,KAAK,CAAC,KACjF,GAAI,AAAoB,QAApB,CAAY,CAAC,EAAE,CACf,MAAO,CACH,IACA,EACA,EACH,CAEL,IAAI,EAAc,KACd,EAAa,KACXH,EAAS,CACX,EACA,EACA,EACH,CACD,IAAI,IAAI,EAAI,EAAG,EAAI,EAAG,IAElB,GAAI,AAAuB,SAD3B,GAAc,CAAY,CAAC,EAAE,AAAD,GAK5B,GAAIoB,MADJ,EAAa,AAAuB,UAAvB,OAAO,EAA2B,EAAcrB,SAAS,EAAa,KAE/E,OAAO,IAEXC,CAAAA,CAAM,CAAC,EAAE,CAAG,EAEhB,OAAOA,CACX,CA0BI,SAASc,EAAe,CAAC,CAAE,CAAC,CAAE,CAAO,EACrC,GAAM,CAAC,EAAO,EAAO,EAAM,CAAG,EACxB,CAAC,EAAW,EAAW,EAAU,CAAG,EACpC,CAAEQ,YAAAA,CAAW,CAAG,aAAW,CAAG,qBAAmB,CAAG,CAAG,EAC7D,GAAI,IAAc,IACd,MAAO,GAEX,IAAM,EAAe,CAACA,EAChB,EAAe,GAAgB,CAAC,SACtC,AAAI,EACA,AAAI,MAAgB,GAAQ,CAAQ,IAAK,MAAgB,GAAQ,CAAQ,IAGlE,GAAS,EAEpB,AAAI,KAAgB,IAAU,CAAQ,GAAK,KAAgB,IAAU,CAAQ,GAGtE,IAAU,CACrB,CAuFI,SAAS,EAAO,CAAK,EACrB,MAAO,EAAE,CAAC,MAAM,IAAI,EACxB,CA4GA,SAAS,EAAgB,GAAGX,CAAW,EACnC,IAAM,EAAO,EAAOA,GAAa,MAAM,CAACa,gBACxC,AAAI,AAAgB,IAAhB,EAAK,MAAM,CACJ,CAAI,CAAC,EAAE,CAEX,CACH,KAAM,cACN,YAAa,CACjB,CACJ,CACA,SAAS,EAAe,CAAK,EACzB,MAAO,CACH,KAAM,OACN,KAAM,SACN,MAAOC,OAAO,GACd,UAAWF,GACf,CACJ,CASA,SAAS,EAAe,CAAI,CAAE,CAAE,EAC5B,MAAO,CACH,KAAM,aACN,OACA,IACJ,CACJ,CACA,SAAS,EAAmB,GAAGZ,CAAW,EACtC,MAAO,CACH,KAAM,iBACN,YAAa,EAAOA,GAAa,MAAM,CAACa,QAC5C,CACJ,CAiBA,SAAS,EAAmBb,CAAU,EAClC,MAAO,CACH,KAAM,QACN,UAAW,GACXA,WAAAA,EACA,OAAQ,IACZ,CACJ,CAgCA,SAAS,EAA8B,GAAGA,CAAW,EACjD,IAAM,EAAO,AAzBjB,SAAyB,GAAGA,CAAW,EACnC,IAAM,EAAQ,EAAOA,GAAa,MAAM,CAACa,SACzC,GAAI,AAAiB,IAAjB,EAAM,MAAM,CACZ,OAAO,CAAK,CAAC,EAAE,CAEnB,IAAM,EAAc,CAChB,KAAM,cACN,KAAM,KACN,MAAO,EAAM,GAAG,EACpB,EAaA,OAZA,EAAM,WAAW,CAAC,CAAC,EAAa,EAAM,IAClC,AAAI,AAAM,IAAN,GACA,EAAY,IAAI,CAAG,EACZ,IAEX,EAAY,IAAI,CAAG,CACf,KAAM,cACN,KAAM,KACN,MAAO,CACX,EACO,EAAY,IAAI,EACxB,GACI,CACX,KAEoCb,SAChC,AAAI,AAAc,gBAAd,EAAK,IAAI,CACF,EAAmB,GAEvB,CACX,CACA,SAAS,IACL,MAnFO,CACH,KAAM,OACN,KAAM,OACN,MAgFgB,MA/EhB,UAAWY,GACf,CA+EJ,CACA,SAAS,EAAkB,EAAa,AAjExC,SAA8B,CAAI,EAC9B,MAAO,CACH,KAAM,aACN,KA8DqD,IA7DrD,OAAQ,EACZ,CACJ,EA2D6D,EAAI,EAE7D,OAzCI,KAAM,aACN,WAuCiC,IAtCjC,WAsCqD,EAE7D,CACA,SAAS,EAAgB,CAAK,EAC1B,OAAO,EAAgBpB,MAAM,IAAI,CAACsB,OAAO,GAAQ,GACrD,CAMI,SAAS,EAAoB,CAAI,EACjC,GAAI,AAAc,UAAd,EAAK,IAAI,EAAgB,AAAyB,eAAzB,EAAK,UAAU,CAAC,IAAI,CAAmB,CAChE,GAAM,CAAE,YAAU,CAAG,YAAU,CAAG,CAAG,EAAK,UAAU,CACpD,MAAO,AAAoB,SAApB,EAAW,IAAI,EAAe,AAAqB,QAArB,EAAW,KAAK,EAAc,AAAoB,MAApB,EAAW,IAAI,EAAY,EAAW,MAAM,AACnH,CACA,MAAO,EACX,CAMI,SAAS,EAAW,CAAI,CAAE,CAAK,QAC/B,EAAI,GAAQ,AAAc,SAAd,EAAK,IAAI,EACV,CAAiB,SAAV,GAAyB,aAAiBR,QAAU,EAAM,IAAI,CAAC,EAAK,KAAK,GAAKQ,OAAO,KAAW,EAAK,KAAK,AAAD,CAG/H,CAKI,SAAS,EAAiB,CAAI,EAC9B,GAAI,AAAc,mBAAd,EAAK,IAAI,EAAyB,AAA4B,IAA5B,EAAK,WAAW,CAAC,MAAM,CAAQ,CACjE,GAAM,CAAC,EAAW,CAAG,EAAK,WAAW,CACrC,MAAO,AAAoB,eAApB,EAAW,IAAI,EAAqB,EAAW,EAAW,IAAI,CAAE,OAAS,EAAW,EAAW,EAAE,CAAE,KAC9G,CACA,MAAO,EACX,CAKI,SAAS,EAAiB,CAAI,EAC9B,MAAO,AAAc,WAAd,EAAK,IAAI,EAAiB,AAAc,eAAd,EAAK,IAAI,EAAqB,AAAc,eAAd,EAAK,IAAI,AAC5E,CACA,SAAS,EAAW,CAAK,EACrB,MAAO,AAAiB,UAAjB,OAAO,EAAqB,OAAgB,CAAC,EAAM,OAAO,CAAC,UAAW,OAAO,OAAO,CAAC,UAAW,QAAU,aAAiBR,OAAS,OAAgB,CAAC,GAAS,CACzK,CAjbI,CADM,EAIP,GAAe,GAAa,CAAC,GAHlB,CAAC,EAAW,KAAQ,CAAG,EAAE,CAAG,QACtC,CAAU,CAAC,EAAW,KAAQ,CAAG,EAAE,CAAG,QACtC,CAAU,CAAC,EAAW,KAAQ,CAAG,EAAE,CAAG,QA+b1C,IAAM,EAAU,CACZ,SACA,cACA,cACA,YACA,OACA,iBACA,aACA,gBACA,QACA,aACA,aACH,CAKG,SAAS,EAAS,CAAQ,EAC1B,GAAM,CAAE,OAAK,CAAG,CAAG,SACnB,AAAK,EAGD,AAAiB,YAAjB,OAAO,EACA,CAEH,IAAK,EACL,GAAG,CAAQ,AACf,EAEG,EAAQ,MAAM,CAAC,CAAC,EAAa,KAChC,IAAM,EAAU,CAAQ,CAAC,EAAU,CAC7B,EAAa,EAAU,QAAS,EAAU,EAAQ,GAAG,CAAG,EAAU,KAClE,EAAc,GAAU,SAAU,EAAU,EAAQ,IAAI,CAAG,KAejE,OAdA,CAAW,CAAC,EAAU,CAAG,CACrB,IAAK,GACD,AAA4B,KAAxB,EAAM,GAAG,CAAC,KAAuB,GAC1B,EAAW,GAI1B,KAAM,GACF,AAA6B,KAAzB,EAAM,IAAI,CAAC,KAAuB,GAC3B,EAAY,EAI/B,EACO,CACX,EAAG,CAAC,GA5BO,CA6Bf,CAoFI,SAAS,EAAe,CAAG,EAC3B,OAAOd,MAAM,IAAI,CAAC,EAAI,QAAQ,GAAIU,OACtC,CAOI,SAAS,EAAqB,CAAK,CAAE,CAAQ,EAC7C,IAAMjB,EAAa,EAAQiB,OAAO,CAAC,UACnC,AAAIjB,AAAe,IAAfA,EACO,IAEPA,AAAe,IAAfA,EACO,EAAe,KAEtBA,EAAa,EACN,KAEJ,EAAmB,EAAe,EAAeA,GAAa,EAAe,MACxF,CA4DI,SAAS,EAA0B,CAAI,CAAE,CAAE,CAAE,CAAK,EAClD,GAAI,EAAK,EACL,OAAO,KAEX,IAAM,EAAW,EAAe,GAC1B,EAAS,EAAe,GACxB,EAAc,AAAiB,UAAjB,OAAO,GAAsB,EAAQ,EAAIO,MAAM,IAAI,CAAC,CACpE,OAAQ,CACZ,EAAG,IAAI,EAAe,IAAM,EAAE,CACxB,EAAY,EAAY,MAAM,CAAG,AAAC,GAAO,EAAgB,EAAa,GAAQ,AAAC,GAAO,SAEjF,EAAU,AADjB,IAAS,EACQ,EAGA,AADjB,AAAS,IAAT,GAAc,AAAO,IAAP,EACG,IAGA,AADjB,EAAK,GAAS,EACG,EAAmB,EAAU,GAEjC,EAAmB,EAAe,EAAU,IACjE,CAiII,SAAS,EAAa,CAAI,CAAE,EAAK,GAAQ,EACzC,GAAI,IAAS,IACT,OAAO,IAEX,IAAM,EAAiB,IAAO,IAAW,AAhNzC,SAA6B,CAAI,EACjC,GAAI,AAAS,IAAT,EACA,MAAO,CACH,IACH,CAEL,IAAM,EAAS,EAAe,GACxB,EAAc,EAAO,MAAM,CAC3B,EAAQ,EAlSP,CACH,KAAM,aACN,KAAM,QACN,KA+RgD,EAAc,EA9R9D,GAL2B,OAM3B,OAAQ,EACZ,GA6RM,EAAQ,EAAc,EAC5B,GAAI,EAAOkB,KAAK,GAAG,CAAC,GAAI,KAAW,CAAM,CAAC,EAAE,CACxC,MAAO,CACH,EAAgB,EAAqB,CAAM,CAAC,EAAE,CAAE,IAAOlB,MAAM,IAAI,CAAC,CAC9D,OAAQ,CACZ,EAAG,IACH,EACH,CA4BL,IAAMG,EAAiB,AA1BI,EAAO,MAAM,CAAC,CAAC,EAAU,EAAG,KACnD,IAAM,EAAK,EAAc,EAAI,EACvB,EAAI,AAAM,IAAN,EACN,EAAO,EAAe,IACpB,EAAQ,EAAO,MAAM,CAAC,CAAC,EAAO,EAAO,KACvC,GAAI,EAAI,EACJ,EAAM,IAAI,CAAC,EAAe,SACvB,GAAI,EACP,GAAI,EAAI,EACJ,EAAM,IAAI,CAAC,SACR,CAEH,IADA,GAAO,EAAqB,EAAO,EAAC,EAIhC,MAAO,EAAE,CAFT,EAAM,IAAI,CAAC,EAInB,CAEJ,OAAO,CACX,EAAG,EAAE,EAIL,OAHI,EAAM,MAAM,EACZ,EAAS,IAAI,CAAC,GAEX,CACX,EAAG,EAAE,EACqC,GAAG,CAAC,AAAC,GAAI,EAAgB,IAEnE,OADAA,EAAe,IAAI,CAAC,GACbA,CACX,EAiKiE,GAAQ,AA1ErE,SAAS,EAAwB,CAAI,CAAE,CAAE,CAAE,EAAiB,CAAC,EAC7D,IAAM,EAAa,EAAe,GAC5B,EAAc,EAAW,MAAM,CACrC,GAAI,EAAO,IAAM,EAAK,IAAM,IAAS,EAEjC,MAAO,CACH,EAA0B,EAAM,EAFtB,EAAiB,GAG9B,CAEL,IAAMa,EAAW,EAAe,GAChC,GAAI,IAAgBA,EAAS,MAAM,CAG/B,OADc,EAAO,AADA,AAhEzB,UAA6B,CAAI,CAAE,CAAE,EACrC,IAAMvB,EAAS,EAAE,CACb,EAAM,EACN,EAAS,EACb,GAEQ,EADJ,IAAU,EAAC,IAEPA,EAAO,IAAI,CAAC,CACR,EACAyB,KAAK,GAAG,CAAC,EAAS,EAAG,GACxB,EACD,EAAM,SAEN,GAAU,EAAI,CACtB,OAAOzB,CACX,GAiDiD,EAAM,GACb,GAAG,CAAC,CAAC,CAAC,EAAM,EAAG,GAAG,EAAwB,EAAM,EAAI,KAG1F,IAAM,EAAc,AA/CpB,SAAyB,CAAC,CAAE,CAAC,EAC7B,IAAM,EAAM,EAAE,MAAM,CACpB,GAAI,IAAQ,EAAE,MAAM,EAAI,CAAC,CAAC,EAAE,GAAK,CAAC,CAAC,EAAE,CACjC,OAAO,KAEX,IAAI,EAAS,CAAC,CAAC,EAAE,CAAC,QAAQ,GACtB,EAAQ,EACR,EAAQ,EACR,EAAQ,GACRwC,EAAQ,GACZ,IAAI,IAAI,EAAI,EAAG,EAAI,EAAK,IAGhB,AAFJ,GAAQ,CAAC,CAAC,EAAE,AAAD,IACX,GAAQ,CAAC,CAAC,EAAE,AAAD,GACY,AAAU,KAAV,GAAgBA,AAAU,KAAVA,EACnC,GAAU,GAEV,GAAS,EACTA,GAAS,GAGjB,MAAO,CACH,EACArC,SAAS,EAAO,IAChBA,SAASqC,EAAO,IACnB,AACL,EAsBwC,EAAYjB,GAChD,GAAIhB,MAAM,OAAO,CAAC,GAAc,CAC5B,GAAM,CAAC,EAAQ,EAAO,EAAI,CAAG,EAEvB,EAAY,EAAwB,EAAO,EADzB,EAAc,EAAO,MAAM,EAEnD,MAAO,CACH,EAAgBA,MAAM,IAAI,CAAC,EAAQ,GAAiB,EAA8B,IACrF,AACL,CACA,IAAM,EAAQA,MAAM,IAAI,CAAC,CACrB,OAAQ,EAAc,CAC1B,GACM,EAAgB,EAA0B,CAAU,CAAC,EAAE,CAAG,EAAGgB,CAAQ,CAAC,EAAE,CAAG,GAmCjF,MA3PO,AAyNQ,IACR,EAAM,GAAG,CAAC,CAAC,EAAG,KACb,IAAMvB,EAAK,EAAc,EAAI,EACvB,EAAIiB,OAAO,EAAI,GACrB,OAAO,EAAgB,EAAW,GAAG,CAAC,CAAC,EAAO,IAC1C,AAAI,EAAIjB,EACG,EAAe,GAEtB,EAAIA,EACG,EAA0B,EAAG,GAEjC,EAA0B,EAAQ,EAAG,IAEpD,MAEG,EAAgB,CACf,EAAgB,EAAeO,MAAM,IAAI,CAAC,CACtC,OAAQ,EAAc,CAC1B,EAAG,IAAI,MACV,CAAG,EAAE,IACH,EAAM,GAAG,CAAC,CAAC,EAAG,KACb,IAAMP,EAAK,EAAc,EAAI,EACvB,EAAIiB,OAAO,EAAI,GACrB,OAAO,EAAgBM,EAAS,GAAG,CAAC,CAAC,EAAO,IACxC,AAAI,EAAIvB,EACG,EAAe,GAEtB,EAAIA,EACG,EAA0B,EAAG,GAEjC,EAA0B,EAAG,EAAQ,IAEpD,GACH,CA1Pe,MAAM,CAAC,CAAC,EAAU,KAC9B,IAAM,EAAW,CAAQ,CAAC,EAAS,MAAM,CAAG,EAAE,CAC9C,GAAI,GAAY,AAAc,gBAAd,EAAK,IAAI,EAAsB,AAAkB,gBAAlB,EAAS,IAAI,EAAsB,EAAK,WAAW,CAAC,MAAM,GAAK,EAAS,WAAW,CAAC,MAAM,CAAE,CACvI,IAAM,EAAS,EAAS,WAAW,CAAC,WAAW,CAAC,CAACe,EAAM,EAAK,SApC5C,EAqCZ,GAAI,CAACA,EACD,OAAOA,EAEX,IAAM,GAxCM,EAwCoB,EAAK,WAAW,CAAC,EAAE,CAvC/D,AAAI,EAuCmC,IAvClB,EAAW,IAAM,AAuCC,EAvCC,KAAK,GAAK,EAAE,KAAK,CAC9C,EAEP,EAoCmC,EApCrB,OAAS,EAAiB,IAAME,OAAO,EAAE,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,EAAIA,OAAO,AAoCxD,EApC0D,KAAK,GAAM,EACjG,CACH,GAAG,CAAC,CACJ,YAAa,CACT,CACI,GAAG,EAAE,WAAW,CAAC,EAAE,CACnB,KA8BuB,CA7B3B,EACH,AACL,EAEA,EAyBmC,IAzBZ,EAAW,EAAG,OAASA,OAAO,EAAE,KAAK,EAAIA,OAAO,AAyBpC,EAzBsC,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,GAAM,EAC/F,CACH,GAuB+B,CAAG,CAtBlC,YAAa,CACT,CACI,GAAG,AAoBoB,EApBlB,WAAW,CAAC,EAAE,CACnB,GAAI,CACR,EACH,AACL,EAEG,aAeK,AAAI,GACAF,EAAK,OAAO,CAAC,GAIVA,GAFI,IAGf,EAAG,EAAE,EACD,IACA,EAAK,WAAW,CAAG,EACnB,EAAS,GAAG,GAEpB,CAEA,OADA,EAAS,IAAI,CAAC,GACP,CACX,EAAG,EAAE,CAsOT,EAWiG,EAAM,GAEnG,OADc,EAA8B,EAEhD,CAkRA,IAAM,EAAiB,CACnB,YAAa,GACb,YAAa,GACb,qBAAsB,GACtB,oBAAqB,EACzB,EA2BI,SAAS,EAAkB,EAAU,CAAC,CAAC,EACvC,OAAO,AAhOP,SAAsB,CAAO,MAlZV,EA9DF,MAgEX,EAmZN,MAldO,AAAe,UAAf,OA6DY,EAnOZ,CACH,KAAM,SACN,KAqnByC,EADxB,EAAQ,GAAG,CAAC,CAAC,CAAE,UAAQ,CAAG,GAAG,EAAmB,EAAS,IAAI,IAnnB9E,MAAO,EACX,EAiOM,EAAW,UAAmB,CAAC,EAxDE,AAwDkB,aAxDHM,OAAS,AAwDN,EAxDU,QAAQ,GAAK,UAAmB,CAwD1C,KAAS,MAAM,GACxE,UAAmB,CAAC,EAAU,CAC1B,MAAO,CAAQ,EACX,GAAM,CAAE,QAAM,CAAG,MAAI,CAAG,CAAG,EACrB,CAAE,YAAU,CAAG,CAAG,CACxB,GAAK,SAAS,CAAG,GACb,CAAgB,WAAhB,EAAO,IAAI,EAAiB,AAAoB,gBAApB,EAAW,IAAI,EAAsB,AAAgB,eAAhB,EAAO,IAAI,EAAqB,AAAoB,gBAApB,EAAW,IAAI,EAAsB,AAAgB,gBAAhB,EAAO,IAAI,AAAiB,GAClK,EAAS,OAAO,CAAC,EAAS,IAAI,CAAC,UAAU,CAEjD,CACJ,GA1EiB,EA2EV,GA1E0B,IAAIA,OAAO,GAAO,IAAIA,OAAO,UAAmB,CAAC,EAAI,IAAI,EAAG,EAAI,KAAK,CAmd1G,EA4NwB,AAvBpB,SAAgC,EAAU,CAAC,CAAC,MA95Bd,EA+3BE,EAgChC,IA95BM,EA85BA,EAAe,CACjB,GAAG,CAAc,CACjB,GAAG,CAAO,AACd,EAKA,OAxCgC,EAsCV,AAzQtB,SAA+B,CAAQ,CAAE,CAAO,CAAE,EAAgB,GAAO,EACzE,IAAM,EAAS,EAAE,CACb,EAAa,GACb,EAAoB,GAiCxB,OAhCA,EAAc,OAAO,CAAC,AAACrB,QArBM,EAAY,EAsBrC,IArBE,EAIA,EACA,EACA,EAeI,EAAkB,EAAS,GAAG,CAACA,EAAM,MAAM,EACjD,GAAI,CAAC,EACD,OAEJ,GAAI,CAAEyC,QAAAA,CAAO,CAAG,YAAU,CAAG,YAAU,CAAG,CAAGzC,EACzCyC,IACA,EAAaA,EACb,EAAaA,GAEjB,IAAIC,GA/BqB,EA+BiB,EA/BL,EA+BiB,EA9BpD,EAAiB,CACnB,GA6BmF,CAAO,CA5B1F,oBAAqB,EACzB,EACM,EAAgB,AAAC,GAAMxB,EAAe,EAAK,EAAY,GACvD,EAAgB,AAAC,GAAMA,EAAe,EAAY,EAAK,GACvD,EAAa,GAAc,EAAa,AAAC,GAAM,EAAc,IAAQ,EAAc,GAAO,EAAa,EAAgB,EAAa,EAAgB,IAAI,GACvJ,AAuB+D,EAvBzD,MAAM,CAAC,GAwBZwB,CAAAA,EAAgB,MAAM,GAElB,IAAe1C,EAAM,MAAM,EAAI,IAC/ByC,EAAU,OACV,EAAa,OACb,EAAa,OACbC,EAAkB,EAClB,EAAO,GAAG,IAEd,EAAO,IAAI,CAAC,CACR,GAAG1C,CAAK,CACRyC,QAAAA,EACA,aACA,aACA,kBACAC,gBAAAA,CACJ,IAEJ,EAAoB,CAACD,GAAW,CAAC,GAAc,CAAC,EAChD,EAAazC,EAAM,MAAM,AAC7B,GACO,CACX,GAjsBkC,EAm6BT,AAp9BrB,SAAyB,EAAU,CAAC,CAAC,EACrC,GAAM,CAAE,UAAQ,CAAG,GAAG,EAAqB,CAAG,EAG9C,OAzBO,AAuBc,EAAa,EAAU,GAvBxB,MAAM,CAAC,CAAC,EAAU,KAClC,GAAM,CAAC,EAAQ,EAAe,EAAgB,CAAG,EAAQ,KAAK,CAAC,OACzD,EAAU,EAAU,GAI1B,MAAO,AAHU,CAAC,EAAe,EAAkB,AAnEvD,SAAqB,CAAI,CAAE,CAAE,EAC7B,IAAI,EAAY,EACV,EAAQ,EAAE,CAChB,IAAI,IAAI,EAAI,EAAG,GAAK,EAAG,IACnB,GAAI,CAAI,CAAC,EAAE,GAAK,CAAE,CAAC,EAAE,CAAE,CACnB,EAAY,EACZ,KACJ,CAEJ,IAAI,IAAI,EAAK,CAAI,CAAC,EAAU,CAAE,EAAM,CAAE,CAAC,EAAU,CAAE,GAAM,EAAK,IAC1D,EAAM,IAAI,CAAC,EAAK,GAAG,CAAC,CAAC,EAAG,IAAI,IAAM,EAAY,EAAK,IAEvD,OAAO,CACX,EAsDuE,EAAS,EAAU,IAAoB,CAClG,EACH,CAF2B,EAAE,AAE9B,EACgB,MAAM,CAAC,CAAC,EAAU,KAC1B,GACA,EAAS,IAAI,CAAC,CACV,SACA,QAAS,CACb,GAEG,GACR,EACP,EAAG,EAAE,CAWT,EA+8ByC,GAl6B/B,EAAQ,IAAIoB,IAClB,EAAS,OAAO,CAAC,CAAC,CAAE,QAAM,CAAG,SAAO,CAAG,IACnC,IAAM,EAAW,EAAM,GAAG,CAAC,GAC3B,GAAI,EAAU,CACV,IAAM,EAAa,EAAQ,IAAI,CAAC,IAC5B,GAAS,KAAK,CAAC,AAAC,GAAI,EAAE,IAAI,CAAC,OAAS,IACpC,EAAS,IAAI,CAAC,GAElB,MACJ,CACA,EAAM,GAAG,CAAC,EAAQ,CACd,EACH,CACL,GACA,EAAM,OAAO,CAAC,AAAC,IACX,EAAS,IAAI,CAAC,CAAC,EAAG,KACd,IAAI,IAAM,KAAK,EACX,GAAI,CAAC,CAAC,EAAE,GAAK,CAAC,CAAC,EAAE,CACb,OAAO,CAAC,CAAC,EAAE,CAAG,CAAC,CAAC,EAAE,CAG1B,OAAO,CACX,EACJ,GACO,GA44BqD,GArCrD,EAAe,GAAG,CAAC,CAAC,CAAE,MAAO,CAAW,CAAG,SAAO,CAAG,YAAU,CAAG,iBAAe,CAAG,GAAG,EAAO,IACjG,IAAI,EAAW,EAAW,GAO1B,OANI,AAAC,GACD,GAAW,AApCvB,SAA8B,CAAK,CAAE,CAAQ,CAAE,CAAO,EAClD,GAAM,CAAEY,oBAAAA,CAAmB,CAAG,CAAG,EAC3B,EAAW,EAAW,GACtB,EAAgBA,GAAuB,EAAS,MAAM,CAAG,CAC3D,CAAQ,CAAC,EAAE,CACd,CAAG,EACE,EAAwB,EAAc,MAAM,CAAC,CAAC,EAAuB,IAAUP,KAAK,GAAG,CAAC,EAAuB,AA97BrH,SAAqC,CAAO,CAAE,CAAO,EACrD,GAAM,CAAE,aAAW,CAAG,aAAW,CAAG,sBAAoB,CAAG,CAAG,EAC1D,EAAoB,EAAc,EAAI,EAAc,EAAI,EAC5D,GAAI,EACA,IAAI,IAAI,EAAI,EAAoB,EAC5B,AAD+B,EAAI,GAC/B,AAAe,IAAf,CAAO,CAAC,EAAE,EAAU,AAAsB,IAAtB,EADc,IAItC,IAGR,OAAO,CACX,EAk7BqJ,EAAS,IAAW,GAC/J,EAAqB,AAjG3B,SAAS,EAAsB,CAAK,CAAE,CAAmB,EACzD,IAtCM,EACF,EAqCE,EAAW,EAAW,GACtB,EAAkBA,KAAK,GAAG,EAvC1B,EAAW,EAuCuC,GAtCpD,EAAQ,EACZ,UAAmB,CAAC,EAAU,CAC1B,MAAO,CAAQ,EACP,EAAoB,EAAS,IAAI,GACjC,GAER,CACJ,GACO,GA8B4D,GAAuB,KACpF,EAAc,EAAE,CAClB,EAAiB,EACjBP,EAAwB,SA8B5B,CA7BA,UAAmB,CAAC,EAAU,EAAS,CACnC,MAAO,CACH,KAAK,CAAE,MAAI,CAAG,QAAM,CAAG,GACnB,AAAI,IAAS,IAGT,CAAC,EAAiB,KAGlB,IAAW,GACXA,CAAAA,EAAwB,EAAI,EAEzB,EAAiB,GAE5B,KAAM,CAAE,MAAI,CAAG,QAAM,CAAG,EAChB,IAAS,GAAY,IAAW,GAAY,EAAiB,IAAUA,CAAAA,GAAyB,EAAiB,GAAK,EAAiB,CAAc,GACrJ,EAAY,IAAI,CAAC,EAEzB,CACJ,EACA,MAAO,GACH,CAAI,EAAoB,EAAS,IAAI,IAAK,GAAiB,CAAc,IACrEA,EAAwB,GACxB,IACO,GAInB,IACI,AAAuB,IAAvB,EAAY,MAAM,EAAW,EAAoB,CAAW,CAAC,EAAE,GAG5D,EAFI,EAAsB,CAAW,CAAC,EAAE,CAAE,EAGrD,EA0DqD,EAAU,GACrD,EAAe,KAAiC,EAAc,GAAG,CAAC,AAAC,GAAU,AArDnF,UAA6B,CAAa,CAAE,CAAO,EACnD,GAAM,CAAE,aAAW,CAAG,aAAW,CAAG,qBAAmB,CAAG,CAAG,EACvD,EAAc,CAAa,CAAC,EAAE,GAAK,IAAW,EAAI,EAAc,EAAI,EAAc,EAAI,EAC5F,GAAI,EAAqB,CACrB,IAAM,EAAiB,EAAE,CACrB,EAAc,GACd,EAAI,EACJd,EAAQ,EACN,EAAe,AAAC,GAAI,CAAC,EAAO,IAC1B,AAAI,GAAK,EACE,KAEXA,EAAQG,MAAM,OAAO,CAAC,GAAS,CAAK,CAAC,EAAE,CAAG,EACtC,EAAI,GACG,EAAgBH,GAEvB,EAAI,EACG,IAEJ,EAAaA,EAAQ,GAEpC,IAAI,IAAI,EAAI,EAAc,EAAG,GAAK,EAAG,IAC7B,KAAgB,CAAa,CAAC,EAAE,AAAD,IAGnC,EAAc,GACd,EAAe,IAAI,CAAC,EAAc,GAAG,CAAC,EAAa,KACnD,EAAI,GAER,OAAO,CACX,CAUA,MAAO,CATiB,EAAc,GAAG,CAAC,CAAC,EAAO,IAC9C,AAAI,GAAK,EACE,IAEPG,MAAM,OAAO,CAAC,GACP,EAAa,CAAK,CAAC,EAAE,CAAE,CAAK,CAAC,EAAE,EAEnC,EAAgB,IAI1B,AACL,GAU2G,EAAS,GAAS,GAAG,CAAC,AAAC,QA5HnG,MACvBP,EACE,SAFqB,EA4HiI,EAAgB,AA93B5K,SAAS,EAAM,CAAK,MAKhB,EAJJ,GAAI,AAAU,OAAV,GAAkB,AAAiB,UAAjB,OAAO,EACzB,OAAO,EAEU,IAAM,EAAOO,MAAM,OAAO,CAAC,GAAS,EAAE,CAAG,CAAC,EAE/D,IAAI,KAAK,EACL,CAAI,CAAC,EAAE,CAAG,EAAM,CAAK,CAAC,EAAE,EAER,OAAO,CAC/B,EAo3BsL,IA3H9KP,EAAW,EAAW,GACpB,EAAmB,AAA+B,UAA/B,OA0HsL,GA1H3I,AA0H2I,EA1HrH,AA0H8G,EA1HtG,MAAM,CAAG,AA0H6F,EA1HrF,KAAK,CAAC,EA0HsF,GA1H5D,AA0HqD,EA1H7C,KAAK,GAChK,UAAmB,CAACA,EAAU,EAAS,CACnC,UACW,EAAQ,EAAiB,MAAM,CAE1C,MAAO,GACH,CAAI,EAAoB,EAAS,IAAI,IAAK,EAAiB,MAAM,GACzDA,IAAa,EAAS,IAAI,CAC1BA,EAAW,EAAiB,KAAK,GAEjC,EAAS,OAAO,CAAC,EAAiB,KAAK,IAEpC,GAInB,IACOA,MA0HP,OAhBA,UAAmB,CAAC,EAAU,EAAS,CACnC,MAAO,GACH,CAAI,CAAC,EAAmB,MAAM,GAG1B,EAAS,IAAI,GAAK,CAAkB,CAAC,EAAE,GACnC,AAA8B,IAA9B,EAAmB,MAAM,CACzB,EAAS,OAAO,CAAC,GAEjB,EAAS,MAAM,GAEnB,EAAmB,KAAK,IAErB,GAEf,IACO,CACX,EAU4C,EAAU,AAp2BlD,SAA8B,CAAQ,EACtC,GAAI,EAAS,MAAM,CAAG,EAClB,OAAO,EAEX,IAAM,EAAM,EAAS,MAAM,CAAG,EACxBA,EAAS,EAAE,CACb,EAAO,KACP,EAAU,CAAQ,CAAC,EAAE,CACrB,EAAQ,CACR,CAAO,CAAC,EAAW,KAAK,CAAC,CAC5B,CACG,EAAQ,CACR,CAAO,CAAC,EAAW,KAAK,CAAC,CAC5B,CACG,EAAQ,CACR,CAAO,CAAC,EAAW,KAAK,CAAC,CAC5B,CACG,EAAO,KACX,IAAI,IAAI,EAAI,EAAG,EAAI,EAAK,IAAI,CACxB,EAAO,CAAQ,CAAC,EAAI,EAAE,CACtB,EAAU,CAAQ,CAAC,EAAE,EAAI,EAAE,CAC3B,IAAI,IAAI,EAAI,EAAW,KAAK,CAAE,GAAK,EAAW,KAAK,CAAE,IAAI,CACrD,GAAI,AAAC,KAAM,GAAQ,AAAS,OAAT,CAAY,GAAM,CAAI,CAAC,EAAE,CAAG,IAAM,CAAO,CAAC,EAAE,EAAI,AAzF3E,SAAuB,CAAC,CAAE,CAAC,CAAE,EAAO,CAAC,EACrC,IAAM,EAAM,EAAE,MAAM,CACpB,IAAI,IAAI,EAAI,EAAM,EAAI,EAAK,IACvB,GAAI,CAAC,CAAC,EAAE,GAAK,CAAC,CAAC,EAAE,CACb,MAAO,GAGf,MAAO,EACX,EAiF6F,EAAM,EAAS,EAAI,GAAI,CACpG,EAAO,EACH,IAAM,EAAW,KAAK,CACtB,EAAM,IAAI,CAAC,CAAO,CAAC,EAAW,KAAK,CAAC,EAEpC,EAAQ,CAAO,CAAC,EAAW,KAAK,CAAC,CAEjC,IAAM,EAAW,KAAK,CACtB,EAAM,IAAI,CAAC,CAAO,CAAC,EAAW,KAAK,CAAC,EAEpC,EAAQ,CAAO,CAAC,EAAW,KAAK,CAAC,CAEjC,IAAM,EAAW,KAAK,CACtB,EAAM,IAAI,CAAC,CAAO,CAAC,EAAW,KAAK,CAAC,EAEpC,EAAQ,CAAO,CAAC,EAAW,KAAK,CAAC,CAErC,KACJ,CACA,GAAI,IAAS,GAAK,CAAI,CAAC,EAAE,GAAK,CAAO,CAAC,EAAE,CAAE,CACtCA,EAAO,IAAI,CAAC,CACR,EAAgB,GAChB,EAAgB,GAChB,EAAgB,GACnB,EACD,EAAQ,CACJ,CAAO,CAAC,EAAW,KAAK,CAAC,CAC5B,CACD,EAAQ,CACJ,CAAO,CAAC,EAAW,KAAK,CAAC,CAC5B,CACD,EAAQ,CACJ,CAAO,CAAC,EAAW,KAAK,CAAC,CAC5B,CACD,EAAO,KACP,KACJ,CACJ,CACJ,CACA,OAAOA,CACX,EAsyB2E,GAAkB,CAC7E,GAkCmD,CAAY,CAjC/D,oBAAqB,CAAC,GAAc,AAiCe,EAjCP,mBAAmB,AACnE,EAAC,EAEE,CACH,MAAO,KACP,cACA,WACA,UACA,aACA,kBACA,GAAG,CAAK,AACZ,CACJ,EAuBJ,EAa+C,GAC/C,C,sDCznCO,IAAM,EAAU,CACrB,CACE,MAAO,kBACP,OAAQ,KACR,WAAY,CACV,EACA,IACA,IACD,AACH,EAKA,CACE,MAAO,gBACP,OAAQ,KACR,QAAS,CACP,EACA,EACA,EACD,AACH,EACA,CACE,MAAO,gBACP,OAAQ,KACR,QAAS,CACP,EACA,EACA,EACD,AACH,EACA,CACE,MAAO,gBACP,OAAQ,KACR,QAAS,CACP,GACA,EACA,EACD,AACH,EACA,CACE,MAAO,mBACP,OAAQ,KACR,QAAS,CACP,GACA,EACA,EACD,AACH,EACA,CACE,MAAO,gCACP,OAAQ,MACV,EACA,CACE,MAAO,kCACP,OAAQ,SACV,EACA,CACE,MAAO,uCACP,OAAQ,QACV,EAIA,CACE,MAAO,mFACP,OAAQ,SACR,WAAY,CACV,GACA,IACA,IACD,AACH,EAMA,CACE,MAAO,oFACP,OAAQ,QACV,EAIA,CACE,MAAO,gDACP,OAAQ,QACR,WAAY,CACV,GACA,GACA,EACD,AACH,EAIA,CACE,MAAO,mCACP,OAAQ,QACR,WAAY,CACV,GACA,EACA,EACD,AACH,EACA,CACE,MAAO,kGACP,OAAQ,SACV,EAIA,CACE,MAAO,uGACP,OAAQ,UACR,QAAS,CACP,EACA,EACA,EACD,AACH,EACA,CACE,MAAO,aACP,OAAQ,SACV,EACA,CACE,MAAO,gBACP,OAAQ,UACR,QAAS,CACP,EACA,EACA,EACD,AACH,EACA,CACE,MAAO,iBACP,OAAQ,UACR,QAAS,CACP,EACA,EACA,EACD,AACH,EACA,CACE,MAAO,gBACP,OAAQ,UACR,QAAS,CACP,EACA,EACA,EACD,AACH,EACA,CACE,MAAO,sBACP,OAAQ,UACR,QAAS,CACP,EACA,EACA,EACD,AACH,EACA,CACE,MAAO,oBACP,OAAQ,UACR,QAAS,CACP,EACA,EACA,EACD,AACH,EACA,CACE,MAAO,0CACP,OAAQ,SACV,EAIA,CACE,MAAO,4DACP,OAAQ,UACR,QAAS,CACP,EACA,EACA,EACD,AACH,EACA,CACE,MAAO,8CACP,OAAQ,IACV,EACA,CACE,MAAO,qDACP,OAAQ,IACV,EAIA,CACE,MAAO,6CACP,OAAQ,SACR,WAAY,CACV,GACA,GACA,EACD,AACH,EAIA,CACE,MAAO,0CACP,OAAQ,SACR,WAAY,CACV,GACA,EACA,EACD,AACH,EACA,CACE,MAAO,2CACP,OAAQ,QACV,EACA,CACE,MAAO,gDACP,OAAQ,SACV,EACA,CACE,MAAO,2BACP,OAAQ,QACV,EACA,CACE,MAAO,2DACP,OAAQ,QACV,EACA,CACE,MAAO,+BACP,OAAQ,SACV,EACA,CACE,MAAO,iDACP,OAAQ,QACV,EACA,CACE,MAAO,6CACP,OAAQ,OACV,EACA,CACE,MAAO,sCACP,OAAQ,OACV,EACD,A"}